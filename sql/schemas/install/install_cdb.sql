-- NOTE: This script is not intended to be used directly but through install.sql

SET DEFINE '^'
SET ESCAPE OFF
SET ESCAPE '\'
SET VERIFY OFF
SET ECHO OFF

PROMPT INFO: Creating Live SQL SCHEMAS PDB...

DEFINE CDB_SID = '^1'
DEFINE PDB_NAME = '^2'
DEFINE PDB_ADMIN_USERNAME = '^3'
DEFINE PDB_ADMIN_PASSWORD = '^4'

WHENEVER SQLERROR EXIT 1

SET FEEDBACK OFF
BEGIN
    IF NVL( LENGTH( '^PDB_ADMIN_PASSWORD' ), 0 ) = 0 THEN
        RAISE_APPLICATION_ERROR( -20000, 'PDB ADMIN password not provided' );
    END IF;
END;
/
SET FEEDBACK ON

SET SERVEROUTPUT ON
SET FEEDBACK OFF
DECLARE
    L_RESULT NUMBER;
BEGIN
    SELECT
        1
    INTO
        L_RESULT
    FROM
        DUAL
    WHERE
        -- NOTE: Check if we're on the CDB
        SYS_CONTEXT( 'USERENV', 'CON_NAME' ) = 'CDB$ROOT'
        -- NOTE: Check if a PDB with the provided name doesn't exist
        AND NOT EXISTS ( SELECT 1 FROM V$PDBS WHERE NAME = '^PDB_NAME' );
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR( -20000, 'ERROR: This script must be executed in the CDB$ROOT and the PDB "^PDB_NAME." must not exist.' );
END;
/
SET FEEDBACK ON
SET SERVEROUTPUT OFF

CREATE PLUGGABLE DATABASE "^PDB_NAME"
    ADMIN USER "^PDB_ADMIN_USERNAME" IDENTIFIED BY "^PDB_ADMIN_PASSWORD"
    STORAGE UNLIMITED
    FILE_NAME_CONVERT=(
        '/opt/oracle/oradata/^CDB_SID./pdbseed/',
        '/opt/oracle/oradata/^CDB_SID./^PDB_NAME./'
    )
    TEMPFILE REUSE;
ALTER PLUGGABLE DATABASE "^PDB_NAME" OPEN READ WRITE;
ALTER PLUGGABLE DATABASE "^PDB_NAME" SAVE STATE;

ALTER SESSION SET CONTAINER="^PDB_NAME";

GRANT DBA TO "^PDB_ADMIN_USERNAME" WITH ADMIN OPTION;
GRANT CONNECT TO "^PDB_ADMIN_USERNAME" WITH ADMIN OPTION;
GRANT RESOURCE TO "^PDB_ADMIN_USERNAME" WITH ADMIN OPTION;
GRANT EXECUTE ON DBMS_CRYPTO TO "^PDB_ADMIN_USERNAME" WITH GRANT OPTION;
GRANT EXECUTE ON DBMS_MVIEW TO "^PDB_ADMIN_USERNAME" WITH GRANT OPTION;
GRANT ALTER ANY MATERIALIZED VIEW TO "^PDB_ADMIN_USERNAME" WITH ADMIN OPTION;
GRANT SCHEDULER_ADMIN TO "^PDB_ADMIN_USERNAME" WITH ADMIN OPTION;
GRANT CREATE DOMAIN TO "^PDB_ADMIN_USERNAME" WITH ADMIN OPTION;

-- NOTE: Not doing ORDS operations here because it may not be installed in the PDB at this point

PROMPT INFO: Live SQL SCHEMAS PDB created
PROMPT INFO: Re-run install.sql connected the new PDB to continue

EXIT
