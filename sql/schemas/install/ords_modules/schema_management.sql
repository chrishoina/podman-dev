-- Generated by ORDS REST Data Services 24.3.1.r3061450
-- Schema: LIVE_SQL  Date: Tue May 20 07:12:53 2025 
--

DECLARE
  l_roles     OWA.VC_ARR;
  l_modules   OWA.VC_ARR;
  l_patterns  OWA.VC_ARR;

BEGIN
  ORDS.DEFINE_MODULE(
      p_module_name    => 'com.oracle.livesql.schema-management',
      p_base_path      => '/api/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'com.oracle.livesql.schema-management',
      p_pattern        => 'jobs/schema_creation/',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'com.oracle.livesql.schema-management',
      p_pattern        => 'jobs/schema_creation/',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    SCHEMA_CREATION_JOBS.*,
    SCHEMA_CREATION_JOBS.ID AS "$self",
    ''../../schemas/?q={"creation_job_id":'' || SCHEMA_CREATION_JOBS.ID || ''}'' AS "$schemas"
FROM
    SCHEMA_CREATION_JOBS');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'com.oracle.livesql.schema-management',
      p_pattern        => 'jobs/schema_creation/',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
    L_SCHEMA_CREATION_JOB_ID SCHEMA_CREATION_JOBS.ID%TYPE;
BEGIN
    INSERT INTO
        SCHEMA_CREATION_JOBS(
            NUMBER_OF_SCHEMAS,
            ARE_SCHEMAS_READ_ONLY
        )
        VALUES (
            :number_of_schemas,
            CASE WHEN TO_CHAR( :are_schemas_read_only ) = ''Y'' OR TO_CHAR( :are_schemas_read_only ) = ''1'' THEN ''Y'' ELSE ''N'' END
        )
    RETURNING ID INTO L_SCHEMA_CREATION_JOB_ID;
    COMMIT;

    DBMS_SCHEDULER.SET_JOB_ARGUMENT_VALUE(
        JOB_NAME => ''PROCESS_SCHEMA_CREATION_JOB'',
        ARGUMENT_NAME => ''P_SCHEMA_CREATION_JOB_ID'',
        ARGUMENT_VALUE => L_SCHEMA_CREATION_JOB_ID
    );
    DBMS_SCHEDULER.RUN_JOB (
        JOB_NAME => ''PROCESS_SCHEMA_CREATION_JOB'',
        USE_CURRENT_SESSION => FALSE
    );

    :forward_location := L_SCHEMA_CREATION_JOB_ID;
    :status := 201;
EXCEPTION
    WHEN OTHERS THEN
        :errorReason := UTILITIES.STRING_TO_ERROR_REASON( ''Bad Request'' );
        :status_code := 400;
END;');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'com.oracle.livesql.schema-management',
      p_pattern        => 'jobs/schema_creation/:job_id',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'com.oracle.livesql.schema-management',
      p_pattern        => 'jobs/schema_creation/:job_id',
      p_method         => 'GET',
      p_source_type    => 'json/item',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    SCHEMA_CREATION_JOBS.*,
    SCHEMA_CREATION_JOBS.ID AS "$self",
    ''../../schemas/?q={"creation_job_id":'' || SCHEMA_CREATION_JOBS.ID || ''}'' AS "$schemas"
FROM
    SCHEMA_CREATION_JOBS
WHERE
    ID = :job_id');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'com.oracle.livesql.schema-management',
      p_pattern        => 'schemas/',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'com.oracle.livesql.schema-management',
      p_pattern        => 'schemas/',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    SCHEMAS.*,
    SCHEMAS.ID AS "$self",
    ''../jobs/schema_creation/'' || SCHEMAS.CREATION_JOB_ID AS  "$creation_job"
FROM
    SCHEMAS');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'com.oracle.livesql.schema-management',
      p_pattern        => 'schemas/:schema_id',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'com.oracle.livesql.schema-management',
      p_pattern        => 'schemas/:schema_id',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    SCHEMAS.*,
    SCHEMAS.ID AS "$self",
    ''../jobs/schema_creation/'' || SCHEMAS.CREATION_JOB_ID AS  "$creation_job"
FROM
    SCHEMAS
WHERE
    ID = :schema_id');


  ORDS.CREATE_ROLE(p_role_name => 'SCHEMAS_ADMINISTRATOR_ROLE');

  l_roles(1) := 'SCHEMAS_ADMINISTRATOR_ROLE';
  l_modules(1) := 'com.oracle.livesql.schema-management';

  ORDS.DEFINE_PRIVILEGE(
      p_privilege_name => 'SCHEMAS_API',
      p_roles          => l_roles,
      p_patterns       => l_patterns,
      p_modules        => l_modules,
      p_label          => 'Schemas API',
      p_description    => 'Provides Access to the Schemas API',
      p_comments       => NULL);

  l_roles.DELETE;
  l_modules.DELETE;
  l_patterns.DELETE;
        
COMMIT;

END;
/

-- SECTION- Commented out endpoints

-- BEGIN
--       ORDS.DEFINE_TEMPLATE(
--           p_module_name    => 'com.oracle.livesql.schema-management',
--           p_pattern        => 'create/:number_of_schemas',
--           p_priority       => 0,
--           p_etag_type      => 'HASH',
--           p_etag_query     => NULL,
--           p_comments       => NULL);
    
--       ORDS.DEFINE_HANDLER(
--           p_module_name    => 'com.oracle.livesql.schema-management',
--           p_pattern        => 'create/:number_of_schemas',
--           p_method         => 'POST',
--           p_source_type    => 'plsql/block',
--           p_mimes_allowed  => NULL,
--           p_comments       => NULL,
--           p_source         => 
--     'DECLARE
--         l_schema_table  SCHEMA_TABLE_T :=  SCHEMA_TABLE_T();
--     BEGIN
--         l_schema_table := SCHEMA_MANAGEMENT.DEPLOY_SCHEMAS( TO_NUMBER( :number_of_schemas ) );
--         FOR i IN 1..l_schema_table.count LOOP
--             INSERT INTO SCHEMAS(
--                 NAME,
--                 ALIAS,
--                 CLIENT_ID,
--                 CLIENT_SECRET,
--                 STATUS,
--                 DATABASE_ID,
--                 CREATED_BY,
--                 UPDATED_BY
--             ) VALUES (
--                 l_schema_table(i).schema_name,
--                 l_schema_table(i).rest_details.url_mapping,
--                 l_schema_table(i).rest_details.client_id,
--                 l_schema_table(i).rest_details.client_secret,
--                 ''AVAILABLE'',
--                 1,
--                 -- Setting this to LIVE_SQL for test purposes on APEX.
--                 -- :current_user,
--                 -- :current_user
--                 ''LIVE_SQL'',
--                 ''LIVE_SQL''
--             );     
--         END LOOP;
--         :status_code := 201;
--     EXCEPTION
--         WHEN OTHERS THEN
--             :errorReason := UTILITIES.GET_ERROR_REASON_STRING( ' || 'SQLERRM );
--             :status_code := 400;
--     END;');

--       ORDS.DEFINE_TEMPLATE(
--           p_module_name    => 'com.oracle.livesql.schema-management',
--           p_pattern        => 'schemas-old/',
--           p_priority       => 0,
--           p_etag_type      => 'HASH',
--           p_etag_query     => NULL,
--           p_comments       => NULL);

--       ORDS.DEFINE_HANDLER(
--           p_module_name    => 'com.oracle.livesql.schema-management',
--           p_pattern        => 'schemas-old/',
--           p_method         => 'GET',
--           p_source_type    => 'json/collection',
--           p_items_per_page => 25,
--           p_mimes_allowed  => NULL,
--           p_comments       => NULL,
--           p_source         => 
--     'with size_table as (
--         select 
--             u.username, 
--             u.created, 
--             round(nvl(sum(s.bytes)/1024/1024,0),2) size_mb
--         from dba_users u
--             left outer join dba_segments s on (s.owner = u.username)
--         group by u.username, u.created
--         order by u.username
--     )
--     SELECT
--         sch.*,
--         st.size_mb
--     FROM
--         SCHEMAS sch left join size_table st on ( sch.name = st.username )');

--       ORDS.DEFINE_HANDLER(
--           p_module_name    => 'com.oracle.livesql.schema-management',
--           p_pattern        => 'schemas-old/',
--           p_method         => 'POST',
--           p_source_type    => 'plsql/block',
--           p_mimes_allowed  => 'application/json',
--           p_comments       => NULL,
--           p_source         => 
--     'BEGIN
--         IF :number_of_schemas IS NOT NULL THEN
--             INSERT INTO JOBS (
--                 NUMBER_OF_SCHEMAS,
--                 DATABASE_ID
--                 -- By default we have the "PENDING" status
--                 -- STATUS
--             ) VALUES (
--                 :number_of_schemas,
--                 :database_id
--             );
--         ELSE
--             :errorReason := ''Invalid parameters'';
--             :status_code := 400;
--         END IF;
--         :status_code := 201;
--     EXCEPTION
--         WHEN OTHERS THEN
--             :errorReason := UTILITIES.GET_ERROR_REASON_STRING( SQLERRM );
--             :status_code := 400;
--     END;');

--       ORDS.DEFINE_TEMPLATE(
--           p_module_name    => 'com.oracle.livesql.schema-management',
--           p_pattern        => 'schemas-old/:schema_name',
--           p_priority       => 0,
--           p_etag_type      => 'HASH',
--           p_etag_query     => NULL,
--           p_comments       => NULL);

--       ORDS.DEFINE_HANDLER(
--           p_module_name    => 'com.oracle.livesql.schema-management',
--           p_pattern        => 'schemas-old/:schema_name',
--           p_method         => 'DELETE',
--           p_source_type    => 'plsql/block',
--           p_mimes_allowed  => NULL,
--           p_comments       => NULL,
--           p_source         => 
--     'BEGIN
--         -- Delete schema from Schemas table
--         DELETE FROM SCHEMAS WHERE NAME = :schema_name;

--         -- Delete schema from Database
--         EXECUTE IMMEDIATE ''DROP USER '' || DBMS_ASSERT.QUALIFIED_SQL_NAME( :schema_name ) || '' CASCADE'';
--         :status_code := 204;
--     EXCEPTION
--         WHEN OTHERS THEN
--             :errorReason := UTILITIES.GET_ERROR_REASON_STRING( SQLERRM );
--             :status_code := 400;
--     END;');
-- END;
-- /

-- !SECTION- Commented out endpoints
