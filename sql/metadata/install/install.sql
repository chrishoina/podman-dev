SET DEFINE '^'
SET ESCAPE '\'
SET VERIFY OFF
SET ECHO OFF

PROMPT INFO: Installing Live SQL METADATA...

DEFINE CDB_SID = '^1'
DEFINE PDB_NAME = '^2'
DEFINE PDB_ADMIN_USERNAME = '^3'
DEFINE PDB_ADMIN_PASSWORD = '^4'
DEFINE DEFAULT_TABLESPACE = '^5'
DEFINE TEMPORARY_TABLESPACE = '^6'
DEFINE LEGACY_DATA_DIRECTORY = '^7'

COLUMN :INSTALL_CDB_SCRIPT NEW_VALUE INSTALL_CDB_SCRIPT NOPRINT
VARIABLE INSTALL_CDB_SCRIPT VARCHAR2(255)
COLUMN :INSTALL_PDB_SCRIPT NEW_VALUE INSTALL_PDB_SCRIPT NOPRINT
VARIABLE INSTALL_PDB_SCRIPT VARCHAR2(255)
SET SERVEROUTPUT ON
SET FEEDBACK OFF
DECLARE
    L_ROW_COUNT NUMBER;

    L_IS_AT_CDB BOOLEAN := SYS_CONTEXT( 'USERENV', 'CON_NAME' ) = 'CDB$ROOT';
    L_DOES_PDB_EXIST BOOLEAN;

    L_IS_AT_PDB BOOLEAN := SYS_CONTEXT( 'USERENV', 'CON_NAME' ) = '^PDB_NAME';
BEGIN
    SELECT COUNT(1) INTO L_ROW_COUNT FROM V$PDBS WHERE NAME = '^PDB_NAME';
    L_DOES_PDB_EXIST := L_ROW_COUNT = 1;
    L_ROW_COUNT := NULL;

    :INSTALL_CDB_SCRIPT := '../../utilities/nothing.sql';
    :INSTALL_PDB_SCRIPT := '../../utilities/nothing.sql';

    IF L_IS_AT_CDB AND NOT L_DOES_PDB_EXIST THEN
        :INSTALL_CDB_SCRIPT := 'install_cdb.sql';
    ELSIF L_IS_AT_PDB THEN
        :INSTALL_PDB_SCRIPT := 'install_pdb.sql';
    ELSIF L_DOES_PDB_EXIST THEN
        DBMS_OUTPUT.PUT_LINE( 'WARNING: PDB "^PDB_NAME." already exists. Did you mean to execute this script at the PDB level?' );
    ELSE
        RAISE_APPLICATION_ERROR( -20000, 'ERROR: An error occurred while validating the PDB name' );
    END IF;
END;
/
SET FEEDBACK ON
SET SERVEROUTPUT ON
SET TERMOUT OFF
SELECT :INSTALL_CDB_SCRIPT FROM DUAL;
SELECT :INSTALL_PDB_SCRIPT FROM DUAL;
SET TERMOUT ON

@@^INSTALL_CDB_SCRIPT '^CDB_SID' '^PDB_NAME' '^PDB_ADMIN_USERNAME' '^PDB_ADMIN_PASSWORD'
@@^INSTALL_PDB_SCRIPT '^PDB_NAME' '^PDB_ADMIN_USERNAME' '^PDB_ADMIN_PASSWORD' '^DEFAULT_TABLESPACE' '^TEMPORARY_TABLESPACE' '^LEGACY_DATA_DIRECTORY'

EXIT
