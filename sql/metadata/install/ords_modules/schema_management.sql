-- Generated by ORDS REST Data Services 24.1.0.r1080942
-- Schema: LIVE_SQL  Date: Tue Jul 16 03:40:01 2024 
--

DECLARE
  l_roles     OWA.VC_ARR;
  l_modules   OWA.VC_ARR;
  l_patterns  OWA.VC_ARR;

BEGIN
  ORDS.DEFINE_MODULE(
      p_module_name    => 'com.oracle.livesql.schema-management',
      p_base_path      => '/api/schemas/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'com.oracle.livesql.schema-management',
      p_pattern        => '.',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'com.oracle.livesql.schema-management',
      p_pattern        => '.',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    SCHEMAS.*,
    SCHEMAS.ID AS "$self"
FROM
    SCHEMAS');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'com.oracle.livesql.schema-management',
      p_pattern        => '.',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
    L_SCHEMA_ID SCHEMAS.ID%TYPE;
BEGIN
    INSERT INTO
        SCHEMAS (
            DATABASE_ID,
            DATABASE_SCHEMA_ID,
            DATABASE_SCHEMA_CREATN_JOB_ID,
            NAME,
            IS_READ_ONLY,
            ALIAS,
            CLIENT_ID,
            CLIENT_SECRET
        )
        VALUES (
            :database_id,
            :database_schema_id,
            :database_schema_creatn_job_id,
            :name,
            :is_read_only,
            :alias,
            UTILITIES.HEX_ENCRYPT( :client_id ),
            UTILITIES.HEX_ENCRYPT( :client_secret )
        )
    RETURNING ID INTO L_SCHEMA_ID;

    :forward_location := L_SCHEMA_ID;
    :status_code := 201;
EXCEPTION
    WHEN OTHERS THEN
        :errorReason := UTILITIES.STRING_TO_ERROR_REASON( ''Bad Request'' );
        :status_code := 400;
END;');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'com.oracle.livesql.schema-management',
      p_pattern        => ':schema_id',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'com.oracle.livesql.schema-management',
      p_pattern        => ':schema_id',
      p_method         => 'GET',
      p_source_type    => 'json/item',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    SCHEMAS.*,
    SCHEMAS.ID as "$self"
FROM
    SCHEMAS
WHERE
    ID = :schema_id');

  ORDS.CREATE_ROLE(p_role_name => 'SCHEMAS_ADMINISTRATOR_ROLE');
    
  l_roles(1) := 'SCHEMAS_ADMINISTRATOR_ROLE';
  l_modules(1) := 'com.oracle.livesql.schema-management';

  ORDS.DEFINE_PRIVILEGE(
      p_privilege_name => 'SCHEMAS_API',
      p_roles          => l_roles,
      p_patterns       => l_patterns,
      p_modules        => l_modules,
      p_label          => 'Schemas API',
      p_description    => 'Provides Access to the Schemas API',
      p_comments       => NULL);

  l_roles.DELETE;
  l_modules.DELETE;
  l_patterns.DELETE;
        
COMMIT;

END;
/

-- SECTION- Commented out endpoints
-- DECLARE
--   l_roles     OWA.VC_ARR;
--   l_modules   OWA.VC_ARR;
--   l_patterns  OWA.VC_ARR;
-- BEGIN
--   ORDS.DEFINE_MODULE(
--       p_module_name    => 'com.oracle.sql.schema_management',
--       p_base_path      => '/schema_management/',
--       p_items_per_page => 25,
--       p_status         => 'PUBLISHED',
--       p_comments       => NULL);

--   ORDS.DEFINE_TEMPLATE(
--       p_module_name    => 'com.oracle.sql.schema_management',
--       p_pattern        => 'schemas/',
--       p_priority       => 0,
--       p_etag_type      => 'HASH',
--       p_etag_query     => NULL,
--       p_comments       => NULL);

--   ORDS.DEFINE_HANDLER(
--       p_module_name    => 'com.oracle.sql.schema_management',
--       p_pattern        => 'schemas/',
--       p_method         => 'GET',
--       p_source_type    => 'json/collection',
--       p_items_per_page => 25,
--       p_mimes_allowed  => NULL,
--       p_comments       => NULL,
--       p_source         => 
-- 'SELECT
--     SCHEMAS.*,
--     ID AS "$self"
-- FROM
--     SCHEMAS');

--   ORDS.DEFINE_HANDLER(
--       p_module_name    => 'com.oracle.sql.schema_management',
--       p_pattern        => 'schemas/',
--       p_method         => 'POST',
--       p_source_type    => 'plsql/block',
--       p_items_per_page => 25,
--       p_mimes_allowed  => 'application/json',
--       p_comments       => NULL,
--       p_source         => 
-- '-- Receives an array of schemas in JSON format, and adds them to SCHEMAS table 
-- /*{
--   "schemas": [
--     {
--       "schema_name": "<SCHEMA_EXAMPLE>",
--       "rest_details": {
--         "url_mapping": "<SCHEMA_ALIAS>",
--         "client_id": "<CLIENT_ID>",
--         "client_secret": "<CLIENT_SECRET>"
--       }
--     }
--   ],
--   "database_id": 1
-- } */
-- DECLARE
-- L_SCHEMAS JSON_ARRAY_T;
-- L_DATABASE_ID NUMBER;
-- L_RESPONSE JSON_OBJECT_T;
-- BEGIN
--     L_RESPONSE := JSON_OBJECT_T.parse(:body);
--     L_SCHEMAS := L_RESPONSE.GET_ARRAY( ''schemas'' );
--     L_DATABASE_ID := L_RESPONSE.GET_NUMBER( ''database_id'' );
--     SCHEMA_MANAGEMENT.ADD_NEW_SCHEMAS( L_DATABASE_ID, L_SCHEMAS.TO_CLOB );
--     :status_code := 201;
-- EXCEPTION
--     WHEN OTHERS THEN
--         :errorReason := UTILITIES.STRING_TO_ERROR_REASON( SQLERRM );
--         :status_code := 400;
-- END;');

    
--   ORDS.CREATE_ROLE(p_role_name => 'oracle.dbtools.role.autorest.LIVE_SQL');
    
--   l_roles(1) := 'RESTful Services';
--   l_roles(2) := 'SQL Developer';
--   l_roles(3) := 'Schema Administrator';
--   l_roles(4) := 'oracle.dbtools.autorest.any.schema';
--   l_roles(5) := 'oracle.dbtools.role.autorest.LIVE_SQL';
--   l_modules(1) := 'com.oracle.sql.schema_management';

--   ORDS.DEFINE_PRIVILEGE(
--       p_privilege_name => 'oracle.dbtools.privilege.schemas',
--       p_roles          => l_roles,
--       p_patterns       => l_patterns,
--       p_modules        => l_modules,
--       p_label          => 'Schema ADMIN',
--       p_description    => 'For handling schemas REST operations',
--       p_comments       => NULL);

--   l_roles.DELETE;
--   l_modules.DELETE;
--   l_patterns.DELETE;
        
-- COMMIT;
-- END;
-- /
-- !SECTION- Commented out endpoints