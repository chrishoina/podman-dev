SET DEFINE '^'
SET ESCAPE OFF
SET ESCAPE '\'
SET VERIFY OFF
SET ECHO OFF

DEFINE PDB_NAME = '^1'
DEFINE PDB_ADMIN_USERNAME = '^2'
DEFINE PDB_ADMIN_PASSWORD = '^3'

WHENEVER SQLERROR EXIT 1

SET FEEDBACK OFF
DECLARE
    L_RESULT NUMBER;
BEGIN
    SELECT
        1
    INTO
        L_RESULT
    FROM
        DUAL
    WHERE
        -- NOTE: Check if we're on the PDB
        SYS_CONTEXT( 'USERENV', 'CON_NAME' ) = '^PDB_NAME';
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR( -20000, 'This script must be executed in the "^PDB_NAME." PDB' );
END;
/
SET FEEDBACK ON

COLUMN :DROP_SCHEMA_SCRIPT NEW_VALUE DROP_SCHEMA_SCRIPT NOPRINT
VARIABLE DROP_SCHEMA_SCRIPT VARCHAR2(255)
SET FEEDBACK OFF
DECLARE
    L_ROW_COUNT NUMBER;

    L_IS_AT_PDB BOOLEAN := SYS_CONTEXT( 'USERENV', 'CON_NAME' ) = '^PDB_NAME';
    L_IS_LIVE_SQL_USER BOOLEAN := USER = 'LIVE_SQL';
    L_DOES_SCHEMA_EXISTS BOOLEAN;
BEGIN
    SELECT COUNT(1) INTO L_ROW_COUNT FROM ALL_USERS WHERE USERNAME = 'LIVE_SQL';
    L_DOES_SCHEMA_EXISTS := L_ROW_COUNT = 1;
    L_ROW_COUNT := NULL;

    :DROP_SCHEMA_SCRIPT := '../../utilities/nothing.sql';

    IF NOT L_IS_LIVE_SQL_USER AND L_IS_AT_PDB AND L_DOES_SCHEMA_EXISTS THEN
        :DROP_SCHEMA_SCRIPT := 'drop_schema.sql';
    END IF;
END;
/
SET FEEDBACK ON
SET TERMOUT OFF
SELECT :DROP_SCHEMA_SCRIPT FROM DUAL;
SET TERMOUT ON

SET FEEDBACK OFF
CONNECT "^PDB_ADMIN_USERNAME"/"^PDB_ADMIN_PASSWORD"
SET FEEDBACK ON
@@drop_ords_objects.sql
@@^DROP_SCHEMA_SCRIPT

SET FEEDBACK OFF
CONNECT "LIVE_SQL"/"^PDB_ADMIN_PASSWORD"
SET FEEDBACK ON
@@drop_objects.sql

PROMPT INFO: Live SQL METADATA uninstalled
PROMPT INFO: Re-run uninstall.sql at the PDB using a non Live SQL user to drop the schemas or at the CDB level to drop the METADATA PDB

EXIT
