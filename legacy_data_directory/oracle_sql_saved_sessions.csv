"ID","CREATED","ROW_KEY","GROUP_ID","SESSION_OWNER","SESSION_NAME","UPPER_SESSION_NAME","SHORT_DESCRIPTION","LONG_DESCRIPTION","SAVED_FROM_SESSION_ID","OWNER_EMAIL","COMPANY_OWNER","OWNER_COUNTRY","MODIFIED","VISIBILITY","TAGS","INVOCATIONS","SAVED_SESSION_STATUS","SHARE_KEY","LAST_SQL_INTEGER","AREA1_ID","AREA2_ID","MAX_ROWS","NLS_LANGUAGE","NLS_TERRITORY","NLS_CURRENCY","NLS_ISO_CURRENCY","NLS_NUMERIC_CHARACTERS","NLS_CALENDAR","NLS_DATE_FORMAT","NLS_DATE_LANGUAGE","NLS_TIME_FORMAT","NLS_TIMESTAMP_FORMAT","NLS_TIME_TZ_FORMAT","NLS_TIMESTAMP_TZ_FORMAT","NLS_DUAL_CURRENCY","NLS_SORT","REF_BOOK_SECTION_ID","REF_SCRIPT_NAME","LAST_RUN","LAST_SAVED","REF_BOOK_POINTER_URL","REQ_PUBLIC_STATUS","REQ_PUBLIC_DATE","REVIEW_DATE","REVIEW_USER","REVIEW_COMMENTS","INITIAL_REVIEW","VIEWS","FEATURED"
239014492800253726028285197892989898326,11-NOV-20 07.43.51.030477000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - TOP-N style queries","ANALYTICS - TOP-N STYLE QUERIES","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script is a demo of the TOP-N style queries possible with analytics. Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",239015876458142684037087048453163989482,"","","",11-MAY-24 06.33.05.180980000 AM,"PUBLIC","kiss, windows, oracle, analytics, dynamic",18,"","KXISMC0WO96V8YJAYF57JZ0KO",67865727,7,,,"","","","","","","","","","","","","","",,"",29-APR-24 05.37.16.905239000 AM,11-NOV-20 07.43.51.039920000 AM,"","APPROVED",11-NOV-20 07.43.51.030181000 AM,,"Auto Approved","","",47,""
338618467008156623051161024524395908696,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","MERGE example","MERGE EXAMPLE","This example creates item price table catalog1
to capture the price of various items.
A second table is created with updated item and price information.
In order to roll all the info into the original catalog1 table, merge is used,
since this is a standard UPDATE-else-INSERT task.
","",338618121620547599765802426328888798867,"","","",16-JUL-24 12.20.30.466692000 PM,"PUBLIC","merge, WHEN MATCHED",235,"","PC76LRDFG9YQ6O78EV8J0M0MI",63755,1,,,"","","","","","","","","","","","","","",,"",09-SEP-23 10.59.33.876488000 AM,19-JAN-16 03.50.40.276022000 PM,"","",,,"","","",695,""
333677252293334335915426612636264571900,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Hello World","HELLO WORLD","Simple example showing how to write text to the console.","",333667445241557555142773970997185539229,"","","",22-AUG-24 08.44.00.780021000 PM,"PUBLIC","DBMS_OUTPUT, pl/sql",7267,"","O5AYPPUSNCA05VMMTUIIXVFDA",40066,4,,,"","","","","","","","","","","","","","",,"",22-AUG-24 08.44.00.779914000 PM,17-MAR-16 05.07.11.649063000 AM,"","",,,"","","",12842,""
337436463573427455185753953401144249021,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","max out database objects","MAX OUT DATABASE OBJECTS","Create 200 database tables in a tight loop using execute immediate.","",337436463573412948075918577851047774909,"","","",30-APR-24 10.47.38.290374000 AM,"PUBLIC","limit testing",11,"","PBBYD1VR41VO8BWOR16JDZRKF",59483,1,,,"","","","","","","","","","","","","","",,"",29-FEB-24 02.20.19.945696000 PM,14-OCT-15 04.56.38.566774000 PM,"","",,,"","","",36,""
332019070065812619000672219850703773655,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Example Type","EXAMPLE TYPE","Customer Address type made up of a street address, postal code, city, state, country code.","",332019070065787231558460312638034943959,"","","",15-AUG-24 12.48.59.084686000 PM,"PUBLIC","type",330,"","332096215622546072501023568361905885656332096215622547281426843182991080591832",2191838,11,1,,"","","","","","","","","","","","","","",,"",25-MAY-24 02.23.21.235574000 AM,22-FEB-17 08.15.56.743990000 PM,"","",,,"","","",1040,""
333649649279912908850999066064396661652,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Recycle Bin","RECYCLE BIN","Drop and undrop table using flashback and recycle bin.  Drop a table, restore a table, then redtop and purge the recycle bin.","",333649649279874223224771397930806064020,"","","",11-JUL-24 02.30.19.770636000 AM,"PUBLIC","recycle bin",15,"","O49DCR6F9AJQLPD0Y1R4VAXPI",39373,1,2,,"","","","","","","","","","","","","","",,"",27-FEB-23 07.17.56.587963000 AM,26-OCT-15 08.02.09.071661000 AM,"","",,,"","","",54,""
333663001884012307548296820455381835220,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","World Population Queries","WORLD POPULATION QUERIES","Aggregation and various queries on shared world population schema data.","",333667445241557555142773970997185539229,"","","",21-AUG-24 07.34.46.264532000 PM,"PUBLIC","AGGREGATION, TOP-N, TOP-10, LEAD, RANK",1683,"","O4943N2SKRVJZUG12Y9VLFZHI",39746,1,,,"","","","","","","","","","","","","","",,"",20-AUG-24 05.40.21.554988000 PM,25-JAN-19 03.46.11.659799000 PM,"","APPROVED",25-JAN-19 03.46.11.648589000 PM,,"Auto Approved","","",2669,""
333663001877679954105155392838270885332,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Brookstrut Sample Schema","BROOKSTRUT SAMPLE SCHEMA","Sample basic store, products, purchases schema with ability to generate data.","",333667445241557555142773970997185539229,"","","",02-AUG-24 05.38.51.549751000 AM,"PUBLIC","BROOKSTRUT, PL/SQL, PLSQL, SQL, data generation",341,"","O4943N16G39VDAS6OQT1E28TI",7570,337949986681008890389062074985729416032,337949986681008890389062074985729416032,,"","","","","","","","","","","","","","",,"",19-DEC-23 02.21.53.948113000 PM,10-MAR-16 04.13.15.871075000 AM,"","",,,"","","",325,""
333663001884406417365491189566336048596,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Orders and Items Schema","ORDERS AND ITEMS SCHEMA","Sample products, orders, and items schema with sample data.","",333667445241557555142773970997185539229,"","","",22-AUG-24 10.13.17.513024000 AM,"PUBLIC","Order Items, schema, data model, orders, items, customers, plsql",3480,"","O4943N2TYAKY1X75YLM3HSQJQ",40062,337949986681008890389062074985729416032,1,,"","","","","","","","","","","","","","",,"",21-AUG-24 08.23.50.524165000 AM,16-MAR-16 04.27.46.717322000 AM,"","",,,"","","",6055,""
331617970825133915877604258360205132993,05-OCT-15 05.52.25.000000000 PM,"",,"JEFF.D.SMITH@ORACLE.COM","First Time  Run","FIRST TIME  RUN","sysdate, build a table, populate a table, run a select * from","",331617970824759148873523723316046218433,"","","",06-AUG-24 04.07.10.734498000 PM,"PUBLIC","",94,"","331617970825135124803423872989379839169331617970825136333729243487618554545345",19142,1,2,,"","","","","","","","","","","","","","",,"",06-AUG-24 04.05.36.116055000 PM,16-FEB-16 01.22.49.212171000 PM,"","",,,"","","",197,""
45769879158350580063365706051115164383,19-OCT-15 05.20.11.167467000 AM,"",,"LUCAS.JELLEMA@AMIS.NL","Spotting combinations that occur and those that do not – demonstrating Analytical Functions, Outer Join and SubQuery Factoring","SPOTTING COMBINATIONS THAT OCCUR AND THOSE THAT DO NOT – DEMONSTRATING ANALYTICAL FUNCTIONS, OUTER JOIN AND SUBQUERY FACTORING","The challenge in this sample is a simple one. I have a table with records (duh!) and each record describes the occurrence of a certain payload. In this example the payload will be a color. Every record also has a sequence number to indicate well, when it appeared relative to the other observations.

The challenges I will discuss are simple:

*    which sequences of three color observations occur in the data set
*    how often do these sequences of three occur (give me the top 3 sequences)
*    given the colors that have been observed, which combinations of three can be created
*    which possible combinations (or color sequences of three colors) have not been observed at all

Using Oracle SQL features such as Analytical Functions, Outer Join and Subquery Factoring – these questions become very easy to answer.

See for the original blog article on which this sample is based:
https://technology.amis.nl/2013/02/28/oracle-sql-spotting-combinations-that-occur-and-those-that-do-not-demonstrating-analytical-functions-outer-join-and-subquery-factoring/ 
","",45769879158093078863787790036902748895,"","","",14-AUG-24 09.34.19.199209000 AM,"PUBLIC","analytical functions,outer join,subquery factoring",147,"","CBYAXZ10U0QO0XZ9AXRQO5ACA",5337,3,,,"","","","","","","","","","","","","","",,"",02-AUG-24 02.45.16.258029000 PM,06-NOV-15 08.21.39.523907000 PM,"","APPROVED",15-JUN-18 01.34.34.729839000 AM,15-JUN-18 01.28.43.395930000 PM,"sharon.kennedy@oracle.com","","",688,""
10215755084365519208101849175870283291,05-OCT-15 05.52.25.000000000 PM,"",,"NANCY.L.HOFFMAN@ORACLE.COM","Baseball Teams and Players","BASEBALL TEAMS AND PLAYERS","Creates two tables:  PLAYERS and TEAMS
Teams are World Series teams from 2014:  The Kansas City Royals and the San Francisco Giants
Players are 40 player rosters for each team with player data: name, jersey, height, weight, dob, position","",10215755084145494708931986666073759259,"","","",22-AUG-24 06.41.25.110132000 PM,"PUBLIC","",9767,"","QNYPWNIARWPLE4O8X0EH0NT5",5221,1,,,"","","","","","","","","","","","","","",,"",22-AUG-24 01.59.31.168686000 PM,15-MAR-16 03.17.11.624712000 PM,"","",,,"","","",14794,""
16540515582361146129044724612879512591,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","Modifying Storage Attributes for a Table","MODIFYING STORAGE ATTRIBUTES FOR A TABLE","Alter a table and modify its storage attributes.","",16537585479137890861582476770917620161,"","","",27-JUN-24 10.26.27.029028000 AM,"PUBLIC","",20,"","0YBJCAYR17GAL6CPEVHSJW1V",11883514,3,,,"","","","","","","","","","","","","","",89084737921343058510605506994942659097,"storage1",25-APR-18 08.51.06.771297000 AM,20-APR-18 10.20.47.651912000 AM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/ALTER-TABLE.html#GUID-552E7373-BF93-477D-9DA3-B2C9386F2877","",,,"","","",42,""
45796561629550635454808048724597190895,19-OCT-15 11.30.35.535009000 AM,"",,"NEERAJ.NN@GMAIL.COM","oracle_sequence_without_DB_sequence","ORACLE_SEQUENCE_WITHOUT_DB_SEQUENCE","Script generates sequences and loads into a table.
No need to use PLSQL loop or database sequence. This makes use of connect by feature to generate sequence.
Helpful in quick testing by loading records into a test tables.","",45796561629481726683090014861638938863,"","","",31-JUL-24 04.14.59.031428000 AM,"PUBLIC","",13,"","CBPRYRY6Q4OVKOEBT3ZA85VUP",5558,3,,,"","","","","","","","","","","","","","",,"",22-MAY-24 06.47.02.132115000 AM,26-OCT-15 09.40.38.888713000 PM,"","APPROVED",15-JUN-18 01.34.34.734140000 AM,15-JUN-18 01.29.23.285359000 PM,"sharon.kennedy@oracle.com","","",52,""
8952026106605999134096641134344938103,05-OCT-15 05.52.25.000000000 PM,"",,"LANCE.ASHDOWN@ORACLE.COM","Simple Explain Plan","SIMPLE EXPLAIN PLAN","This script explains the plan for a query of the sh.sales and sh.products tables.  Both statements must be executed at the same time in order to get the proper plan.","",8948612455375844452953275091967971792,"","","",21-AUG-24 10.19.35.484294000 PM,"PUBLIC","execution plan",3655,"","OM62N47LUAP4A34JM8K24091",15347228,15,,,"","","","","","","","","","","","","","",,"",21-AUG-24 11.22.26.020891000 AM,28-AUG-18 01.17.51.065300000 PM,"","APPROVED",28-AUG-18 01.17.51.048055000 PM,,"Auto Approved","","",13623,"Y"
13628545936004403371109457245317561110,05-OCT-15 05.52.25.000000000 PM,"",,"COLIN.MCGREGOR@ORACLE.COM","Creating partition tables: simple","CREATING PARTITION TABLES: SIMPLE","Creates a range partitioned table","",13628545934232118119554410875198307094,"","","",31-JUL-24 05.36.53.963906000 PM,"PUBLIC","",46,"","V4YI3S8SQBIBMWOGQZR7TMSO",6244,3,,,"","","","","","","","","","","","","","",,"",26-JUL-24 03.30.51.320026000 PM,29-FEB-16 05.38.39.994029000 PM,"","",,,"","","",81,""
16631904292572386617109547051314248065,05-OCT-15 05.52.25.000000000 PM,"",,"COLIN.MCGREGOR@ORACLE.COM","Specifying Table Storage Attributes","SPECIFYING TABLE STORAGE ATTRIBUTES","Create a table and use the STORAGE clause to allocate space for the table.
","",16631904292351153192120069912343017857,"","","",04-APR-24 11.48.39.269850000 AM,"PUBLIC","",21,"","0YBJCAZKGSVN2WL3WN92DZBN",6876,3,,,"","","","","","","","","","","","","","",87608017963871023126359818829912784584,"storage",15-JAN-21 03.55.07.145438000 AM,29-FEB-16 05.38.39.994452000 PM,"http://docs.oracle.com/database/122/SQLRF/storage_clause.htm#SQLRF30013","",,,"","","",23,""
16646017795804739624793167608926632604,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","Creating and Altering Clusters","CREATING AND ALTERING CLUSTERS","Create a cluster, modify the cluster key size, and deallocate unused space that is allocated to the cluster.","",16640429190665692285359249117009301719,"","","",16-APR-24 12.00.25.058608000 PM,"PUBLIC","",21,"","0Y4U5DP3M2HXJXYPXF0HXYQ2",12091077,3,,,"","","","","","","","","","","","","","",141278467625147366035472214536840028763,"key-size",18-OCT-22 04.02.09.299753000 PM,26-APR-18 08.46.44.394479000 AM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/ALTER-CLUSTER.html#GUID-A4E03C13-7690-4567-9B0A-DA6A21173B4D","",,,"","","",30,""
9287168985485240935023512365472329494,05-OCT-15 05.52.25.000000000 PM,"",,"SHEILA.MOORE@ORACLE.COM","Row-Level Trigger","ROW-LEVEL TRIGGER","Creates a table of words and a trigger that strips leading and trailing blanks from each word that is inserted into the table.","",9286508713870136261350881668432019268,"","","",15-AUG-24 03.22.57.732988000 AM,"PUBLIC","",296,"","PMADPCAFEZR6ERC3JHU6ERXA",14441104,5,,,"","","","","","","","","","","","","","",,"",11-JUN-24 08.07.24.949658000 PM,20-JUL-18 01.40.14.363689000 PM,"","APPROVED",20-JUL-18 01.40.14.355509000 PM,,"Auto Approved","","",1003,""
14450899564000514568058592891662672736,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","Modifying Table Columns","MODIFYING TABLE COLUMNS","Create a table and then modify its definition. Includes adding new columns, altering existing column, renaming columns, and dropping columns.","",14448021247427368480927104985136265591,"","","",04-APR-24 11.45.33.846845000 AM,"PUBLIC","",24,"","ZYTJ6YH5ZLSD2Q4TCR2QVG6H",3661859,3,,,"","","","","","","","","","","","","","",89084737921343058510605506994942659097,"modify-cols",24-FEB-23 02.38.30.837185000 PM,11-MAY-17 05.56.01.442381000 AM,"http://docs.oracle.com/database/122/SQLRF/ALTER-TABLE.htm#SQLRF01001","",,,"","","",199,""
14450899564741586095482360575757558624,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","Adding Constraints to Tables","ADDING CONSTRAINTS TO TABLES","Creates a table and then alters the table definition to add check constraints ","",14448021247427368480927104985136265591,"","","",22-AUG-24 10.11.59.515954000 AM,"PUBLIC","",65,"","0YBJCAYR7OBDDSMRLWE11EKZ",3644344,3,,,"","","","","","","","","","","","","","",89084737921343058510605506994942659097,"constraints",03-JAN-24 03.28.53.436046000 PM,10-MAY-17 08.17.50.278072000 AM,"http://docs.oracle.com/database/122/SQLRF/ALTER-TABLE.htm#SQLRF01001","",,,"","","",500,""
45415271594271350405350456417327907112,15-OCT-15 07.48.43.009067000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","fetch first X rows only, new 12c SQL syntax","FETCH FIRST X ROWS ONLY, NEW 12C SQL SYNTAX","With database 12c you can limit your SQL query result sets to a specified number of rows.","",45415271594103309716424022962043748648,"","","",30-JUN-24 07.56.23.068300000 PM,"PUBLIC","top, limit, fetch first",18,"","CA3RM3RQELWLF1D5YVJQ4LML2",3446,1,,,"","","","","","","","","","","","","","",,"",26-DEC-22 11.19.46.788153000 AM,30-OCT-15 07.14.27.140250000 AM,"","",,,"","","",63,""
45730176057510167535121725839051997593,18-OCT-15 08.10.15.361821000 PM,"",,"LUCAS.JELLEMA@AMIS.NL","Outer_Apply_01","OUTER_APPLY_01","Example for using OUTER APPLY to outer join with a table function. 

See more details on OUTER APPLY in this blog article: https://technology.amis.nl/2013/06/26/oracle-database-12c-joining-and-outer-joining-with-collections/","",45730176057215189635135756320423690649,"","","",04-APR-24 11.37.21.099054000 AM,"PUBLIC","apply, outer join,table function",32,"","CBLX0KZOGQGHUBRP6V5XCLMO7",5196,3,,,"","","","","","","","","","","","","","",,"",25-JAN-24 02.49.57.496504000 PM,10-DEC-15 01.45.49.467341000 AM,"","APPROVED",15-JUN-18 01.34.34.742609000 AM,15-JUN-18 01.32.48.692017000 PM,"sharon.kennedy@oracle.com","","",39,""
13915713222772275930741544149997724791,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","Create Cluster Tables","CREATE CLUSTER TABLES","Creates cluster, cluster tables, and index cluster. Queries the data dictionary to display object information.","",13915713222728754601235417499708302455,"","","",14-MAY-24 09.00.58.161532000 PM,"PUBLIC","Cluster and Cluster tables",118,"","WLI9L1I3DU4L6B08JBP4W88P",11893448,3,,,"","","","","","","","","","","","","","",141274621471757941839155843254425788445,"cluster-table",08-OCT-23 04.46.12.700226000 AM,20-APR-18 02.05.52.865431000 PM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/CREATE-CLUSTER.html#GUID-4DBC701F-AFC3-486D-AA32-B5CB1D6946F7","",,,"","","",255,""
16526334997895068668202945202478526638,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","Dropping Unused Columns","DROPPING UNUSED COLUMNS","Uses ALTER TABLE to modify a table definition and drop unused columns.","",16526334997832204525582984485393805486,"","","",19-AUG-24 10.40.49.574374000 AM,"PUBLIC","",42,"","0YBJCAY7JZH4VAUXBHQN3K67",3645834,3,,,"","","","","","","","","","","","","","",89084737921343058510605506994942659097,"drop-unused-cols",11-JUN-24 04.17.57.939187000 AM,10-MAY-17 09.49.02.398754000 AM,"http://docs.oracle.com/database/122/SQLRF/ALTER-TABLE.htm#SQLRF01001","",,,"","","",199,""
12420929418157546589490031773325361147,05-OCT-15 05.52.25.000000000 PM,"",,"SHEILA.MOORE@ORACLE.COM","Change-Logging Trigger","CHANGE-LOGGING TRIGGER","Creates a table, a log table, and a trigger that inserts a row in the log table after any row of the table is updated.","",12420929418152710886211573256626536443,"","","",22-AUG-24 09.20.23.412914000 AM,"PUBLIC","",392,"","T683BP706Z377FCIEEHE2P95",5557,5,,,"","","","","","","","","","","","","","",,"",12-AUG-24 06.29.02.622233000 AM,16-MAR-16 08.07.47.187392000 AM,"","",,,"","","",1057,""
46837938334058197493237084890105267966,29-OCT-15 10.48.34.734998000 AM,"",,"DANILOPIAZZA@GMAIL.COM","COALESCE vs. NVL","COALESCE VS. NVL","Demonstrates the differences between COALESCE and NVL

COALESCE uses short-circuit evaluation; NVL always evaluates both arguments.
","",46837938333926424578899090310062294782,"","","",21-AUG-24 07.27.49.147001000 AM,"PUBLIC","nvl, coalesce, function, short-cirtuit, evaluation",88,"","CDDVYFL6A301T4LPGZQAF0S5C",10870,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",02-AUG-24 11.05.46.727118000 AM,03-FEB-16 10.15.45.974209000 AM,"","APPROVED",15-JUN-18 01.34.34.746708000 AM,15-JUN-18 01.22.21.241610000 PM,"sharon.kennedy@oracle.com","","",240,""
46889237656863810090106422865005531939,29-OCT-15 10.07.36.913688000 PM,"",,"OTN@GRALIKE.COM","Generating XML with Namespace information","GENERATING XML WITH NAMESPACE INFORMATION","Generating simple XML content with Namespace information in it. Be aware that browsers will always generate pretty printed output and hiding the XML instance properties like version.","",46884216890636102444696602503820246998,"","","",23-JUL-24 02.38.34.733989000 PM,"PUBLIC","XMLDB",47,"","CDGUJ1TNVPNNNDDJ6QV44ILYT",81515,12,,,"","","","","","","","","","","","","","",,"",13-MAR-23 08.44.03.910674000 PM,10-FEB-16 08.23.30.676436000 AM,"","APPROVED",15-JUN-18 01.34.34.750697000 AM,15-JUN-18 01.32.57.465364000 PM,"sharon.kennedy@oracle.com","","",86,""
13823745111804138768277272721766413941,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","Create Range Partitioned Table and View Table Details","CREATE RANGE PARTITIONED TABLE AND VIEW TABLE DETAILS","Creates a range partitioned table, inserts data into the table, and then queries the data dictionary views to display table metadata.","",13823745111754572809673072925603460725,"","","",14-JUL-24 02.56.45.261935000 PM,"PUBLIC","CREATE PARTITION TABLE AND DISPLAY THE PARTITION DETAILS",38,"","WF75MPWCLXIL9SK8DV4HKIDJ",3779817,3,,,"","","","","","","","","","","","","","",87608017963871023126359818829912784584,"range-basic",08-APR-24 06.21.54.574969000 AM,17-MAY-17 07.55.46.164308000 AM,"http://docs.oracle.com/database/122/SQLRF/CREATE-TABLE.htm#SQLRF01402","",,,"","","",166,""
46954564645130078383042818781041272510,30-OCT-15 01.53.31.253829000 PM,"",,"BINURAJSNAIR@GMAIL.COM","Function Result Cache Demo","FUNCTION RESULT CACHE DEMO","Demonstrate the use and performance advantage of function result cache","",46954564645125242679764360264342447806,"","","",27-JUL-24 09.42.06.910426000 AM,"PUBLIC","Result cache PLSQL",181,"","CDLR4E3N3N6VOYIDR5BVOU4H3",11842,6,,,"","","","","","","","","","","","","","",,"",07-OCT-22 04.02.01.428888000 PM,15-MAR-16 05.16.57.519597000 AM,"","APPROVED",15-JUN-18 01.34.34.754569000 AM,15-JUN-18 01.21.34.552345000 PM,"sharon.kennedy@oracle.com","","",240,""
24060698658522139608382664493859764291,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","REGEXP_INSTR - Pattern Matching","REGEXP_INSTR - PATTERN MATCHING","Determine valid email addresses by checking if a specified pattern is present in a string.","",24060698658452021910845016001726806083,"","","",13-AUG-24 06.08.30.081423000 AM,"PUBLIC","",65,"","BCU4M2NZK5AVT0S894QVU0VYT",3412282,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",89084737921341849584785892365767952921,"find-location",13-AUG-24 06.08.30.081303000 AM,28-APR-17 09.59.10.114900000 AM,"http://docs.oracle.com/database/122/SQLRF/REGEXP_INSTR.htm#SQLRF06300","",,,"","","",248,""
24060698658479827204696152472745048131,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","REGEXP_SUBSTR - Pattern Matching","REGEXP_SUBSTR - PATTERN MATCHING","Checking for valid email IDs using pattern matching. Combines the use of REGEXP_SUBSTR and REGEXP_INSTR.","",24060698658452021910845016001726806083,"","","",25-JUL-24 01.38.58.748864000 PM,"PUBLIC","",22,"","BCU4M2NZFTWN455G5AUJM0UDX",3412266,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",89084737921339431733146663107418540569,"find-pattern-email",18-JAN-24 02.22.34.583492000 PM,28-APR-17 09.58.09.559247000 AM,"http://docs.oracle.com/database/122/SQLRF/REGEXP_SUBSTR.htm#SQLRF06303","",,,"","","",132,""
45227870741402144001477634070950897943,14-OCT-15 12.25.47.040149000 AM,"",,"MICHAEL.HICHWA@ORACLE.COM","Since date reporting","SINCE DATE REPORTING","Report the number seconds, minutes, hours, days in the past or future using a date_util package.","",45227870741385219040003029262505011479,"","","",30-JUN-24 07.55.25.910086000 PM,"PUBLIC","SINCE, DATE, TIMESTAMP",12,"","CASYL512Y0M324YD16T1E7MPG",1365,4,,,"","","","","","","","","","","","","","",,"",23-FEB-21 02.23.54.100467000 PM,19-OCT-15 06.06.38.278317000 AM,"","",,,"","","",75,""
30078897367235110755411436207325499249,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Contacts Schema","CONTACTS SCHEMA","Simple schema to use to practice SQL","",30077373127457315572365639925677827588,"","","",21-AUG-24 07.34.56.835242000 PM,"PUBLIC","",1379,"","BMILX744ZUQMEYEU272BRGT2R",9328,337949986681008890389062074985729416032,,,"","","","","","","","","","","","","","",,"",12-AUG-24 11.31.39.348869000 AM,24-FEB-16 07.45.17.039054000 PM,"","",,,"","","",2283,""
30409519115353916216824056151467028769,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","Inserting Multiple Rows Using a Single Statement","INSERTING MULTIPLE ROWS USING A SINGLE STATEMENT","This example creates three tables and them uses different INSERT statements to insert data into these tables.
Multiple rows are inserted into a table using the INSERT ALL statement and by using the inserting the results of the select query.","",30409519115300723480761012467779957025,"","","",21-AUG-24 06.59.13.528177000 AM,"PUBLIC","INSERT",586,"","BM1LJQ89BGBC089NWDWPSTSI7",3758546,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",105851624174422975730722545241311287162,"multitable",19-AUG-24 05.56.01.964748000 PM,16-MAY-17 10.26.14.797343000 AM,"http://docs.oracle.com/database/122/SQLRF/INSERT.htm#SQLRF01604","",,,"","","",2647,""
18840137460769420579072514511354863449,05-OCT-15 05.52.25.000000000 PM,"",,"COLIN.MCGREGOR@ORACLE.COM","DROP TABLE: Simple","DROP TABLE: SIMPLE","Create a table, insert data into it, and then drop the table.","",18840137460704138584813324535920729945,"","","",01-AUG-24 10.12.21.637834000 AM,"PUBLIC","",22,"","4H5FYRGLF4A3HUUQAXNLP6YD",7309,3,,,"","","","","","","","","","","","","","",,"",19-SEP-23 08.06.25.993106000 AM,29-FEB-16 05.38.39.999814000 PM,"","",,,"","","",169,""
18846478716762460198345849569372930595,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","Using the TO_CHAR Function","USING THE TO_CHAR FUNCTION","Demonstrates the use of TO_CHAR (character), TO_CHAR (datetime) and TO_CHAR (number).","",18840137460704138584813324535920729945,"","","",19-AUG-24 07.54.39.083152000 PM,"PUBLIC","",80,"","4H5FYRGKT8USFDQHITYJR8TX",11521427,3,,,"","","","","","","","","","","","","","",106055794078934896064773105732375209382,"tochar_basic",19-AUG-24 10.20.25.623437000 AM,11-APR-18 05.04.45.094398000 AM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/TO_CHAR-datetime.html#GUID-0C3EEFD1-AE3D-452D-BF23-2FC95664E78F","",,,"","","",337,""
45341078123765738762750717762244091238,15-OCT-15 02.24.58.021320000 AM,"",,"JEFFREY.KEMP@JK64.COM","merge-history-kimberghansen","MERGE-HISTORY-KIMBERGHANSEN","Kim Berg Hansen's solution to my SQL problem ""Merge Record History Tables"" http://jeffkemponoracle.com/2015/10/14/merge-two-record-history-tables-in-sql/","",45340279206434833985617102572077378579,"","","",30-JUN-24 07.56.02.254613000 PM,"PUBLIC","jeffkemponoracle",6,"","CAZHGTBYS9B14B0QCK357TIIG",2169,1,,,"","","","","","","","","","","","","","",,"",18-JUL-20 06.14.58.812755000 AM,14-DEC-15 02.15.08.396511000 AM,"","APPROVED",15-JUN-18 01.34.34.758492000 AM,18-JUN-18 02.29.32.783233000 PM,"sharon.kennedy@oracle.com","","",15,""
21984109956333923610713699089411355000,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","REGEXP_COUNT - Simple Matching","REGEXP_COUNT - SIMPLE MATCHING","No description provided","",21981224509198348214890212359186079515,"","","",14-JUL-24 02.36.50.703897000 PM,"PUBLIC","",13,"","9I9GXJ7NAXBOHIP8PWJLYPD2",7893,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",88544904336456471988519640529717829738,"simple-match",09-NOV-23 03.31.48.780841000 PM,08-FEB-16 02.48.11.914886000 PM,"http://docs.oracle.com/database/122/SQLRF/REGEXP_COUNT.htm#SQLRF20014","",,,"","","",51,""
25750618501674282918267543833845356222,05-OCT-15 05.52.25.000000000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Date and formatting examples","DATE AND FORMATTING EXAMPLES","Examples of formatting and manipulating dates and numbers","",25750618501411946015411169302934116030,"","","",18-AUG-24 06.56.19.760773000 AM,"PUBLIC","sysdate, to_char, trunc",143,"","BFKOA5US61231646ZBVH9QTZK",8319,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",31-MAY-24 02.22.14.100057000 AM,10-FEB-16 05.20.47.748003000 AM,"","",,,"","","",838,""
21984109957690338380321313023431684472,05-OCT-15 05.52.25.000000000 PM,"",,"CHRIS.SAXON@ORACLE.COM","REGEXP_SUBSTR examples","REGEXP_SUBSTR EXAMPLES","No description provided","",21984109957619011756964049902124020088,"","","",17-AUG-24 11.23.14.945151000 AM,"PUBLIC","",87,"","9I9GXKCB7S85LPH1QF0L37PM",7917,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",10-JUL-24 06.41.23.339394000 AM,12-OCT-15 08.52.25.710122000 PM,"","",,,"","","",368,""
23129300584172758647100682895169844480,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","REGEXP_SUBSTR - Extract Numbers and Alphabets","REGEXP_SUBSTR - EXTRACT NUMBERS AND ALPHABETS","Extract numbers and alphabets from a string.","",23126307179361199139644532350375319722,"","","",25-JUL-24 05.25.34.813253000 PM,"PUBLIC","",62,"","BBDC6QHANNJU2MH4F77PR0Q6A",3339023,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",89084737921339431733146663107418540569,"extract1",01-FEB-24 05.38.46.712818000 AM,25-APR-17 10.48.38.079596000 AM,"http://docs.oracle.com/database/122/SQLRF/REGEXP_SUBSTR.htm#SQLRF06303","",,,"","","",282,""
23129300584286397674144458037592225024,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","REGEXP_SUBSTR - Extract Passenger Names and Flight Information","REGEXP_SUBSTR - EXTRACT PASSENGER NAMES AND FLIGHT INFORMATION","Extracting passenger names from flight information using REGEXP_SUBSTR.
Format of the string is Route (departure & destination airports) / departure date (ddmmyyyy) / Passenger name","",23126307179361199139644532350375319722,"","","",14-AUG-24 07.04.00.034877000 AM,"PUBLIC","",39,"","BBDC6QHA1XK0AQOD6KMKJOI2Q",3359616,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",89084737921339431733146663107418540569,"extract2",14-AUG-24 07.04.00.034787000 AM,26-APR-17 07.07.37.715788000 AM,"http://docs.oracle.com/database/122/SQLRF/REGEXP_SUBSTR.htm#SQLRF06303","",,,"","","",155,""
45389824351942796878881202005187649746,15-OCT-15 01.36.11.297572000 PM,"",,"MICKE.VROLIJK@ORTEC-FINANCE.COM","Create analytical PLSQL PRODUCT function","CREATE ANALYTICAL PLSQL PRODUCT FUNCTION","This example script shows how to create an analytical PLSQL PRODUCT function that behaves like the Oracle SUM function. It uses a custom object to save the aggregation state using the ODCI interface. The script contains as an example how the function can be used to aggregate edge weights of a directed acyclic graph to path weights. ","",45389054990000078218319936597139289141,"","","",30-JUN-24 07.56.09.989578000 PM,"PUBLIC","Analytical function, PLSQL, ODCI ",45,"","CA2ARFSUB9UZ04TXIN2RQL4BO",15000550,6,,,"","","","","","","","","","","","","","",,"",02-FEB-24 08.45.44.816998000 PM,15-AUG-18 07.40.36.918604000 PM,"","APPROVED",15-JUN-18 01.34.34.762251000 AM,15-JUN-18 01.21.51.745516000 PM,"sharon.kennedy@oracle.com","","",243,""
45448635176705623570405310423525624420,16-OCT-15 03.09.29.740977000 AM,"",,"MICHAEL.HICHWA@ORACLE.COM","Creating and Using a Table with Valid Time Support","CREATING AND USING A TABLE WITH VALID TIME SUPPORT","12c ; Example creates a table with Temporal Validity Support, inserts some rows, and issues some queries whose results depend on the valid start and end dates for individual rows.","",45448635176553298917133867147512646244,"","","",22-JUL-24 06.23.56.080863000 PM,"PUBLIC","12c, user_valid_time",21,"","CA5OYY8G1FPIZ0SVCSUEJ3VNA",3618,1,,,"","","","","","","","","","","","","","",,"",22-OCT-23 03.08.14.394768000 PM,04-FEB-16 03.12.33.949163000 AM,"","",,,"","","",106,""
45448635176758816306468354107212696164,16-OCT-15 03.36.21.079126000 AM,"",,"HKCHITAL@SINGNET.COM.SG","Function and Procedure in Package","FUNCTION AND PROCEDURE IN PACKAGE","A Test PLSQL Package that demonstrates both a Function and a Procedure.","",45448635176737055641715290782067984996,"","","",22-AUG-24 03.43.42.763651000 AM,"PUBLIC","",514,"","CA5OYY8G74BIDR051DY15HAZ6",3624,6,,,"","","","","","","","","","","","","","",,"",22-AUG-24 03.43.42.763549000 AM,15-JAN-16 08.30.08.150823000 AM,"","APPROVED",15-JUN-18 01.34.34.767374000 AM,15-JUN-18 01.22.45.606464000 PM,"sharon.kennedy@oracle.com","","",2646,""
21132616422651916235184561096307156401,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","REGEXP_COUNT - Case Sensitive and Insensitive Matching","REGEXP_COUNT - CASE SENSITIVE AND INSENSITIVE MATCHING","Counting the number of times a specified pattern occurs in a name. Performs both case sensitive and case insensitive matching.","",21132616422514098691748493370390652337,"","","",14-JUL-24 02.36.36.307090000 PM,"PUBLIC","",29,"","EVSWV0UJBC6WGGG8LV9P50K7Z",3316303,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",88544904336456471988519640529717829738,"case-sensitive-match",23-APR-24 08.05.59.908742000 AM,24-APR-17 12.53.23.284173000 PM,"http://docs.oracle.com/database/122/SQLRF/REGEXP_COUNT.htm#SQLRF20014","",,,"","","",74,""
21132616423886229497011097483682162097,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","REGEXP_REPLACE - Pattern Matching","REGEXP_REPLACE - PATTERN MATCHING","Simple queries that search for a pattern within a string and replace it with another specified pattern.","",21132616422514098691748493370390652337,"","","",14-MAY-24 09.06.17.088325000 PM,"PUBLIC","",22,"","75314ASU5IR4KHDO0OE05OV3",11286862,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",89084737921340640658966277736593246745,"match-replace1",10-APR-24 02.59.18.667259000 PM,04-APR-18 09.21.13.953091000 AM,"http://docs.oracle.com/database/122/SQLRF/REGEXP_REPLACE.htm#SQLRF06302","",,,"","","",73,""
23849767741455228046712452182201483100,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","REGEXP_COUNT - Advanced Matching","REGEXP_COUNT - ADVANCED MATCHING","Count the following:
- Number of letters in a given string (A, B, C etc)
- Number of times a letter is followed by a number (A1, B2, etc)
- Number of times a letter is followed by a number at the start of a string (A1xxx)
- Number of times a letter is followed by exactly two numbers (C12xxx)
- Exactly two occurrences of a letter followed by a number at the beginning of a string (A1B2xxx)","",23847234103851403187644400976649689924,"","","",14-JUL-24 02.36.49.596896000 PM,"PUBLIC","",18,"","BCK2QDTZGU9AI9D60RJ6V74FH",8141,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",88544904336456471988519640529717829738,"advanced-match",16-JUN-23 01.23.24.388470000 PM,29-FEB-16 05.38.40.002314000 PM,"http://docs.oracle.com/database/122/SQLRF/REGEXP_COUNT.htm#SQLRF20014","",,,"","","",56,""
23849767741809443311859538530390392668,05-OCT-15 05.52.25.000000000 PM,"",,"COLIN.MCGREGOR@ORACLE.COM","REGEXP_LIKE- Examples","REGEXP_LIKE- EXAMPLES","Validates the given expression for the following:
- Whether or not the supplied strings are ANSI compliant dates 
- Returns only those dates which are YYYY-MM-DD (but doesn't validate whether the DD is greater than 31)
- Returns only those dates which are YYYY-MM-DD (but checks for 31 as max DD)
- Returns an xml string which has a start and close tags (but doesn't check if the closing tag is same as start tag) 
- Returns an xml string which has a start and close tags matching.","",23849767741462481601630139957249720156,"","","",09-JUL-24 12.18.33.054980000 PM,"PUBLIC","",37,"","BCK2QDTZBJU2UEQEVXNUN72UL",8156,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",23-FEB-24 06.11.20.365530000 AM,29-FEB-16 05.38.39.991258000 PM,"","",,,"","","",210,""
45299483592361385654175017993937507480,14-OCT-15 05.18.44.369198000 PM,"",,"OREN@DB-ORIENTED.COM","Split","SPLIT","This is a small pipelined table function that gets one string that includes a delimited list of values, and returns these values as a table.","",45297847939024868742038984417765635103,"","","",08-JUL-24 05.42.55.474870000 AM,"PUBLIC","split csv pipelined table function pl/sql",37,"","CAW2063JL5SE2DIEB9O1SJ8P2",1529,1,,,"","","","","","","","","","","","","","",,"",12-AUG-23 12.13.23.576223000 AM,02-DEC-15 03.57.32.055407000 AM,"","APPROVED",15-JUN-18 01.34.34.772477000 AM,15-JUN-18 02.38.57.322303000 AM,"sharon.kennedy@oracle.com","","",135,""
34215142738295060238899090235794836448,05-OCT-15 05.52.25.000000000 PM,"",,"CHRIS.SAXON@ORACLE.COM","UPDATE statement examples","UPDATE STATEMENT EXAMPLES","Example update statements for integration with the docs","",34215142738030305484403486446534183904,"","","",20-NOV-23 03.06.59.536174000 AM,"PUBLIC","update",7,"","BS49N4C5EKLIIHUJKRVWFFWB2",9810,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",17-OCT-22 01.23.58.892798000 AM,12-OCT-15 08.52.25.712339000 PM,"","",,,"","","",62,""
45475060577707901778941281648643813162,16-OCT-15 09.24.10.310524000 AM,"",,"CARSTEN.CZARSKI@ORACLE.COM","Mortgage calculator with the SQL MODEL Clause","MORTGAGE CALCULATOR WITH THE SQL MODEL CLAUSE","This example shows a ""creative"" usage example for the SQL MODEL clause. Given a mortgage amount, an interest rate and a monthly payment, the SQL MODEL clause will calculate the ""mortgage plan"". ","",45472567103102956782554376953752345591,"","","",31-JUL-24 04.14.24.687625000 AM,"PUBLIC","model",71,"","CA67VTHEV5GK08WEHCITQN9FG",14433161,7,,,"","","","","","","","","","","","","","",,"",11-DEC-23 03.00.11.617143000 AM,20-JUL-18 07.16.22.599107000 AM,"","APPROVED",20-JUL-18 07.16.22.582899000 AM,,"Auto Approved","","",162,""
45522758557555679338356376303351537866,16-OCT-15 08.36.24.519352000 PM,"",,"SVEN.WELLER@SYNTEGRIS.DE","ROW GENERATOR - Methods to Generate Series","ROW GENERATOR - METHODS TO GENERATE SERIES","A collection of methods to create a list on the fly. 
Commonly referred to as row generation queries.
The sample selects use a WITH clause.
This allows quick integration into other queries. 

The queries built a range of letters from A to Z. 
This simulates cases where the requirement is slightly more complex then a simple range of number values.
","",45522758557487979492457957069567992010,"","","",31-JUL-24 04.14.27.859267000 AM,"PUBLIC","Row generator, SQL, Model Clause, generate_series",61,"","CC29R810LBPBI1QG5MQFL71RV",11842868,3,,,"","","","","","","","","","","","","","",,"",30-AUG-21 08.15.42.358161000 AM,19-APR-18 01.55.43.866995000 PM,"","APPROVED",15-JUN-18 01.34.34.777582000 AM,15-JUN-18 01.33.38.095950000 PM,"sharon.kennedy@oracle.com","","",152,""
35568953846272815262496531874266612813,05-OCT-15 05.52.25.000000000 PM,"",,"CHRIS.SAXON@ORACLE.COM","DELETE statement examples","DELETE STATEMENT EXAMPLES","Examples of using the delete statement for integration with the Oracle docs.","",35567982284925950719729145671653709794,"","","",19-MAR-24 06.22.29.516216000 PM,"PUBLIC","delete",6,"","BVBEWG3TRB6ZVT0PTD58OR6OV",9912,36715327890172848215626863410844194540,,,"","","","","","","","","","","","","","",,"",19-MAR-24 06.22.29.516101000 PM,12-OCT-15 08.52.25.712449000 PM,"","",,,"","","",46,""
20938121506311007377713115113789728926,05-OCT-15 05.52.25.000000000 PM,"",,"COLIN.MCGREGOR@ORACLE.COM","REGEXP_LIKE in email IDs","REGEXP_LIKE IN EMAIL IDS","This example demonstrates the use of REGEXP_LIKE in performing expression matching and determining valid email IDs.","",20935450593721794265442121888328999172,"","","",30-MAY-24 11.56.22.161861000 AM,"PUBLIC","",49,"","7UVV904T00HAFSXZBHMHOU8W",7703,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",12-MAR-24 07.02.32.460040000 PM,29-FEB-16 05.38.03.181360000 PM,"","",,,"","","",192,""
35666807514524226946792664530059674442,05-OCT-15 05.52.25.000000000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","Deleting Data from a Table","DELETING DATA FROM A TABLE","This example demonstrates different variations of the DELETE statement.","",1927311774296,"","","",08-AUG-24 10.23.27.206235000 AM,"PUBLIC","DML, DELETE",59,"","BVHADC2IQKJNXA1PXRGPBCWE1",3690069,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",105433595335903159386584429205092190851,"delete-basic",24-AUG-22 09.09.16.955612000 PM,12-MAY-17 11.58.31.857171000 AM,"http://docs.oracle.com/database/122/SQLRF/DELETE.htm#SQLRF01505","",,,"","","",169,""
45929809172143676660457358545033757562,20-OCT-15 05.47.22.574025000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Generate Logger Calls to Trace Parameter Values","GENERATE LOGGER CALLS TO TRACE PARAMETER VALUES","PL/SQL does not automatically generate tracing of parameter values, but that tracing is often desired by developers. This script generates such tracing using the open source Logger utility API.","",3411288918412,"","","",31-JUL-24 04.14.01.819917000 AM,"PUBLIC","tracing,instrumentation",20,"","CBXGUSXS3P0D0942Q3EDON060",115931,4,,,"","","","","","","","","","","","","","",,"",10-NOV-21 06.24.19.096049000 PM,23-MAR-16 10.52.15.698685000 PM,"","",,,"","","",42,""
46613992756358739417395348455276821341,27-OCT-15 06.52.59.668079000 AM,"",,"CARSTEN.CZARSKI@ORACLE.COM","PL/SQL String Tokenizer as a table function","PL/SQL STRING TOKENIZER AS A TABLE FUNCTION","This is a PL/SQL implementation to tokenize a string, based on a delimiter character, into a set of ""tokens"". Two tokenizers are being provided: One for VARCHAR2, one for CLOB. Both can be used procedurally in a PL/SQL loop or in SQL as a table function.","",107819887270155,"","","",11-MAY-24 10.53.51.529090000 AM,"PUBLIC","tokens,varchar2,clob,parser",32,"","CC1DF92FCTYA5FI6RFOREGE79",14433153,4,,,"","","","","","","","","","","","","","",,"",27-JAN-23 04.13.39.219663000 AM,20-JUL-18 07.16.00.698959000 AM,"","APPROVED",20-JUL-18 07.16.00.683211000 AM,,"Auto Approved","","",109,""
46755186520573546673305833995045083460,28-OCT-15 03.22.33.709596000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Longest Common Starting Substring","LONGEST COMMON STARTING SUBSTRING","A demo of using SQL to find the longest common starting substrings within a set of strings.","",46751812582028954403409022726672386644,"","","",17-JUN-24 10.15.03.559254000 AM,"PUBLIC","",14,"","CC83ZWPCPJ89GKWNKMPPLIWGM",10297,3,,,"","","","","","","","","","","","","","",,"",06-FEB-24 03.13.11.170204000 PM,05-NOV-15 02.15.03.622358000 PM,"","",,,"","","",153,""
46868459952074792943407296458189835850,29-OCT-15 05.35.15.007340000 PM,"",,"BINURAJSNAIR@GMAIL.COM","Script to check naming standards for variables in PLSQL code","SCRIPT TO CHECK NAMING STANDARDS FOR VARIABLES IN PLSQL CODE","The PLSQL code checks the naming standards of one or more  PLSQL packages. This can be used in PLSQL projects to ensure that naming stadards are followed.","",46868459952069957240128837941491011146,"","","",17-AUG-24 03.25.43.718732000 AM,"PUBLIC","PLSQL naming standards",72,"","CDFZ0OEIMAEE3EQDH3CHTPRH7",11240,6,,,"","","","","","","","","","","","","","",,"",04-MAY-22 12.46.54.949794000 PM,10-FEB-16 09.16.05.365142000 AM,"","APPROVED",15-JUN-18 01.34.34.782746000 AM,15-JUN-18 01.33.46.145865000 PM,"sharon.kennedy@oracle.com","","",218,""
46965326422029782702762069974449794571,30-OCT-15 03.36.36.065319000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Demonstration of SUBMULTISET Operator","DEMONSTRATION OF SUBMULTISET OPERATOR","Use SUBMULTISET with nested tables to determine if one nested table is contained within another.","",110279584416634,"","","",14-AUG-24 08.25.47.373476000 AM,"PUBLIC","SUBMULTISET,Nested table",16,"","CDK8N4G968QW7Z1U14XDODTH5",14495145,4,,,"","","","","","","","","","","","","","",,"",14-AUG-24 08.25.47.373356000 AM,23-JUL-18 01.59.17.222125000 PM,"","APPROVED",23-JUL-18 01.59.17.218072000 PM,,"Auto Approved","","",22,""
47270607723724719774339475307059935711,02-NOV-15 01.46.33.272973000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Improve Code QA by Treating Warning as Error","IMPROVE CODE QA BY TREATING WARNING AS ERROR","Use compile-time warnings to give you additional feedback on ways to improve your code. Set a particular warning to a ""hard"" compile error to ensure that it doesn't sneak past a, ahem, lazy programmer","",47270607723690869851390265690168162783,"","","",15-JUL-24 12.24.15.857931000 PM,"PUBLIC","WARNING,ERROR,plw",10,"","CD2U1PKBCHE6GUDLJ5OP980TT",14495150,4,,,"","","","","","","","","","","","","","",,"",28-AUG-21 03.20.15.593379000 PM,23-JUL-18 01.59.34.018153000 PM,"","APPROVED",23-JUL-18 01.59.34.011016000 PM,,"Auto Approved","","",12,""
47270607723902431869822825795741743583,02-NOV-15 02.08.28.664905000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Example of Simple SQL Injection via Dynamic SELECT","EXAMPLE OF SIMPLE SQL INJECTION VIA DYNAMIC SELECT","SQL injection occurs when unexpected text is ""injected"" into your dynamically-constructed SQL statement, creating a substantial security issue in your application. Remember: injection can only occur when you concatenate chunks of text. So you should bind variables whenever possible, use DBMS_ASSERT to validate names of database objects, and never allow user-entered text to be directly concatenated into a SQL statement.","",114312206222895,"","","",19-JUL-24 10.45.19.426880000 PM,"PUBLIC","INJECTION,SQL,SECURITY",45,"","CD22PSMS4VRAVKXXF5SH4HMMW",1078588,4,,,"","","","","","","","","","","","","","",,"",16-MAY-24 01.10.00.781569000 PM,05-DEC-16 08.18.47.543365000 PM,"","",,,"","","",175,""
47379145140089529974239324231671900372,03-NOV-15 02.41.38.885720000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","PL/Scope Helper Package","PL/SCOPE HELPER PACKAGE","PL/Scope is a powerful code analysis tool built into the PL/SQL compiler. This package helps you get started with PL/Scope. When you download and use in your own environment, you may want to replace USER_IDENTIFIERS with ALL_IDENTIFIERS, so that you can analyze code across schemas (but only code on which you have EXECUTE privileges, of course!).","",102864250782062,"","","",16-APR-24 12.52.53.378091000 PM,"PUBLIC","CODE ANALYSIS,PLSCOPE",38,"","CD9LPDYDTTUBB2LZ35ZXKCZB5",3007098,4,,,"","","","","","","","","","","","","","",,"",22-FEB-23 08.10.05.425903000 PM,06-APR-17 02.55.46.814782000 PM,"","",,,"","","",88,""
48110093021030500421561770970555498346,10-NOV-15 02.46.53.656096000 PM,"",,"CHRIS.SAXON@ORACLE.COM","DBMS_SQL.to_refcursor","DBMS_SQL.TO_REFCURSOR","Example showing how to convert a DBMS_SQL cursor to a ref cursor. ","",48110093020948293465827976186675478378,"","","",04-APR-24 06.25.37.068001000 AM,"PUBLIC","",2,"","CFFCSWHZW7RC9LBCOFJ6KAVDI",18459,4,,,"","","","","","","","","","","","","","",,"",,11-NOV-15 03.32.10.091747000 PM,"","",,,"","","",46,""
48223157380226771808741760614598875106,11-NOV-15 04.39.00.149843000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Use Assertion Package to Validate Assumptions","USE ASSERTION PACKAGE TO VALIDATE ASSUMPTIONS","Before writing your next program, ask yourself: ""What am I assuming?"" Then use this package's subprograms to validate those assumptions at the beginning of your program. Then you can proceed to implement your algorithm, without having to worry about unexpected failures.","",12806610469408,"","","",16-MAY-24 11.36.54.088207000 AM,"PUBLIC","ASSERTION",10,"","CFLUGC2R80WOJWRVZ8SLF3GXG",14495161,4,,,"","","","","","","","","","","","","","",,"",16-MAY-24 11.36.54.088088000 AM,23-JUL-18 01.59.58.302817000 PM,"","APPROVED",23-JUL-18 01.59.58.295791000 PM,,"Auto Approved","","",41,""
46854255695969326397008403467785127239,29-OCT-15 02.05.20.513943000 PM,"",,"BINE@MUENSTER.DE","General Diff Example","GENERAL DIFF EXAMPLE","Compare two tables and find orphans and changed rows.
","",103789524035924,"","","",27-JUN-24 02.00.19.602364000 PM,"PUBLIC","diff, compare, orphans, changes",48,"","HMBUKNALDOQAY6SQKZRB5KOQS",19770950,1,,,"","","","","","","","","","","","","","",,"",07-FEB-24 07.25.09.982001000 AM,30-NOV-18 02.10.36.093163000 PM,"","APPROVED",30-NOV-18 02.10.36.012347000 PM,30-NOV-18 02.30.50.108910000 PM,"sharon.kennedy@oracle.com","Can you please run this and resave.  The results are not displayed.","",35,""
48412046110806600349953588489704101600,13-NOV-15 12.20.30.896855000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Demonstration of SQL%BULK_ROWCOUNT FORALL Pseudo-Collection","DEMONSTRATION OF SQL%BULK_ROWCOUNT FORALL PSEUDO-COLLECTION","SQL%BULK_ROWCOUNT is a pseudo-collection that contains one element for each DML statement executed by FORALL. The element contains the number of rows modified by that specific DML statement. SQL%ROWCOUNT returns the total number of rows modified by the FORALL, overall.","",116714137915182,"","","",10-AUG-24 11.19.10.028665000 AM,"PUBLIC","SQL%BULK_ROWCOUNT,FEUERSTEIN,FORALL",36,"","CFWQYTBM7FO7XONWUZ1HE0T32",716214,4,,,"","","","","","","","","","","","","","",,"",22-MAR-24 08.04.12.959921000 PM,28-OCT-16 03.17.49.914290000 PM,"","",,,"","","",93,""
47717890751628348016375970002870351487,06-NOV-15 08.37.41.207616000 PM,"",,"NROSHAK@TEKSAVVY.COM","Roman Numeral Converter","ROMAN NUMERAL CONVERTER","Convert Roman Numerals to decimal format, using CTE / recursive subquery.
See http://rdbms-insight.com/wp/?p=316","",47717890751363593261880366213609698943,"","","",08-MAY-24 11.19.38.791723000 AM,"PUBLIC","CTE, recursive subquery",19,"","CESOH7H2D954BO76874098K5D",15579,7,,,"","","","","","","","","","","","","","",,"",28-SEP-22 04.03.23.645124000 AM,10-NOV-15 09.24.56.215847000 AM,"","APPROVED",15-JUN-18 01.34.34.797232000 AM,15-JUN-18 01.34.23.656277000 PM,"sharon.kennedy@oracle.com","","",42,""
48322645700473185278745778298005629212,12-NOV-15 03.33.35.067274000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Stragg window clause","STRAGG WINDOW CLAUSE","Using custom function stragg() to return a csv list with different analytic window clauses","",48322189227014686894450074897185694420,"","","",28-JAN-23 05.20.50.237618000 PM,"PUBLIC","",4,"","CFVX0G0UZ2VHLFYYMTZEC9448",19356,7,,,"","","","","","","","","","","","","","",,"",21-JUN-16 11.38.38.857626000 PM,13-NOV-15 09.40.47.199187000 AM,"","",,,"","","",22,""
48942508108990336646517050328625116138,18-NOV-15 02.07.44.965542000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Use Compound Trigger to Simplify Mutating Table Error Resolution","USE COMPOUND TRIGGER TO SIMPLIFY MUTATING TABLE ERROR RESOLUTION","The compound trigger, added in 11.1, allows you to define variables which persist through the execution of the steps defined in the compound trigger. One very useful application of this feature is to simplify the code needed to avoid mutating table trigger errors. ","",15824831249825,"","","",26-JUL-24 06.36.13.927366000 AM,"PUBLIC","COMPOUND,MUTATING TABLE",78,"","CGRPGIF9QKKS7RBLV4KC5K4F7",1166091,5,,,"","","","","","","","","","","","","","",,"",29-MAY-24 12.32.29.922560000 PM,13-DEC-16 06.47.34.483209000 PM,"","",,,"","","",271,""
52057640076346560977462399664896244988,18-DEC-15 09.43.41.361315000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - More complex ranking functions","ANALYTICS - MORE COMPLEX RANKING FUNCTIONS","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script demonstrates the PERCENT_RANK, CUME_DIST and NTILE functions.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",52057640076067299113131420325539118332,"","","",22-AUG-24 12.11.38.617872000 PM,"PUBLIC","",720,"","CLQ6JMJ1JZJU4K23V3TNBZO8U",44648,7,,,"","","","","","","","","","","","","","",,"",22-AUG-24 12.11.38.617713000 PM,01-MAR-16 04.23.09.409277000 PM,"","",,,"","","",1198,""
55963075001454828891107910761564508346,24-JAN-16 07.02.39.246552000 PM,"",,"MARTIN.A.BERGER@GMAIL.COM","sequence gaps by failed DDL","SEQUENCE GAPS BY FAILED DDL","based on a discussion on stackoverflow:
http://stackoverflow.com/questions/34975559/why-do-oracles-sequences-skip-their-cached-values-when-attempting-to-re-create ","",55962587047940326637920098815220264266,"","","",29-FEB-24 01.05.49.935825000 PM,"PUBLIC","sequence, invalidate, ",,"","CR0L2PHJE9HU8P1CVYGAG1J5O",69126,1,,,"","","","","","","","","","","","","","",,"",,24-JAN-16 07.02.39.246568000 PM,"","APPROVED",15-JUN-18 01.34.34.808720000 AM,15-JUN-18 01.34.55.867032000 PM,"sharon.kennedy@oracle.com","","",29,""
50300908251291657186351159818024840382,01-DEC-15 02.34.36.551798000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Explorations into SQL%ROWCOUNT","EXPLORATIONS INTO SQL%ROWCOUNT","If a SELECT INTO statement without a BULK COLLECT clause returns multiple rows, PL/SQL raises the predefined exception TOO_MANY_ROWS and SQL%ROWCOUNT returns 1, not the actual number of rows that satisfy the query. Furthermore, the value of SQL%ROWCOUNT attribute is unrelated to the state of a transaction. Therefore: When a transaction rolls back to a savepoint, the value of SQL%ROWCOUNT is not restored to the value it had before the save point. When an autonomous transaction ends, SQL%ROWCOUNT is not restored to the original value in the parent transaction. Code taken from PL/SQL Challenge: https://plsqlchallenge.oracle.com/pls/apex/f?p=10000:659:::NO:659:P659_COMP_EVENT_ID,P659_QUESTION_ID,P659_QUIZ_ID:821668,13461,&cs=1A7453F50B2A00EBCCE1296656BC3F7A1","",50303157278709750504113220668185277219,"","","",29-JUL-24 09.14.41.524936000 PM,"PUBLIC","SQL%ROWCOUNT",55,"","CIXR1F0N22F4YRGGQOV0J13BK",32538,4,,,"","","","","","","","","","","","","","",,"",03-APR-24 08.37.32.952637000 AM,29-DEC-15 03.02.48.338296000 PM,"","",,,"","","",249,""
56174889065806421531684322222491238195,26-JAN-16 08.02.20.526126000 PM,"",,"MALEKARA@GMAIL.COM","Error Handling with Implicit Cursors","ERROR HANDLING WITH IMPLICIT CURSORS","The query does not find any rows matching your criteria. In this case, the database
raises the NO_DATA_FOUND exception.The SELECT statement returns more than one row. In this case, the database raises the TOO_MANY_ROWS exception.","",56172892651537262115150514213349933726,"","","",03-APR-24 02.50.26.969907000 PM,"PUBLIC","EXCEPTION,NO_DATA_FOUND,TOO_MANY_ROWS,ERROR HANDLING,IMPLICIT CURSORS",8,"","CSCT75X8PHE17PPY9FCQ963J5",70919,4,,,"","","","","","","","","","","","","","",,"",25-JUN-22 06.14.40.647292000 PM,26-JAN-16 09.05.47.459134000 PM,"","APPROVED",15-JUN-18 01.34.34.820386000 AM,15-JUN-18 01.35.12.529302000 PM,"sharon.kennedy@oracle.com","","",57,""
49033046667377078292386575738754224867,19-NOV-15 11.07.35.256264000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Automatic Optimization of Cursor FOR Loop","AUTOMATIC OPTIMIZATION OF CURSOR FOR LOOP","This script demonstrates that when you have the PL/SQL optimization level set to at least 2, the PL/SQL compiler will optimize cursor FOR loops to perform comparably to using BULK COLLECT. It's a very nice, specialized optimization for a database programming language and reinforces an important rule: always use the highest level declarative statement possible in PL/SQL (and any other language). That way, you give the compiler maximum freedom to optimization.","",49033046667357735479272741671958926051,"","","",12-JUN-24 07.34.24.357950000 PM,"PUBLIC","OPTIMIZATION,PERFORMANCE",112,"","CGWQ3XR9H0C2T230AVPPA5EFR",993498,4,,,"","","","","","","","","","","","","","",,"",12-JUN-24 07.34.24.357824000 PM,28-NOV-16 03.06.00.638941000 PM,"","",,,"","","",482,""
54669962165734600999343570648629384724,12-JAN-16 10.02.35.595061000 AM,"",,"JEFFREY.KEMP@JK64.COM","random_pin","RANDOM_PIN","Helper functions to generate a random pin or a random string of numeric digits with an exact length.

Refer to http://jeffkemponoracle.com/2015/12/15/a-random-string-of-digits/","",54669962165729765296065112131930560020,"","","",31-JUL-23 10.48.58.902499000 AM,"PUBLIC","function, random",6,"","CPXYY29JJL9VGPNYD0AGBPV9Y",59772,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",31-JUL-23 10.48.58.902399000 AM,28-JAN-16 04.41.40.282425000 PM,"","APPROVED",15-JUN-18 01.34.34.826295000 AM,15-JUN-18 01.35.22.781185000 PM,"sharon.kennedy@oracle.com","","",23,""
54669962165745481331720102311201740308,12-JAN-16 10.04.04.667838000 AM,"",,"PATRICK.BAREL@GMAIL.COM","Check Refcursor","CHECK REFCURSOR","Build tablefunctions to encapsulate the refcursors and check their contents.","",127577835803745,"","","",04-APR-24 12.10.21.986262000 PM,"PUBLIC","tablefunction refcursor minus compare",21,"","HRI1FTAB90ZY9L3GDMMU8EY19",21134446,1,,,"","","","","","","","","","","","","","",,"",12-OCT-22 03.27.15.925276000 AM,31-DEC-18 03.36.27.923617000 AM,"","APPROVED",31-DEC-18 03.36.27.922951000 AM,31-DEC-18 03.38.11.087327000 PM,"sharon.kennedy@oracle.com","Can you please run this and resave.  The results are not displayed.","",66,""
55739925963981075377116612997411416241,22-JAN-16 03.47.08.064830000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","FORALL with VALUES OF","FORALL WITH VALUES OF","The VALUES OF clause, like its ""sister"" INDICES OF, makes it easier to use FORALL with bind arrays that are sparse - or with bind arrays from which you need to select out specific elements for binding. With VALUES OF, you specify a collection whose element values (not the index values) specify the index values in the bind arrays that will be used to generate DML statements in the FORALL. Sound complicated? It is, sort of. It is another level of ""indirectness"" from INDICES OF, and not as commonly used. This script should help drive the point home, though!","",55739925963953270083265476526393174193,"","","",24-JUL-24 05.13.16.730047000 PM,"PUBLIC","VALUES OF,FORALL",11,"","CRNQDAS1KXNGKDPK5FVK4G16B",67707,4,,,"","","","","","","","","","","","","","",,"",21-FEB-23 09.49.43.995588000 AM,22-JAN-16 03.56.05.379126000 PM,"","",,,"","","",54,""
48721226690504186878721238938472331300,16-NOV-15 11.29.17.997048000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","No Change in Source, No Recompile","NO CHANGE IN SOURCE, NO RECOMPILE","This script demonstrates that if you execute a ""CREATE OR REPLACE"" statement for a program unit and the source code is identical to what is already in the data dictionary, the code is NOT recompiled.","",48721226690501769027082009680122918948,"","","",04-APR-24 06.08.27.217736000 AM,"PUBLIC","COMPILE",4,"","CGEP1CXTCWDTDUC6HCWVR85PE",14494757,4,,,"","","","","","","","","","","","","","",,"",23-JUL-18 01.43.29.991021000 PM,23-JUL-18 01.43.43.369603000 PM,"","APPROVED",23-JUL-18 01.43.43.357595000 PM,,"Auto Approved","","",19,""
50924429483423096632593475497932536340,07-DEC-15 01.23.34.736173000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Test Your PL/SQL Exception Handling Knowledge","TEST YOUR PL/SQL EXCEPTION HANDLING KNOWLEDGE","Don't just run this script! First: look at each statement and ask yourself ""What will I see on the screen after execution?"" Then run the script and see how well you understand PL/SQL's exception handling architecture.","",50924429483413425226036558464534886932,"","","",19-AUG-24 03.03.13.747573000 AM,"PUBLIC","EXCEPTION HANDLING",95,"","CJXTJ8G3JVW5CSO7269DMAC8H",112415,4,,,"","","","","","","","","","","","","","",,"",21-NOV-23 06.10.57.925080000 PM,17-MAR-16 03.47.27.466983000 PM,"","",,,"","","",328,""
56271157057684593200842494129132435731,27-JAN-16 05.54.36.299636000 PM,"",,"ROGEL@WEB.DE","Collatz(27)","COLLATZ(27)","In the 3n+1 or Collatz problem, the sequence for n = 27 takes 111 steps next to go so high is 255","",56271157057654370055352128399764781331,"","","",28-FEB-24 09.28.08.634749000 AM,"PUBLIC","",4,"","CSID9S969LT83WCKQHXM8SUJP",71659,1,,,"","","","","","","","","","","","","","",,"",,27-JAN-16 06.01.59.613297000 PM,"","APPROVED",15-JUN-18 01.34.34.842931000 AM,15-JUN-18 01.38.07.019714000 PM,"sharon.kennedy@oracle.com","","",6,""
48740329629596477129517856587684407195,16-NOV-15 03.28.16.275558000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Show LiveSQL Version","SHOW LIVESQL VERSION","Run this script to see the version of the Oracle Database on which LiveSQL is running (and your own instance if you run this script there).","",48739387609567500813190196464481664876,"","","",02-AUG-24 06.16.32.622949000 AM,"PUBLIC","VERSION",55,"","CGFO45OF3SABYY0I2O9235X5P",21973,1,,,"","","","","","","","","","","","","","",,"",05-JUN-24 02.33.14.645852000 PM,09-DEC-15 10.28.05.014073000 PM,"","",,,"","","",92,""
49474659360413324450558753165483341419,23-NOV-15 04.14.41.798042000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Example of Generalized Invocation of Supertype Method","EXAMPLE OF GENERALIZED INVOCATION OF SUPERTYPE METHOD","PL/SQL supports object-oriented development via object types (our version of classes). In Oracle Database 11g, you can now reference the method of a (any) supertype in the type hierarchy via a generalized invocation.","",111001191937215,"","","",04-APR-24 05.57.32.421141000 AM,"PUBLIC","SUPERTYPE,OBJECT TYPE",7,"","CHMJEGIWL1923S0W9D77RYC2T",34205469,4,,,"","","","","","","","","","","","","","",,"",09-OCT-19 07.34.27.513996000 PM,09-OCT-19 07.34.33.274194000 PM,"","APPROVED",23-JUL-18 01.46.04.455754000 PM,,"Auto Approved","","",15,""
52502933236892350472635839198282839923,22-DEC-15 03.59.57.062085000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Different Approaches to Dynamic IN Clause","DIFFERENT APPROACHES TO DYNAMIC IN CLAUSE","The IN clause is a handy SQL feature, but (a) you can only have a maximum of 1000 items in the IN clause, and (b) sometimes you need to construct the IN clause dynamically. This script demonstrates a variety of ways you can do this.","",107483745150806,"","","",03-APR-24 02.43.47.126658000 PM,"PUBLIC","IN clause, IN, dynamic",11,"","CMGVU9KZA3C6ORS3LP6WGARYD",1303571,4,,,"","","","","","","","","","","","","","",,"",27-JUN-20 03.04.33.730647000 PM,23-DEC-16 02.40.10.608206000 PM,"","",,,"","","",20,""
55007234567809098405279856752144871538,15-JAN-16 03.53.40.608271000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Demonstration of the Autonomous Transaction Feature","DEMONSTRATION OF THE AUTONOMOUS TRANSACTION FEATURE","An autonomous transaction is an independent transaction started by another or outer transaction. Autonomous transactions perform SQL operations and then commit or roll back, without committing or rolling back the outer transaction. An autonomous transaction occurs within a subprogram in which the AUTONOMOUS_TRANSACTION pragma is included.","",109104615305944,"","","",22-JUL-24 06.39.41.386412000 AM,"PUBLIC","AUTONOMOUS TRANSACTIONS",28,"","CQHNZO344XWC43DANFEEZVNJO",14495172,4,,,"","","","","","","","","","","","","","",,"",29-JUN-24 09.11.52.120149000 AM,23-JUL-18 02.00.55.756244000 PM,"","APPROVED",23-JUL-18 02.00.55.749719000 PM,,"Auto Approved","","",104,""
49137809491101666573844631347652131661,20-NOV-15 11.20.09.179301000 AM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","Using TO_CHAR to Format Dates and Numbers","USING TO_CHAR TO FORMAT DATES AND NUMBERS","This example demonstrates the use of the TO_CHAR function for formatting dates and numerical values.","",49137809490389609266091614763750193997,"","","",19-JUL-24 01.55.22.576811000 AM,"PUBLIC","",76,"","CHJX64O0ANGO5O14RGEVYNBE1",3801673,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",106055794078934896064773105732375209382,"dates-numbers",15-APR-24 08.48.29.973402000 PM,18-MAY-17 09.04.06.139652000 AM,"http://docs.oracle.com/database/122/SQLRF/TO_CHAR-datetime.htm#SQLRF06129","",,,"","","",316,""
50181485852691166690414710756752373585,30-NOV-15 10.39.02.073784000 AM,"",,"CARSTEN.CZARSKI@ORACLE.COM","User Defined Aggregates","USER DEFINED AGGREGATES","The Oracle database allows to create custom SQL aggregation functions. Unlike normal PL/SQL functions, user defined aggregate functions can be used together with SQL GROUP BY or Analytic clauses. ","",12474458744329,"","","",14-AUG-24 09.05.34.786331000 AM,"PUBLIC","group,aggregation,sql,analytic",10,"","CIQ9F55Q240U4N9HBLI87AL86",14433138,7,,,"","","","","","","","","","","","","","",,"",10-AUG-23 09.52.23.520903000 PM,20-JUL-18 07.15.12.718720000 AM,"","APPROVED",20-JUL-18 07.15.12.700356000 AM,,"Auto Approved","","",113,""
54256559039809372942033646338186063967,08-JAN-16 10.59.20.984034000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","OUT Argument Set to NULL if Left Alone","OUT ARGUMENT SET TO NULL IF LEFT ALONE","If a subprogram does not set the actual argument for a formal OUT parameter, then it is set to NULL.","",54256559039797283683837500046439002207,"","","",09-APR-24 11.22.59.714940000 AM,"PUBLIC","OUT",7,"","CO93W3AI4XNHZ6XODSVHXPMUP",57201,4,,,"","","","","","","","","","","","","","",,"",10-OCT-19 03.00.16.907082000 AM,05-FEB-16 07.31.56.491152000 AM,"","",,,"","","",14,""
54789317307150915584646571405571956185,13-JAN-16 01.50.32.895704000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Fun with Collection Methods","FUN WITH COLLECTION METHODS","In this script, I demonstrate most of the methods available for PL/SQL collections, including COUNT, FIRST, LAST, NEXT, PRIOR, DELETE. ","",108886056138662,"","","",16-AUG-24 12.58.03.835697000 PM,"PUBLIC","COLLECTION,METHOD",39,"","CP40X52TMGU7QM5164JIP410N",14495078,4,,,"","","","","","","","","","","","","","",,"",01-FEB-24 08.16.23.757042000 AM,23-JUL-18 01.57.32.970108000 PM,"","APPROVED",23-JUL-18 01.57.32.963211000 PM,,"Auto Approved","","",255,""
55306863193080842957618763607281657758,18-JAN-16 12.18.40.726400000 PM,"",,"BART.VERSTEGEN@GMAIL.COM","SQL Pattern Matching","SQL PATTERN MATCHING","Taken from: http://www.oracle.com/webfolder/technetwork/tutorials/obe/db/12c/r1/misc/sql_pattern/sql_pattern.html","",55306237708728587108629762782907732359,"","","",04-APR-24 11.45.15.103862000 AM,"PUBLIC","",28,"","CQYQGLFYXMSP7ELUIPKQXUD5S",63557,7,,,"","","","","","","","","","","","","","",,"",22-JUL-22 09.23.07.355241000 PM,18-JAN-16 12.23.06.133833000 PM,"","APPROVED",15-JUN-18 01.34.34.886833000 AM,15-JUN-18 02.24.39.852788000 PM,"sharon.kennedy@oracle.com","","",56,""
55515201732659393806767935359535429011,20-JAN-16 12.10.13.260776000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Demonstration of Streaming Table Function","DEMONSTRATION OF STREAMING TABLE FUNCTION","What is a streaming table function? Well, first, a table function is a function executed with the TABLE operator, and then within the FROM clause of a query - in other words, a function that is selected from just like a relational table! A common usage of table functions in the Data Warehousing world is to stream data directly from one process or transformation, to the next process without intermediate staging. Hence, a table function used in this way is called a streaming table function. For more details, check out my blog post: http://stevenfeuersteinonplsql.blogspot.com/2015/06/table-functions-part-4-streaming-table.html","",114379679131825,"","","",03-APR-24 02.13.46.552010000 PM,"PUBLIC","STREAMING,TABLE FUNCTION",29,"","CRARD1YZ3ALNHDDGRJWPQQ0N5",14495260,6,,,"","","","","","","","","","","","","","",,"",05-JUN-21 03.58.28.477900000 PM,23-JUL-18 02.04.57.234510000 PM,"","APPROVED",23-JUL-18 02.04.57.227305000 PM,,"Auto Approved","","",68,""
49107484580896258590549800449894660584,20-NOV-15 03.53.03.521078000 AM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","REGEXP_REPLACE","REGEXP_REPLACE","This script demonstrates the use of the REGEXP_REPLACE function to search a string value for a regular expression and then replace the expression.","",49105602758858534202872893027354603324,"","","",16-AUG-24 03.35.03.109918000 PM,"PUBLIC","",111,"","CHJX64O0ASXJ8GOETNFS74SX5",11440324,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",89084737921340640658966277736593246745,"regexp-replace1",16-AUG-24 03.35.03.109784000 PM,09-APR-18 09.18.34.716687000 AM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/REGEXP_REPLACE.html#GUID-EA80A33C-441A-4692-A959-273B5A224490","",,,"","","",379,""
49485643942611072544202374799749185450,23-NOV-15 06.47.36.686796000 PM,"",,"ISAAC.E.AGUIRRE@GMAIL.COM","print_clob_to_output","PRINT_CLOB_TO_OUTPUT","Script to Print the contents of a CLOB to screen","",49485643942594147582727769991303298986,"","","",16-JUL-24 05.36.14.919618000 AM,"PUBLIC","",42,"","CHMPWVOIJPIWSEV0GU2UWBTW8",27043,6,,,"","","","","","","","","","","","","","",,"",27-JUN-24 07.45.05.566408000 PM,02-JAN-16 04.52.40.081654000 PM,"","APPROVED",15-JUN-18 01.34.34.893014000 AM,15-JUN-18 02.27.41.384443000 PM,"sharon.kennedy@oracle.com","","",129,""
54642408760460110607004428039545830565,12-JAN-16 03.38.41.094813000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - Partition clause with aggregation","ANALYTICS - PARTITION CLAUSE WITH AGGREGATION","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script is the first look at the partition clause with aggregates.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",54642408760386366132007935659888753829,"","","",13-AUG-24 03.22.12.205361000 AM,"PUBLIC","aggregation, kiss, partition",486,"","CPWDPU6R5OIYNH3IGMVME5683",59580,7,,,"","","","","","","","","","","","","","",,"",13-AUG-24 03.22.12.205225000 AM,18-FEB-16 06.01.00.245008000 AM,"","",,,"","","",790,""
51646680118600766037000962267203418017,14-DEC-15 11.15.21.083362000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Finding min/max dates within groups","FINDING MIN/MAX DATES WITHIN GROUPS","AskTom answer to find the min/max rows within price change groups.","",51644011526153553224615709657547842222,"","","",17-MAY-24 11.18.17.705854000 AM,"PUBLIC","",70,"","CK3GKD93KOR78WGKPWPI2H2PF",42250,7,,,"","","","","","","","","","","","","","",,"",10-JUL-23 09.29.57.419122000 AM,23-JAN-16 05.57.28.987321000 PM,"","",,,"","","",140,""
55290693043726830594701209657565429872,18-JAN-16 08.34.46.013790000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - First look at Window functions","ANALYTICS - FIRST LOOK AT WINDOW FUNCTIONS","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script introduces the window clause.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",55290005108874759919658314965562614113,"","","",19-AUG-24 08.35.04.696262000 AM,"PUBLIC","ranking, kiss, oracle, sql, analytics",585,"","CQXSUXL3JHBJD4VCPWAPT1X4I",63391,7,,,"","","","","","","","","","","","","","",,"",19-AUG-24 08.35.04.696123000 AM,18-FEB-16 08.47.14.091206000 AM,"","",,,"","","",1092,""
55290693043822335734450765362367217776,18-JAN-16 08.36.28.979465000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - More window clause examples","ANALYTICS - MORE WINDOW CLAUSE EXAMPLES","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script shows more window clause examples.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",55290005108874759919658314965562614113,"","","",12-AUG-24 07.55.41.698709000 PM,"PUBLIC","kiss, windows, oracle, analytics",283,"","CQXSUXL3VHBQGQRFJBBPNFE2A",63395,7,,,"","","","","","","","","","","","","","",,"",12-AUG-24 07.55.41.698591000 PM,07-MAR-16 06.50.57.753798000 PM,"","",,,"","","",447,""
56348385476664157041961634812452855286,28-JAN-16 11.45.55.610102000 AM,"",,"PATRICK.BAREL@GMAIL.COM","swap values without introducing an extra variable","SWAP VALUES WITHOUT INTRODUCING AN EXTRA VARIABLE","This script demonstrates how to swap the numeric values of two variables without introducing a temporary variable.","",56346258186065915581343963771673685324,"","","",15-AUG-24 05.07.51.235875000 AM,"PUBLIC","swap values temporary variable",3,"","CSMUQ442YYS4W7JM489ZL34NC",72511,4,,,"","","","","","","","","","","","","","",,"",,28-JAN-16 04.41.39.244710000 PM,"","APPROVED",15-JUN-18 01.34.34.898141000 AM,15-JUN-18 02.27.54.765165000 PM,"sharon.kennedy@oracle.com","","",29,""
56377853264150919131306341330768796313,28-JAN-16 06.29.34.723670000 PM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","Conditional Insert and Update Using MERGE","CONDITIONAL INSERT AND UPDATE USING MERGE","This example conditionally inserts and updates table data by using the MERGE statement.","",56377853264073547878851005063587601049,"","","",05-AUG-24 07.49.04.098472000 PM,"PUBLIC","",23,"","CS9FW88LEEB9Y93IXZ5LAK5F5",11285758,1,,,"","","","","","","","","","","","","","",139051579605729783488391049487256972183,"conditional-insert-and-update",05-AUG-24 07.49.04.098337000 PM,04-APR-18 08.46.48.632765000 AM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/MERGE.html#GUID-5692CCB7-24D9-4C0E-81A7-A22436DC968F","",,,"","","",110,""
49120628921682356189574205104898864964,20-NOV-15 07.01.26.792164000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - Ranking rows across an entire table","ANALYTICS - RANKING ROWS ACROSS AN ENTIRE TABLE","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script is for ranking rows across an entire table.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes

","",49120628921494972687533937582819407684,"","","",22-AUG-24 07.20.09.443814000 AM,"PUBLIC","ranking, kiss",2194,"","CH1TEFSZ0MC75PK4IX2JBFJA7",23995,7,,,"","","","","","","","","","","","","","",,"",15-AUG-24 06.03.18.272743000 AM,11-MAR-16 02.42.50.595418000 PM,"","",,,"","","",4352,""
49140717814749619509298989865345143758,20-NOV-15 12.00.19.670115000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Watch Out for Ambiguous Overloading!","WATCH OUT FOR AMBIGUOUS OVERLOADING!","Overloading - giving the same name to at least two subprograms in the same scope (package specification, body or really any declaration section) - is a fantastic feature. But you need to make sure your overloadings are unambiguous - at BOTH compile times (when you compile your code and when a person compiles code containing invocations of your overloaded subprograms).","",117169559328405,"","","",03-APR-24 02.37.55.404535000 PM,"PUBLIC","OVERLOADING",12,"","CG2Z0R946MVLQTNT0LF10EB2C",14494768,6,,,"","","","","","","","","","","","","","",,"",19-OCT-21 07.27.13.286183000 PM,23-JUL-18 01.44.05.700060000 PM,"","APPROVED",23-JUL-18 01.44.05.687016000 PM,,"Auto Approved","","",18,""
56474006974695263740112798807910697137,29-JAN-16 04.31.07.417708000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","SQL on Collections","SQL ON COLLECTIONS","""Hi Steven, what is the best way to perform operations like SELECT a, SUM(b) from t GROUP BY a that work great on tables, but on PLSQL collections? I know that we can do this by using loops, but I would like to have someting as expressive as SQL on the PLSQL collection. Is there a way to get this?"" Oh, yeah!","",56474006974673503075359735482765985969,"","","",24-JUL-24 11.40.10.514723000 PM,"PUBLIC","table operator",56,"","CST4I8AQQ662PDTEB8RGEU0TA",75109,4,,,"","","","","","","","","","","","","","",,"",24-JUL-24 11.39.56.615008000 PM,01-MAR-16 09.31.07.340710000 PM,"","",,,"","","",313,""
56470829681947614263643314619809437070,29-JAN-16 04.09.17.694602000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Finding, deleting and preventing duplicate rows","FINDING, DELETING AND PREVENTING DUPLICATE ROWS","Examples of SQL queries to:

- Find duplicated rows in a table
- Delete these
- Add a unique constraint to prevent new invalid rows

This also shows how you can use the ""exceptions into"" clause when validating constraints.","",56470829681583727591939311238222878094,"","","",10-AUG-24 06.54.34.767614000 AM,"PUBLIC","delete group-by analytics constraints",109,"","CST2ISRYI95J1LUJ6GGJ9HT5P",73398,1,,,"","","","","","","","","","","","","","",,"",19-DEC-23 06.46.47.501108000 AM,26-FEB-16 06.56.13.851727000 AM,"","",,,"","","",420,""
48845503951604243426744479222583665802,17-NOV-15 03.37.22.465588000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Demonstration of Function Result Cache","DEMONSTRATION OF FUNCTION RESULT CACHE","The Function Result Cache is a fantastic feature added in Oracle Database 11g, which allows you to avoid unnecessary function execution, especially when fetching data that is static. Use case: fetching from static tables or from tables that change much less frequently than they are queried.","",16285114531504,"","","",03-APR-24 02.23.06.763426000 PM,"PUBLIC","RESULT CACHE,FUNCTION,PERFORMANCE,11g_frc_demo",19,"","CGLWMYTTBJKXMRORDBFWS0WYA",2185351,4,,,"","","","","","","","","","","","","","",,"",01-AUG-22 09.55.33.380137000 AM,22-FEB-17 01.47.29.368492000 PM,"","",,,"","","",32,""
49654319258136699333303385796177955495,25-NOV-15 09.48.17.305424000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Using MEMBER OF: Is Element in Array?","USING MEMBER OF: IS ELEMENT IN ARRAY?","The MEMBER OF syntax allows you to easily determine if the specified value is in a nested table. MEMBER OF is not available with associative arrays and varrays. Use this operator instead of writing an algorithm to loop through the array checking for a match.","",17392476472720,"","","",17-JUL-24 07.31.27.657224000 AM,"PUBLIC","MEMBER OF,NESTED TABLE",23,"","CHWN0FPCX8S472ILWUOH7XPDV",14494820,4,,,"","","","","","","","","","","","","","",,"",17-JUL-24 07.31.27.657125000 AM,23-JUL-18 01.46.38.379648000 PM,"","APPROVED",23-JUL-18 01.46.38.373820000 PM,,"Auto Approved","","",124,""
50628117603226050773589931741684618561,04-DEC-15 05.13.05.917863000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Demonstration of Named Notation","DEMONSTRATION OF NAMED NOTATION","With named notation, you associate an actual argument with its formal parameter with this syntax: formal => actual. Named notation allows you to change the order in which you pass actuals, and also ""skip over"" internal (non-trailing) IN parameters that have defaults.","",4894998597566,"","","",26-MAY-24 03.02.59.446182000 PM,"PUBLIC","NAMED NOTATION",8,"","CJGNZFI9ZGZTPQJ0RIMP9OZBN",289222,4,,,"","","","","","","","","","","","","","",,"",05-MAR-24 06.46.15.619534000 AM,18-JUL-16 07.57.53.788594000 PM,"","",,,"","","",22,""
49566787574978340322277091682015664709,24-NOV-15 01.22.59.044671000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Binding PLSQL Types in SQL (12.1 and Higher)","BINDING PLSQL TYPES IN SQL (12.1 AND HIGHER)","In 12.1, Oracle Database extended its support for PL/SQL-specific datatypes in SQL statements. Before Oracle Database 12c, values with PL/SQL-only data types (for example, BOOLEAN, associative array, and record) could not be bound from client programs (OCI or JDBC) or from static and native dynamic SQL issued from PL/SQL in the server. As of Oracle Database 12c, it is possible to bind values with PL/SQL-only data types to anonymous blocks (which are SQL statements), PL/SQL function calls in SQL queries and CALL statements, and the TABLE operator in SQL queries. 

http://docs.oracle.com/database/121/LNPLS/release_changes.htm#LNPLS111
","",106936012050705,"","","",19-AUG-24 01.11.20.801682000 PM,"PUBLIC","BINDING",82,"","CHR3CACHU6KWWVWCMEBWF2FCN",14494809,4,,,"","","","","","","","","","","","","","",,"",29-APR-24 05.25.07.453491000 PM,23-JUL-18 01.46.19.500236000 PM,"","APPROVED",23-JUL-18 01.46.19.469849000 PM,,"Auto Approved","","",403,""
56038772146417781797347598171579787495,25-JAN-16 12.40.05.554037000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Checking Equality of Nested Tables","CHECKING EQUALITY OF NESTED TABLES","One of the nicest things about nested tables is that you can compare two such collections for equality using nothing more than...the equality operator! Key things to remember: order of elements is not significant; if the collections have different numbers of elements, ""="" returns FALSE; if they have the same number of elements, but at least one of the values in either collection is NULL, ""="" returns NULL; two initialized, but empty collections are equal.","",56038772146331948064154959500175648999,"","","",03-APR-24 02.43.49.556274000 PM,"PUBLIC","NESTED TABLE",11,"","CR4W03F73UZ24QZ0FTNGRKEGD",70182,4,,,"","","","","","","","","","","","","","",,"",06-DEC-20 12.21.01.743364000 PM,26-JAN-16 08.09.55.405094000 PM,"","",,,"","","",41,""
56150290499268170650117695146801397746,26-JAN-16 02.15.05.922868000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Back Trace Exception to Line That Raised It","BACK TRACE EXCEPTION TO LINE THAT RAISED IT","The DBMS_UTILITY.format_error_backtrace function, added in Oracle Database 10g Release 2, is a critical subprogram to call when logging exceptions. It returns a string that traces the error back to the line on which it was raised! Note: if you re-raise an exception as it propagates up the stack, you will lose the ""original"" line number. The back trace function always only traces back to the most recently raised exception.","",107125969764396,"","","",16-JUL-24 10.47.49.718266000 AM,"PUBLIC","BACKTRACE,Exception,dbms_utility",134,"","CSBHUAL75A37TL37JFAV9I3SH",3784148,4,,,"","","","","","","","","","","","","","",,"",29-APR-24 08.53.44.175679000 AM,17-MAY-17 11.15.24.638292000 AM,"","",,,"","","",265,""
56180453738362058956473062127517214995,26-JAN-16 09.03.54.936917000 PM,"",,"MALEKARA@GMAIL.COM","Declaring Explicit Cursors","DECLARING EXPLICIT CURSORS","No description provided","",56172892651537262115150514213349933726,"","","",14-JUL-24 03.19.23.091070000 PM,"PUBLIC","",32,"","CSC5SF55MS0KYGJQ8P3XZME8L",70923,4,,,"","","","","","","","","","","","","","",,"",29-MAY-24 06.41.20.364223000 AM,26-JAN-16 09.03.54.936928000 PM,"","APPROVED",15-JUN-18 01.34.34.911045000 AM,15-JUN-18 02.28.16.177818000 PM,"sharon.kennedy@oracle.com","","",123,""
56256812446176512946315284148447241267,27-JAN-16 02.33.56.396070000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Error Message Functions: SQLERRM and DBMS_UTILITY.FORMAT_ERROR_STACK","ERROR MESSAGE FUNCTIONS: SQLERRM AND DBMS_UTILITY.FORMAT_ERROR_STACK","SQLERRM is a function that returns the current error message (if no argument is passed to it) or the system error message associated with the specified error code. DBMS_UTILITY.FORMAT_ERROR_STACK also returns the error message (or stack, if there is a stack of errors) and avoids truncation issues that may occur with SQLERRM.","",18740995146337,"","","",21-AUG-24 09.04.53.193793000 AM,"PUBLIC","ERROR,MESSAGE,stack,sqlerrm",128,"","CSHGBRKE3YET9WOFPCU7PUV6T",12164001,4,,,"","","","","","","","","","","","","","",,"",24-JUL-24 12.06.55.422946000 PM,29-APR-18 12.51.01.765413000 PM,"","",,,"","","",212,""
49433687350963873239034990427976111660,23-NOV-15 06.54.09.707971000 AM,"",,"ROOPESH.ASHOK.KUMAR@ORACLE.COM","Formatting Dates Using TRUNC","FORMATTING DATES USING TRUNC","This example demonstrates the use of the TRUNC function for formatting dates.","",49433687350934859019364239327783163436,"","","",06-AUG-24 02.21.57.418286000 AM,"PUBLIC","",74,"","CHJX64O0AHZT2XFUO9DYO5TVX",4442880,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",109406210093635944836600379700916430316,"trunc-dates",06-AUG-24 02.21.57.418146000 AM,19-JUN-17 10.49.58.867727000 AM,"http://docs.oracle.com/database/122/SQLRF/TRUNC-date.htm#SQLRF06151","",,,"","","",267,""
50395726449400850168481977510082037829,02-DEC-15 12.02.33.433413000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Examples of Conditional Compilation","EXAMPLES OF CONDITIONAL COMPILATION","Use ""$"" syntax to affect which lines of code in your source program will be compiled and which ignored. Conditional compilation feature can be of great assistance when writing code to run on multiple versions of Oracle and can be used to enforce at compile time code quality rules, among many applications of this feature. Best resource on conditional compilation: http://www.oracle.com/technetwork/database/features/plsql/overview/plsql-conditional-compilation-133587.pdf","",6865473359969,"","","",07-AUG-24 04.08.11.492330000 PM,"PUBLIC","CONDITIONAL COMPILATION",20,"","CI3DT3OO7EBKDB906F4H2VU0C",14494839,4,,,"","","","","","","","","","","","","","",,"",07-DEC-23 01.09.50.387220000 PM,23-JUL-18 01.47.28.538839000 PM,"","APPROVED",23-JUL-18 01.47.28.521952000 PM,,"Auto Approved","","",58,""
53880264111538301682982637446984507977,04-JAN-16 08.28.56.429510000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Lots of Ways to See if Nested Table is Empty!","LOTS OF WAYS TO SEE IF NESTED TABLE IS EMPTY!","Sure you could use the COUNT method. But you could use CARDINALITY and IS EMPTY!","",18908027286434,"","","",03-APR-24 02.25.49.474050000 PM,"PUBLIC","EMPTY",17,"","COOEVK7LGMOYJBXIE8QHZHXA6",14494895,4,,,"","","","","","","","","","","","","","",,"",14-FEB-24 06.59.09.863194000 AM,23-JUL-18 01.50.27.301560000 PM,"","APPROVED",23-JUL-18 01.50.27.293815000 PM,,"Auto Approved","","",21,""
55497116836973071013683060385059061165,20-JAN-16 08.16.11.130975000 AM,"",,"PATRICK.BAREL@GMAIL.COM","Read Consistency In Action","READ CONSISTENCY IN ACTION","See how read consistency works. You can select rows even when you just issued a delete. You just have to open the cursor before the delete","",55497116836366190252236516539356560813,"","","",19-MAR-24 04.55.28.380557000 PM,"PUBLIC","SQL; Read Consistency",4,"","CQ9PS5JEYR67877VG66MNNGHR",64953,1,,,"","","","","","","","","","","","","","",,"",02-AUG-17 09.54.55.846317000 PM,20-JAN-16 08.25.47.609043000 AM,"","APPROVED",15-JUN-18 01.34.34.915339000 AM,18-JUN-18 02.30.09.841992000 PM,"sharon.kennedy@oracle.com","","",8,""
50190672183649599759839903543772988959,30-NOV-15 12.44.19.046079000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Alternative Quoting Mechanism (''Q'') for String Literals","ALTERNATIVE QUOTING MECHANISM (''Q'') FOR STRING LITERALS","Oracle Database offers the ability, in both SQL and PL/SQL, to specify our own user-defined delimiters for string literals. Here's how it works: you prefix your literal with the letter ""q"". Then you type a single quote, followeed by your starting delimiter for the literal. Then you type your literal string without having to double up on your single quote characters. When you have typed in your full literal, terminate it with your ending delimiter, followed by a single quote. In other words, you will follow this general format:

q'[your string here]'

where ""["" represents (and certainly could be used for) the starting delimiter, and ""]"" represents the ending delimiter. Oracle automatically recognizes ""paired"" delimiters, such as [], {}, (), and <>. If you want to use some other character as your start delimiter and it doesn't have a ""natural"" partner for termination, you must use the same character for start and end delimiters.

Finally, if you choose a character for a delimiter and it appears in your string immediately before a single quotation mark, Oracle will be unhappy and raise an error.","",113000065653865,"","","",04-JUL-24 09.06.30.645895000 PM,"PUBLIC","STRING,LITERAL,quote",139,"","CISANP7RY0VT5TKN5BEJG1CGZ",183460471,4,,,"","","","","","","","","","","","","","",,"",23-MAY-24 04.26.57.117402000 PM,08-DEC-22 07.14.41.283302000 PM,"","APPROVED",23-JUL-18 01.47.09.453467000 PM,,"Auto Approved","","",364,""
51834959113769697254577434811815326821,16-DEC-15 06.34.40.374499000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - More ranking options","ANALYTICS - MORE RANKING OPTIONS","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script is for additional ranking options across an entire table.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",51834959113671774263188649848664126565,"","","",22-AUG-24 07.11.26.481445000 AM,"PUBLIC","",730,"","CLEBS8F5N4KR2B3VJVNVVGXKN",43226,7,,,"","","","","","","","","","","","","","",,"",15-AUG-24 06.12.09.002838000 AM,19-JAN-16 08.03.01.847165000 PM,"","",,,"","","",1127,""
52478438175283436264541459526418317619,22-DEC-15 10.24.43.252633000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Fuzzy Matching of Text Strings","FUZZY MATCHING OF TEXT STRINGS","Fuzzy matching approaches for similar strings:

- Virtual column to convert known abbreviations
- Jaro-Winkler comparison to check for similarity","",52472328112711596150639428129109209505,"","","",25-FEB-24 10.56.08.867585000 AM,"PUBLIC","virtual columns, utl_match",15,"","CMFGYTXI5MRXN20M50BAFNO29",47174,1,,,"","","","","","","","","","","","","","",,"",21-APR-23 07.01.00.897171000 PM,16-FEB-16 10.45.49.868274000 AM,"","",,,"","","",63,""
54077733431354906947677313208660187417,06-JAN-16 06.06.19.762188000 PM,"",,"ERIK.VAN.ROON@EVROCS.NL","Problematic dynamic Merge statement with plsql and binds","PROBLEMATIC DYNAMIC MERGE STATEMENT WITH PLSQL AND BINDS","Script shows a problem with executing dynamic merge statements (my dba is filing a bug report).
If that merge statement contains plsql in a with clause (a new feature for Oracle 12c) and (!!) it makes use of bind variables which get their values from a using-clause with the execute immediate, then your session will crash horribly. You will be disconnected from the database.
Script will first show a merge that does work and then a version with the changes needed to reproduce this problem.

NOTE: Fixed in 18c","",54077733431108286080475928857020127513,"","","",14-JUL-24 02.27.15.204928000 PM,"PUBLIC","plsql merge dynamic with subquery factoring bind",16,"","CO0ASCWFGK3T8XXZ0ADPEMWGX",55955,4,,,"","","","","","","","","","","","","","",,"",12-MAR-23 07.01.59.025473000 AM,04-NOV-18 02.33.22.220845000 PM,"","APPROVED",15-JUN-18 01.34.34.919735000 AM,15-JUN-18 02.29.13.217456000 PM,"sharon.kennedy@oracle.com","","",47,""
51025542225377599685780901284027222133,08-DEC-15 12.33.02.940703000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Randomizer Package: Generate lists of unique, random values","RANDOMIZER PACKAGE: GENERATE LISTS OF UNIQUE, RANDOM VALUES","Uses DBMS_RANDOM to generate random integers and strings, but also ensures no duplicates and passes back results in a collection. More info on DBMS_RANDOM here: http://docs.oracle.com/database/121/ARPLS/d_random.htm#ARPLS040","",107464105196836,"","","",03-APR-24 02.16.56.861391000 PM,"PUBLIC","RANDOM",24,"","CJ3LT3SRO2SKJWPO6NYCVA1TZ",14494846,4,,,"","","","","","","","","","","","","","",,"",13-SEP-22 06.35.15.842799000 PM,23-JUL-18 01.47.52.050057000 PM,"","APPROVED",23-JUL-18 01.47.52.039987000 PM,,"Auto Approved","","",84,""
56361023810172476164793318365836527074,28-JAN-16 02.55.48.692639000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","''How did I get here?'' DBMS_UTILITY.FORMAT_CALL_STACK","''HOW DID I GET HERE?'' DBMS_UTILITY.FORMAT_CALL_STACK","Use the DBMS_UTILITY.FORMAT_CALL_STACK function to answer the question ""How did I get here?"". Note that this function only shows you the name of the program unit (e.g., package name) and not the name of the subprogram in that program unit. In 12.1 and higher, you can also use the UTL_CALL_STACK package, which offers the advantage of showing you the name of the subprogram from which the call stack was requested.","",7333751878980,"","","",20-AUG-24 04.48.33.275904000 PM,"PUBLIC","call stack",615,"","CSNUGUPO8M5HY2XZZMGWPTY38",8992721,4,,,"","","","","","","","","","","","","","",,"",10-MAR-24 08.28.53.185757000 AM,19-DEC-17 02.42.59.478307000 AM,"","",,,"","","",819,""
56454282257362144338950754222570386479,29-JAN-16 12.00.52.585181000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","View Post Processed Code (Conditional Compliation)","VIEW POST PROCESSED CODE (CONDITIONAL COMPLIATION)","This script demonstrates use of the DBMS_PREPROCESSOR package to display the ""final"" source code that was compiled from your original conditionally-compiled code. With conditional compilation, you use $IF and other $-prefixed elements to potentially include/exclude chunks for code for the compilation process. It is, therefore, critical, that you can see exactly what will be executed. ","",56454282257272683828299271663642129455,"","","",04-APR-24 06.05.36.861100000 AM,"PUBLIC","conditional compilation",4,"","CSS000FQIXHM6GTK0QI7ZQ444",25962663,6,,,"","","","","","","","","","","","","","",,"",08-APR-19 12.50.55.579692000 PM,08-APR-19 12.51.15.327482000 PM,"","APPROVED",08-APR-19 12.51.15.283825000 PM,,"Auto Approved","","",13,""
51651649895232820848462001815513901702,14-DEC-15 12.23.51.986064000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Varray Examples","VARRAY EXAMPLES","The varray (variable size array) is one of the three types of collections in PL/SQL (associative array, nested table, varray). The varray's key distinguishing feature is that when you declare a varray type, you specify the maximum number of elements that can be defined in the varray. Yes, it is odd that the collection with any sense of a ""fixed"" maximum size is called the ""variable size"" array. But hey! More information: http://docs.oracle.com/database/121/LNPLS/composites.htm#LNPLS443","",3177261642881,"","","",08-AUG-24 05.03.30.988522000 PM,"PUBLIC","varray",148,"","CK4PEGYA9SX769Y06KX6IKZI8",14494859,4,,,"","","","","","","","","","","","","","",,"",19-FEB-24 05.58.19.557805000 PM,23-JUL-18 01.48.31.761621000 PM,"","APPROVED",23-JUL-18 01.48.31.747221000 PM,,"Auto Approved","","",780,""
51929110017272526078354747438786047555,17-DEC-15 04.09.01.620001000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - Ranking part 3","ANALYTICS - RANKING PART 3","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script demonstrates the Tabibitosan method for grouping sets of data.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",51928950885369877445074135587985447088,"","","",18-AUG-24 06.03.12.380350000 PM,"PUBLIC","",1005,"","CLJRGH80CCZWJTPTLPK2E5081",43612,7,,,"","","","","","","","","","","","","","",,"",15-AUG-24 06.32.23.143907000 AM,04-MAR-16 03.28.38.358812000 PM,"","",,,"","","",1843,""
52596764967085333187801175276219153517,23-DEC-15 01.34.37.818400000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Advanced Collection Features: Nested and String-Indexed","ADVANCED COLLECTION FEATURES: NESTED AND STRING-INDEXED","Here's a package that makes it easy to manage lists of lists, using a nested collection and a string indexed collection.","",30778251282502,"","","",03-APR-24 02.20.09.557824000 PM,"PUBLIC","NESTED COLLECTION,STRING INDEX",21,"","CMMAUNTGV96X9RB120WKR5J3J",12209863,4,,,"","","","","","","","","","","","","","",,"",05-OCT-22 08.30.36.824836000 PM,01-MAY-18 11.34.01.222745000 AM,"","",,,"","","",67,""
54060174440273601631888543378464975824,06-JAN-16 02.03.24.896856000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Finding the Previous Row in a Different Group","FINDING THE PREVIOUS ROW IN A DIFFERENT GROUP","This script uses a table of transactions, classed either as credits or debits. 

It explores three different methods for finding the previous transaction id for the other transaction type. i.e. if the current row is a credit, return the id of the last debit ordered by transaction date.

It does this using standard analytics, the model clause and pattern matching (match_recognize)","",54058633283587171066800875822132160042,"","","",07-MAY-24 02.19.13.738539000 PM,"PUBLIC","last_value, model, match_recognize",44,"","COYRTVW5MGEZSO0KMGNXGUFY6",14514603,7,,,"","","","","","","","","","","","","","",,"",06-MAY-24 09.28.50.194326000 AM,24-JUL-18 12.24.01.407526000 PM,"","APPROVED",24-JUL-18 12.24.01.390689000 PM,,"Auto Approved","","",122,""
56026421504073261933778373929285059225,25-JAN-16 09.43.25.072670000 AM,"",,"TAPU2009JU@GMAIL.COM","How to Show All employee names within a department in SQL(Listagg)","HOW TO SHOW ALL EMPLOYEE NAMES WITHIN A DEPARTMENT IN SQL(LISTAGG)","How to Show All employee names within a department in SQL","",56026421504063590527221456895887409817,"","","",12-APR-24 08.20.40.842438000 AM,"PUBLIC","Listagg",77,"","CR39PJYEFIAT34MW8N52RIZHN",70136,3,,,"","","","","","","","","","","","","","",,"",18-MAR-24 07.28.31.063954000 AM,02-FEB-16 01.17.13.437769000 AM,"","APPROVED",15-JUN-18 01.34.34.923611000 AM,15-JUN-18 02.29.26.548882000 PM,"sharon.kennedy@oracle.com","","",185,""
56127543445951809921821438853736197567,26-JAN-16 08.51.54.409844000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - The RANGE options for windows","ANALYTICS - THE RANGE OPTIONS FOR WINDOWS","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script demonstrates the RANGE option for the windowing clause.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",56127543445691890870604293581174369727,"","","",19-AUG-24 01.41.02.542737000 PM,"PUBLIC","kiss, windows, oracle, analytics, range",336,"","CR93UBGK20OJDOSU3LIQKTF0H",70583,7,,,"","","","","","","","","","","","","","",,"",19-AUG-24 01.41.02.542620000 PM,26-JAN-16 08.51.54.409858000 AM,"","",,,"","","",566,""
53309903882469748387550102475099534280,30-DEC-15 09.35.31.008358000 AM,"",,"ROGEL@WEB.DE","FizzBuzz","FIZZBUZZ","FizzBuzz using only one ""case""","",53309903882452823426075497666653647816,"","","",28-NOV-23 06.40.05.361750000 AM,"PUBLIC","Fizz Buzz FizzBuzz",10,"","CNRGRD87L93R0Z2CWY5HJ0SII",51618,1,,,"","","","","","","","","","","","","","",,"",28-NOV-23 06.40.05.361658000 AM,13-MAR-16 05.27.36.403217000 AM,"","APPROVED",15-JUN-18 01.34.34.930638000 AM,15-JUN-18 02.28.06.359593000 PM,"sharon.kennedy@oracle.com","","",8,""
52702758621254183248843453617167589010,24-DEC-15 01.55.43.482182000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","SAVE EXCEPTIONS and FORALL - An Exploration","SAVE EXCEPTIONS AND FORALL - AN EXPLORATION","Add the SAVE EXCEPTIONS clause to your FORALL statement when you want the PL/SQL runtime engine to execute all DML statements generated by the FORALL, even if one or more than fail with an error. If you use INDICES OF, you will need to take some care to find your way back to the offending statement.","",4261719369514,"","","",08-AUG-24 03.20.34.050214000 PM,"PUBLIC","FORALL,SAVE EXCEPTIONS,INDICES OF, forall_bulkexc",97,"","CMSE3VBYJAVPIV6Y1HSTZZPJ4",45919857,4,,,"","","","","","","","","","","","","","",,"",24-JUL-24 04.45.40.444920000 PM,06-APR-20 08.35.59.509561000 PM,"","APPROVED",23-JUL-18 01.49.59.126769000 PM,,"Auto Approved","","",287,""
53816451928955709492406893486138912189,04-JAN-16 05.51.23.919611000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - How null values are treated","ANALYTICS - HOW NULL VALUES ARE TREATED","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script is for looking how nulls are treated.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",53816451928452796351447207749461142973,"","","",20-AUG-24 04.58.30.125729000 PM,"PUBLIC","ranking, nulls, kiss",630,"","COKPDETE3HIY3JO0YZOA4EERZ",54795,7,,,"","","","","","","","","","","","","","",,"",19-AUG-24 01.41.58.862561000 PM,01-MAR-16 04.37.07.986008000 PM,"","",,,"","","",969,""
53819776078206104971968458544686716208,04-JAN-16 06.42.26.518097000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - How to apply predicates","ANALYTICS - HOW TO APPLY PREDICATES","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script is for looking at to how use an analytic expression as a predicate.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",53819776076752976136791674276689892656,"","","",04-APR-24 07.05.03.467941000 AM,"PUBLIC","ranking, predicates, kiss",426,"","COKV9220FFZT8IQS7UDQSV5VM",54844,7,,,"","","","","","","","","","","","","","",,"",06-SEP-23 12.19.48.535993000 PM,01-MAR-16 07.27.28.971246000 PM,"","",,,"","","",578,""
51337015238291944918393498917640234735,11-DEC-15 12.21.52.457743000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Use ACCESSIBLE BY to Control Access to Code","USE ACCESSIBLE BY TO CONTROL ACCESS TO CODE","You might implement a database application as several PL/SQL packages—one package that provides the application programming interface (API) and helper packages to do the work. Ideally, only the API is accessible to clients.

Also, you might create a utility package to provide services to only some other PL/SQL units in the same schema. Ideally, the utility package is accessible only to the intended PL/SQL units.

Before Oracle Database 12c, PL/SQL could not prevent clients from using items exposed in helper packages. To isolate these items, you had to use relational database management system (RDBMS) security features. Some application deployment schemes made RDBMS security features hard to use.

As of Oracle Database 12c, any program unit CREATE statement has an optional ACCESSIBLE BY clause that lets you specify a white list of PL/SQL units that can access the PL/SQL unit that you are creating or altering. ","",2029801097904,"","","",03-APR-24 02.29.37.342448000 PM,"PUBLIC","ACCESSIBLE BY",15,"","CKLK2VR32VTI9IGEJRIL8OM7L",14494851,6,,,"","","","","","","","","","","","","","",,"",11-AUG-21 11.55.12.361605000 AM,16-JUN-20 07.44.25.778030000 PM,"","APPROVED",23-JUL-18 01.48.11.292627000 PM,,"Auto Approved","","",55,""
54048736288302535034079517700931596556,06-JAN-16 11.12.39.491005000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Where to Handle Exception?","WHERE TO HANDLE EXCEPTION?","Where should you handle an exception? In each subprogram? Only at the top-level subprogram or anonymous block? I suggest that including exception sections in many ""deep"" subprograms is critical if you want to capture your application state (values of local variables or parameters, contents of tables, etc.) at the time of the error. Note: all database objects start with ""plch"" indicating that this script was taken from the Oracle Dev Gym (formerly known as the PL/SQL Challenge): https://devgym.oracle.com","",8175226314254,"","","",03-APR-24 02.29.31.282514000 PM,"PUBLIC","EXCEPTION",15,"","COX6OK1DQKTCNY5A8NPJFS3SO",14127504,4,,,"","","","","","","","","","","","","","",,"",26-SEP-23 05.25.58.228053000 AM,08-OCT-19 08.36.41.580566000 PM,"","APPROVED",09-JUL-18 03.50.43.148759000 PM,,"Auto Approved","","",66,""
54691829675802611531701438936215380022,12-JAN-16 02.58.38.872718000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Serialize Effect of Autonomous Transaction","SERIALIZE EFFECT OF AUTONOMOUS TRANSACTION","You can use the SET TRANSACTION statement to begin a read-only or read-write transaction, establish an isolation level, or assign the current transaction to a specified rollback segment. In the context of autonomous transactions, use SET TRANSACTION ISOLATION LEVEL SERIALIZABLE if you do not want the session that invoked the autonomous transaction subprogram to see the effects of that subprogram's changes - until that session commits.","",6421928654678,"","","",15-JUL-24 02.26.48.469680000 PM,"PUBLIC","AUTONOMOUS TRANSACTIONS,SERIALIZABLE",11,"","CPY93Y1KS1QPLD109JS9QZFUW",14494924,4,,,"","","","","","","","","","","","","","",,"",22-NOV-21 10.18.00.861911000 AM,23-JUL-18 01.51.11.352031000 PM,"","APPROVED",23-JUL-18 01.51.11.346554000 PM,,"Auto Approved","","",37,""
54888406148036384506571443430956376507,14-JAN-16 12.10.17.662713000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Binding Variables with EXECUTE IMMEDIATE of PL/SQL Block","BINDING VARIABLES WITH EXECUTE IMMEDIATE OF PL/SQL BLOCK","When you execute a dynamic PL/SQL block dynamically, variables are bound to placeholders BY NAME, not by position (which is the case with dynamic SQL). ","",6843196063577,"","","",23-JUL-24 08.34.13.905876000 AM,"PUBLIC","DYNAMIC PLSQL",89,"","CQAKWIREQDXALBQMM6KODT5VX",14495165,4,,,"","","","","","","","","","","","","","",,"",28-MAR-24 08.51.10.772913000 AM,23-JUL-18 02.00.14.987479000 PM,"","APPROVED",23-JUL-18 02.00.14.982508000 PM,,"Auto Approved","","",429,""
52071965906587362769452585313242898179,18-DEC-15 12.58.29.241904000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Dynamic SQL: Don't concatenate, bind!","DYNAMIC SQL: DON'T CONCATENATE, BIND!","When you are writing a program with dynamic SQL in it (that is, you construct your statement at runtime and execute it with EXECUTE IMMEDIATE or DBMS_SQL - most likely and preferably the former), you should make sure to bind all variable values into that statement, and not concatenate.","",5494720035405,"","","",06-JUL-24 08.25.13.708276000 AM,"PUBLIC","DYNAMIC SQL,BIND",23,"","CLR1FKU4LVWUA0EWAD6C8948U",14494879,4,,,"","","","","","","","","","","","","","",,"",08-MAR-24 10.12.35.412362000 AM,23-JUL-18 01.49.17.569607000 PM,"","APPROVED",23-JUL-18 01.49.17.537667000 PM,,"Auto Approved","","",148,""
54580328186955358721764966853899853548,11-JAN-16 01.20.22.868716000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","API to Generate URLs for Use in Application Express","API TO GENERATE URLS FOR USE IN APPLICATION EXPRESS","When I first started working with APEX, I was befuddled by URL construction (hey, what can I say? I was/am a backend developer). I kept searching out the syntax and all those "":::"" drove me crazy. So of course I built an API with PL/SQL. Instead of fussing with syntax each time, I did it once - and put that knowledge into the function. Here's a package that offers three overloadings for URL generation: multiple page items, single page time, invoke in SQL. Note that it does NOT generate a checksum, since APEX_UTIL is not available for execution in LiveSQL. You will have to uncomment those lines for your own installation.","",19955049516013,"","","",03-APR-24 11.05.34.694354000 AM,"PUBLIC","APEX,URL",57,"","CPSSPPZRXG5TN0LOJEVV1XABI",14494901,4,,,"","","","","","","","","","","","","","",,"",19-DEC-22 01.58.33.729476000 PM,23-JUL-18 01.50.46.984611000 PM,"","APPROVED",23-JUL-18 01.50.46.971809000 PM,,"Auto Approved","","",162,""
55626266944860643544729457735894737454,21-JAN-16 01.42.26.619876000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Use Implicit Cursor for Single Row Lookup!","USE IMPLICIT CURSOR FOR SINGLE ROW LOOKUP!","In the first edition of my Oracle PL/SQL Programming, published in 1995, I recommended that you use an explicit, not implicit, cursor when fetching a single row? (and I wasn't the only one) The argument: with SELECT-INTO, you have to fetch twice to see if there are TOO_MANY_ROWS, while with the explicit, you can just fetch once. And maybe waaaaay back then, it *was* faster (Oracle7). But that hasn't been the case for a long time. If you need to fetch a single row, the best and fastest way to do it is with a SELECT-INTO - preferably from inside a function.","",717066353202,"","","",02-MAY-24 01.03.34.599090000 PM,"PUBLIC","SELECT-INTO,implicit,explicit",20,"","CRG9FHCGX3MVTK0E01QCBV4U3",11238434,4,,,"","","","","","","","","","","","","","",,"",23-SEP-20 01.48.33.622738000 PM,02-APR-18 08.53.31.113620000 PM,"","",,,"","","",70,""
51855173233627603972716187068882633824,16-DEC-15 11.13.54.761458000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","ANYDATA Example - Take a walk on the wild side!","ANYDATA EXAMPLE - TAKE A WALK ON THE WILD SIDE!","An ANYDATA TYPE contains an instance of a given type, plus a description of the type. In this sense, an ANYDATA is self-describing. An ANYDATA can be persistently stored in the database. As Tom Kyte says, ""It could be potentially useful in an application that stores generic 
attributes -- attributes you don't KNOW what the datatypes are until you actually run the 
code.  In the past, we would have stuffed everything into a VARCHAR2 -- dates, numbers, 
everything.  Now, you can put a date in and have it stay as a date (and the system will 
enforce it is in fact a valid date and let you perform date operations on it -- if it 
were in a varchar2 -- someone could put ""hello world"" into your ""date"" field)"". ""Doc: http://docs.oracle.com/cd/B19306_01/appdev.102/b14258/t_anydat.htm#BEHEICHI","",7394552799852,"","","",06-AUG-24 03.15.35.683419000 PM,"PUBLIC","ANYDATA",51,"","CLFIK2BL2LQ5J99ZF2KXGSV5R",14494868,4,,,"","","","","","","","","","","","","","",,"",29-SEP-23 07.27.50.890603000 AM,23-JUL-18 01.48.51.691160000 PM,"","APPROVED",23-JUL-18 01.48.51.683788000 PM,,"Auto Approved","","",95,""
54089541536515369338438293931216736883,06-JAN-16 08.44.33.338771000 PM,"",,"ERIK.VAN.ROON@EVROCS.NL","Merge statement with plsql causing mutating-table problem","MERGE STATEMENT WITH PLSQL CAUSING MUTATING-TABLE PROBLEM","If you build a merge statement that contains plsql in a with clause, and that plsql selects from the table the merge is trying to manipulate, an ""ORA-04091: table [tablename] is mutating, trigger/function may not see it"" is raised, even though you would expect the query (and hence the function) to be done before any data-manipulation is performed.","",54089278363704701321778473698037731853,"","","",05-AUG-24 07.07.53.117916000 AM,"PUBLIC","merge function with subquery factoring mutating table",4,"","CO0MG88G7VJ4SIHM0IVGAZ41F",55981,3,,,"","","","","","","","","","","","","","",,"",19-OCT-21 07.31.26.152005000 PM,06-JAN-16 09.12.18.548994000 PM,"","APPROVED",15-JUN-18 01.34.34.934066000 AM,15-JUN-18 02.30.04.865276000 PM,"sharon.kennedy@oracle.com","","",56,""
57079603015438991411783209528150643597,04-FEB-16 11.43.36.699280000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Helper Package for LOG ERRORS","HELPER PACKAGE FOR LOG ERRORS","The LOG ERRORS feature allows you to suppress errors at the row level in DML statements. Instead of raising the error, the error information is written to a log table (generated by a call to DBMS_ERRLOG.CREATE_ERROR_LOG). But the design of the log table leaves a few things to be desired (doesn't include when the error occurred, ""who"" did it, and where in the code stack the statement was executed). This package helps ""fill the gap"" by creating the log table, altering it to add key columns and a trigger to set their values, and generate a package to make it easier to manage the table.","",108132998080702,"","","",02-MAY-24 12.56.13.844828000 PM,"PUBLIC","log errors,dbms_errlog",36,"","CUN08AILIUCWPEYVSUCW2YX5F",14495355,4,,,"","","","","","","","","","","","","","",,"",12-FEB-24 06.28.16.622966000 PM,23-JUL-18 02.08.54.977165000 PM,"","APPROVED",23-JUL-18 02.08.54.965699000 PM,,"Auto Approved","","",115,""
57659480499560075546890556784138442428,10-FEB-16 01.05.16.998469000 AM,"",,"EAOLSON@YAHOO.COM","LOBs copy by val and ref 2","LOBS COPY BY VAL AND REF 2","Demonstrating LOBs are pointers, rather than the LOB object itsef.","",57659480499537105956317878829819025084,"","","",04-APR-24 06.08.33.763454000 AM,"PUBLIC","",4,"","CUQI7Y6W3OP3HXHGPENV7N2TQ",82161,4,,,"","","","","","","","","","","","","","",,"",24-FEB-19 12.29.17.385357000 PM,10-FEB-16 01.12.17.755552000 AM,"","APPROVED",15-JUN-18 01.34.34.937387000 AM,15-JUN-18 02.30.17.556081000 PM,"sharon.kennedy@oracle.com","","",11,""
58330855855598698597868834122034216815,16-FEB-16 11.05.41.663868000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","DATE Literal","DATE LITERAL","You're certainly familiar with string literals, such as 'Oracle', and numeric literals, like 123. Did you know that there is such a thing as a date literal as well? Use the keyword DATE and then specify the date value in the format 'YYYY-MM-DD'. Yes, that is the ONLY format you can use. Sorry!","",58329366600315896969283986024013913190,"","","",20-JUL-24 09.46.26.736799000 PM,"PUBLIC","date,literal",21,"","CVTACF6PQSCZ0HWYZ5KK10LP9",5832748,4,,,"","","","","","","","","","","","","","",,"",05-JUN-24 03.40.07.846698000 PM,29-AUG-17 06.05.33.852260000 PM,"","",,,"","","",79,""
58519085774304342234833940324872239990,18-FEB-16 06.36.10.277982000 AM,"",,"ROGEL@WEB.DE","Is Subprogram a Function?","IS SUBPROGRAM A FUNCTION?","Use the USER_ARGUMENTS view (or ALL_ARGUMENTS) to determine if the specified subprogram is a function. 
just a bit simpler than Steve Feuerstein's original 
https://livesql.oracle.com/apex/livesql/file/content_CVY23ILC9HEGRWHZJVGAF7Q48.html","",58519085774233015611476677203564575606,"","","",04-APR-24 06.21.22.286576000 AM,"PUBLIC","",2,"","CV35HL6QEGOY9MOO1EI6PXVRC",89229,6,,,"","","","","","","","","","","","","","",,"",08-AUG-19 12.29.56.482451000 PM,18-FEB-16 11.24.41.312554000 AM,"","APPROVED",15-JUN-18 01.34.34.953372000 AM,15-JUN-18 02.31.10.982857000 PM,"sharon.kennedy@oracle.com","","",11,""
58536556117280010181588139823787072385,18-FEB-16 10.27.54.522314000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","PL/Scope Examples","PL/SCOPE EXAMPLES","PL/Scope is a powerful code analysis tool, built into PL/SQL. Before compiling your program units, turn it on with this statement: ALTER SESSION SET plscope_settings='identifiers:all'. Then you can query the ALL/USER_IDENTIFIERS views to get all sorts of great information about your code!","",109773871243035,"","","",15-JUL-24 09.01.21.002559000 PM,"PUBLIC","PL/SCOPE,CODE ANALYSIS",72,"","CV44RXCR3YGG1BZWMM5L24UAR",3007069,6,,,"","","","","","","","","","","","","","",,"",10-DEC-23 08.36.29.641276000 PM,06-APR-17 02.54.34.519552000 PM,"","",,,"","","",292,""
56973753221830001098983816368994571015,03-FEB-16 11.17.41.583925000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Suppress DML Errors at Row Level with LOG ERRORS","SUPPRESS DML ERRORS AT ROW LEVEL WITH LOG ERRORS","Add the LOG ERRORS clause to your non-query DML statement, and the SQL engine will continue executing the statement, even if changes to individual rows fail. Any failed row changes are written to an error log table. Used in conjunction with the DBMS_ERRLOG package. DBMS_ERRLOG doc: http://docs.oracle.com/database/121/ARPLS/d_errlog.htm#ARPLS680","",113307945130934,"","","",19-AUG-24 03.05.50.805300000 AM,"PUBLIC","LOG ERRORS,DBMS_ERRLOG,exception,error",91,"","CTM33A79QATQBDB9YW7CC1GSK",35611257,1,,,"","","","","","","","","","","","","","",,"",21-MAY-24 11.59.11.764510000 PM,30-OCT-19 01.28.49.794013000 PM,"","APPROVED",29-JUL-19 02.32.54.509004000 PM,,"Auto Approved","","",207,""
57047254878350171176500101425580871139,04-FEB-16 04.18.03.567698000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - Window boundaries","ANALYTICS - WINDOW BOUNDARIES","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script demonstrates the first_value / last_value functions for accessing window boundaries.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",57047426501051197564425170220913147980,"","","",19-AUG-24 08.59.56.183677000 AM,"PUBLIC","kiss, windows, oracle, analytics, range",329,"","CTQ60ECMLVT6DUSGIFAR8JGI9",78469,7,,,"","","","","","","","","","","","","","",,"",19-AUG-24 08.59.56.179784000 AM,04-FEB-16 04.18.03.567709000 AM,"","",,,"","","",529,""
58431313470838414002507688414645229722,17-FEB-16 10.16.01.769468000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Is Subprogram a Function?","IS SUBPROGRAM A FUNCTION?","Use the USER_ARGUMENTS view (or ALL_ARGUMENTS) to determine if the specified subprogram is a function. It's a trickier question to answer than at first glance you would expect. ","",107243828064724,"","","",03-APR-24 02.49.56.410426000 PM,"PUBLIC","function",9,"","CVY0IMGGTH0MA7SNEU0EGN1PO",14499225,6,,,"","","","","","","","","","","","","","",,"",23-APR-20 10.17.46.367150000 AM,23-JUL-18 06.04.30.757869000 PM,"","APPROVED",23-JUL-18 06.04.30.747939000 PM,,"Auto Approved","","",29,""
58641926128782161564664586943439966524,19-FEB-16 10.34.12.962933000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Find All Invocations of Packaged Subprogram","FIND ALL INVOCATIONS OF PACKAGED SUBPROGRAM","When contemplating a change to a subprogram, impact analysis is critical. And the first thing you need to know is: where is the subprogram called? With PL/Scope (11.1), you can now get the definitive answer to that question, regardless of possible re-uses of the same name in different program units, by utilizing the unique signature values stored in ALL/USER_IDENTIFIERS.","",58640793334116702452148531578320626524,"","","",03-APR-24 02.50.25.235256000 PM,"PUBLIC","Pl/Scope,impact analysis",8,"","CWA8Q3JSNHQ0ZXDJZJ343CGJY",1780344,4,,,"","","","","","","","","","","","","","",,"",25-APR-20 10.47.24.033179000 PM,31-JAN-17 09.36.28.277871000 PM,"","",,,"","","",20,""
57084163775403115087063001434155524065,04-FEB-16 12.38.22.145426000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","FORALL Inserts Performance Comparison","FORALL INSERTS PERFORMANCE COMPARISON","Sure, we say FORALL is fast, but how fast, really? And how does it compare to ""pure"" SQL (which of course you should use whenever possible!)?","",14045296928412,"","","",06-AUG-24 04.17.15.873184000 PM,"PUBLIC","FORALL,performance,forall_timing",161,"","CTTBPHPA0QNH26M4DO4TM48B3",175668336,4,,,"","","","","","","","","","","","","","",,"",03-AUG-24 03.00.31.596396000 PM,09-NOV-22 03.52.44.624202000 PM,"","APPROVED",09-NOV-22 03.52.44.595352000 PM,,"Auto Approved","","",335,""
57084163775544559407957913047596146657,04-FEB-16 01.16.38.846512000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Examples of FORALL Statements","EXAMPLES OF FORALL STATEMENTS","FORALL implements bulk or array processing for non-query DML statements. Don't execute DML inside a loop, in which the only changes are bind variables. Switch to ""pure"" SQL or, if you need PL/SQL if-then-else capabilities, use FORALL.","",5570659533113,"","","",24-JUL-24 05.13.14.586950000 PM,"PUBLIC","forall,performance,forall_examples",17,"","CTTF4QDCEOJUIH421WE5SC7NS",14495430,4,,,"","","","","","","","","","","","","","",,"",12-JUL-21 09.44.13.151872000 AM,23-JUL-18 02.11.15.823462000 PM,"","APPROVED",23-JUL-18 02.11.15.819130000 PM,,"Auto Approved","","",78,""
57084163775555439740334444710168502241,04-FEB-16 01.24.26.427923000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Converting from Row-by-Row to Bulk Processing","CONVERTING FROM ROW-BY-ROW TO BULK PROCESSING","This script offers a before-and-after look: first, we have row-by-row (slow-by-slow, in the immortal words of Tom Kyte) processing with multiple DML statements inside a loop. Next we have a bulkified version, relying on BULK COLLECT and FORALL to improve performance. Notice the use of nested subprograms in the after version, to improve readability.","",5570659533113,"","","",24-JUL-24 05.12.59.413259000 PM,"PUBLIC","forall,bulk,performance,cfl_to_bulk",32,"","CTTJEUGV8LGK84U3GX9CN6LVO",14797151,4,,,"","","","","","","","","","","","","","",,"",08-MAY-24 10.18.16.339408000 AM,07-AUG-18 01.44.11.040179000 PM,"","APPROVED",07-AUG-18 01.44.11.012330000 PM,,"Auto Approved","","",263,""
57086292425588407420988144858316800886,04-FEB-16 01.11.32.690046000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Change in Statement Level Trigger Execution with FORALL Inserts","CHANGE IN STATEMENT LEVEL TRIGGER EXECUTION WITH FORALL INSERTS","Generally, FORALL changes the way the PL/SQL engine communicates with the SQL engine, with (almost) no change in SQL behavior. The one change I know of is that a statement level ON INSERT trigger will fire once per FORALL, not per INSERT statement generated by FORALL. In other words, same behavior as INSERT-SELECT. This script demonstrates this behavior.","",5570659533113,"","","",24-JUL-24 05.02.15.274789000 PM,"PUBLIC","forall,insert,statement-level,statement_trigger_and_forall",45,"","CTTF4QDCDL9SY4S4MI8OXYSX0",14495360,5,,,"","","","","","","","","","","","","","",,"",21-NOV-22 09.59.08.464795000 PM,23-JUL-18 02.09.12.982973000 PM,"","APPROVED",23-JUL-18 02.09.12.976481000 PM,,"Auto Approved","","",160,""
58199483422680081219087504205209538043,15-FEB-16 04.59.21.921490000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - Windows and the NTH_VALUE function","ANALYTICS - WINDOWS AND THE NTH_VALUE FUNCTION","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script is for deriving the nth_value from within a window.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",58199483422171123449029745322658237947,"","","",19-AUG-24 09.25.20.770509000 AM,"PUBLIC","kiss, windows, oracle, analytics, nth_value",306,"","CVLPCO2ZHQ2A4W5QJ4M9THW1P",86281,7,,,"","","","","","","","","","","","","","",,"",12-AUG-24 07.53.24.661611000 PM,13-MAR-16 11.49.57.983870000 PM,"","",,,"","","",503,""
57816572356600428650758386413172582107,11-FEB-16 01.14.14.845101000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Sort Associative Arrays Using SQL (12.1)","SORT ASSOCIATIVE ARRAYS USING SQL (12.1)","Starting with 12.1, you can apply the TABLE operators to associative arrays indexed by integer (index-by tables), whose types are declared in a package specification. You can then use the awesome power of SQL to sort the contents of the collection however you want.","",5602922631550,"","","",06-MAY-24 10.15.11.269480000 PM,"PUBLIC","SORT,associative,array,12c",16,"","CUZPFIB3ZAV965OUETXFTBMIW",12209785,4,,,"","","","","","","","","","","","","","",,"",24-AUG-23 07.50.20.932421000 AM,01-MAY-18 11.30.14.710729000 AM,"","",,,"","","",56,""
58243623227565286105959848889409010863,15-FEB-16 03.13.35.532269000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Why Has an Index Broken My Query?","WHY HAS AN INDEX BROKEN MY QUERY?","Scripts to support the YouTube video ""Why Has an Index Broken My Query?""

Shows how adding an index to a table can cause a query to fail. Includes workarounds to prevent this happening.

For a full explanation, watch the video on YouTube at:

https://youtu.be/JrzAGLOcswo","",58243623227381529381378425254853672111,"","","",23-JUN-24 01.07.20.979427000 AM,"PUBLIC","sql index",2,"","CVOCX7V9SHJQHPMKC1KEXB4X0",14514580,1,,,"","","","","","","","","","","","","","",,"",24-JUL-18 12.22.25.560148000 PM,24-JUL-18 12.22.44.775001000 PM,"","APPROVED",24-JUL-18 12.22.44.761298000 PM,,"Auto Approved","","",14,""
56873105716002651428585782908103080776,02-FEB-16 12.08.39.010449000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","UTL_CALL_STACK: Fine-grained execution call stack package (12.1)","UTL_CALL_STACK: FINE-GRAINED EXECUTION CALL STACK PACKAGE (12.1)","UTL_CALL_STACK, introduced in Oracle Database 12c, offers fine grained information about your execution call stack, as well as an API to the error stack and back trace. Or, as the doc states: ""The UTL_CALL_STACK package provides an interface to provide information about currently executing subprograms. Functions return subprogram names, unit names, owner names, edition names, and line numbers for given dynamic depths. Other functions return error stack information."" http://docs.oracle.com/database/121/ARPLS/u_call_stack.htm#ARPLS74078","",26275685313114,"","","",15-JUL-24 07.00.42.501912000 PM,"PUBLIC","call stack",91,"","CTG44K8HKMGM0X33CK2VQJ2JE",14495350,4,,,"","","","","","","","","","","","","","",,"",03-MAY-24 02.50.56.211316000 PM,23-JUL-18 02.08.30.937748000 PM,"","APPROVED",23-JUL-18 02.08.30.931509000 PM,,"Auto Approved","","",131,""
60854116417963653045511904258809324854,11-MAR-16 02.52.13.881327000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","String Tracker Utility: Is this string already in use?","STRING TRACKER UTILITY: IS THIS STRING ALREADY IN USE?","The string_tracker package allows you to keep track of whether a certain name has already been used within a particular list.

Besides hopefully being useful to you, it is a nice little demonstration of string-indexed associative arrays and nested collections (collections within collections)","",15737746903748,"","","",04-APR-24 06.01.00.430341000 AM,"PUBLIC","COLLECTION,METHOD,string index,associative array",5,"","CZUXPDAKACF9KADVUIWHWKEDK",12209843,4,,,"","","","","","","","","","","","","","",,"",24-MAR-21 12.50.42.936744000 PM,01-MAY-18 11.33.00.008988000 AM,"","",,,"","","",27,""
61168202595228892639845861524800976179,14-MAR-16 03.08.03.888513000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Using TREAT Operator with Object Types","USING TREAT OPERATOR WITH OBJECT TYPES","Use TREAT to ""downcast"" an object type instance to a specific child type. That way, you can reference attributes of a subtype's instance, even when that instance is stored in a column based on a super type.","",61168202595100746502966710832282121523,"","","",30-APR-24 07.46.02.457495000 PM,"PUBLIC","TREAT,object type, object-oriented",13,"","C0C7QYOCKIZTIKRY6OHQJMWFE",14570132,4,,,"","","","","","","","","","","","","","",,"",29-OCT-19 05.20.13.258629000 PM,26-JUL-18 03.55.56.835041000 PM,"","APPROVED",26-JUL-18 03.55.56.824110000 PM,,"Auto Approved","","",28,""
58693805234058011670927089918523661312,19-FEB-16 10.31.50.811661000 PM,"",,"JAUGHENBAUGH@MSN.COM","JSON_TABLE usage","JSON_TABLE USAGE","Full Set of examples of using JSON_TABLE in SQL and PL/SQL","",5298791943313,"","","",21-AUG-24 03.49.00.899660000 AM,"PUBLIC","JSON_TABLE, JSON, SQL, PLSQL",178,"","IUKK9I6QY9IS9RNFDPZM92V2H",31507706,14,,,"","","","","","","","","","","","","","",,"",07-AUG-24 03.58.01.308058000 AM,21-AUG-19 06.37.58.820416000 PM,"","APPROVED",21-AUG-19 05.25.35.542231000 PM,21-AUG-19 06.39.49.060323000 PM,"sharon.kennedy@oracle.com","Can you please run this and re-save.  The results are not displayed.","",351,""
59094762501242530840968379782333623184,23-FEB-16 06.37.10.430980000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Simple SQL CASE example","SIMPLE SQL CASE EXAMPLE","In this simple CASE expression, Oracle Database evaluates the first WHEN and returns the THEN if satisfied.  It next considers the next WHEN condition.  If none of the when conditions are met the ELSE is taken.","",59094271999495935336797835210957415013,"","","",05-JUN-24 09.53.49.127672000 AM,"PUBLIC","CASE",35,"","CW1DQ0669SDVNGJ4QM19J4O32",93784,1,,,"","","","","","","","","","","","","","",,"",09-NOV-23 11.24.22.622547000 AM,23-FEB-16 06.46.18.156421000 PM,"","",,,"","","",147,""
59729187659501304346376452965426460374,29-FEB-16 08.29.44.247625000 PM,"",,"LCRSILVEIRA@GMAIL.COM","year_calendar.sql","YEAR_CALENDAR.SQL","Print a cool calendar for the current year.","",59729187659486797236541077415329986262,"","","",15-JUL-24 07.01.35.698628000 PM,"PUBLIC","Calendar, Oracle SQL",74,"","GVULRUUDQZSB2WEBZZBYDWWBS",13792040,3,,,"","","","","","","","","","","","","","",,"",28-MAY-24 02.49.41.471407000 AM,25-JUN-18 03.59.15.960471000 AM,"","APPROVED",25-JUN-18 03.54.09.041606000 AM,25-JUN-18 12.01.50.490111000 PM,"sharon.kennedy@oracle.com","For this to be published, can you please remove the first statement that is in error.","",146,""
59913604966771588176441093657362843516,02-MAR-16 03.08.34.889026000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Nested Collections Example","NESTED COLLECTIONS EXAMPLE","You can nest collections within collections, directly and indirectly. In this script, I create a set of object types and collection types to keep track of visits to the veterinarian. I then show the use of various methods to access information about this complex structure.","",103365260527598,"","","",03-APR-24 02.23.01.220456000 PM,"PUBLIC","nested collection,collection",19,"","CYCPJLRRZ5Y7MBALIRP7DIGY5",14570168,4,,,"","","","","","","","","","","","","","",,"",15-FEB-24 01.04.15.927025000 AM,26-JUL-18 03.57.44.157810000 PM,"","APPROVED",26-JUL-18 03.57.44.146757000 PM,,"Auto Approved","","",89,""
59278966834133368196363489235933248143,25-FEB-16 01.06.59.829992000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Strip Characters from String with TRANSLATE","STRIP CHARACTERS FROM STRING WITH TRANSLATE","You can use TRANSLATE to remove an arbitrary number of characters from a string, but there's a small trick: you need a ""placeholder"" character that is translated to itself, else you just get back NULL.","",3296253827691,"","","",03-APR-24 02.32.26.410390000 PM,"PUBLIC","TRANSLATE,STRIP, REMOVE",14,"","CXB59UGOWYQ68Q4S2E9WQNWVK",14570181,4,,,"","","","","","","","","","","","","","",,"",31-JAN-23 04.10.19.235892000 AM,26-JUL-18 03.58.49.066246000 PM,"","APPROVED",26-JUL-18 03.58.49.058030000 PM,,"Auto Approved","","",41,""
59709694247849428922713234241602887452,29-FEB-16 03.58.09.277949000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","MULTISET EXCEPT Examples","MULTISET EXCEPT EXAMPLES","Use MULTISET EXCEPT to perform a set-level ""minus"" operation involving two nested tables. MULTISET EXCEPT DISTINCT is equivalent to SQL MINUS.","",105912184867693,"","","",18-JUN-24 06.37.33.291577000 AM,"PUBLIC","MULTISET,EXCEPT,MINUS",19,"","CX0VK1WOT7N387936IY20JVSE",14570177,4,,,"","","","","","","","","","","","","","",,"",18-JUN-24 06.37.33.291424000 AM,26-JUL-18 03.58.28.258043000 PM,"","APPROVED",26-JUL-18 03.58.28.253460000 PM,,"Auto Approved","","",39,""
59709694247936471581725487542181732124,29-FEB-16 04.02.30.219815000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","MULTISET INTERSECT Examples","MULTISET INTERSECT EXAMPLES","Use MULTISET INTERSECT to perform a set-level intersect operation involving two nested tables. MULTISET INTERSECT DISTINCT is equivalent to SQL INTERSECT.","",59709694247796236186650190557915815708,"","","",08-JUN-24 05.15.46.750510000 AM,"PUBLIC","MULTISET,INTERSECT",13,"","CX0W5S125E1Q513AFIH07KFEM",98129,4,,,"","","","","","","","","","","","","","",,"",06-JUN-24 09.58.22.328662000 AM,29-FEB-16 04.05.37.702683000 PM,"","",,,"","","",30,""
60560806656209807186097005916817338724,08-MAR-16 07.41.02.371125000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Function Results Cached with DETERMINISTIC Keyword","FUNCTION RESULTS CACHED WITH DETERMINISTIC KEYWORD","Whenever your function is pure of side effects, its return value is determined completely by its IN argument values. In this case, you should declare the function to be DETERMINISTIC. You can then create a function-based index with this function and it is possible that the SQL engine will avoid unnecessary executions of the function body. Specifically, if within a SQL statement execution the function is called repeatedly with the same input values, the SQL engine may cache the return values and simply return them without an execution of the function body. This script demonstrates this optimization.","",60560806656171121559869337783226741092,"","","",04-APR-24 06.15.16.351862000 AM,"PUBLIC","DETERMINISTIC",3,"","CZDZ7CRH3L3WRNFC89VAPA9IU",104853,6,,,"","","","","","","","","","","","","","",,"",23-AUG-23 08.01.50.006617000 AM,08-MAR-16 07.41.02.371136000 PM,"","",,,"","","",23,""
59062771910529198506524247791499932004,23-FEB-16 11.17.20.484938000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Demonstration of SQL Injection Dangers","DEMONSTRATION OF SQL INJECTION DANGERS","Just when you thought your dynamic SQL was safe! This script offers a simple example of how dynamic SQL that contains concatenation (as opposed to binding) can be subverted to serve possibly malicious purposes. ","",111441439576955,"","","",15-MAY-24 05.47.41.121188000 PM,"PUBLIC","SQL INJECTION,INJECTION,DYNAMIC SQL",12,"","CWZI9VB7OOQFLT0CVEMA0IHN6",13979229,4,,,"","","","","","","","","","","","","","",,"",02-JUL-18 06.31.38.533204000 PM,02-JUL-18 06.32.04.395311000 PM,"","APPROVED",02-JUL-18 06.32.04.252075000 PM,,"Auto Approved","","",34,""
59691593558487666331578826579564491813,29-FEB-16 11.59.04.407911000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Method 4 Dynamic SQL Example: Display contents of table","METHOD 4 DYNAMIC SQL EXAMPLE: DISPLAY CONTENTS OF TABLE","The ""in tab"" procedure displays what's in a table, using DBMS_SQL and method 4 dynamic SQL. That is, I do not know at the time I compile my code how many columns I will displaying. Most dynamic SQL method 4 is more complicated than this, so it serves as a nice introduction. Much of the code volume has to do with formatting, but I also like to use this as an example of relying on nested subprograms to make code much more readable. NOTE: this procedure is vulnerable to SQL injection. Users should NEVER be allowed to pass inputs to program like this directly!","",110444495880591,"","","",16-AUG-24 06.23.53.017549000 AM,"PUBLIC","dynamic SQL,method 4,nested subprograms",44,"","CXZTYYXVM8XANLG2AHY8YSAZ7",14499238,4,,,"","","","","","","","","","","","","","",,"",19-MAR-24 03.02.42.378604000 PM,23-JUL-18 06.06.16.713336000 PM,"","APPROVED",23-JUL-18 06.06.16.704721000 PM,,"Auto Approved","","",198,""
59875012242539032459641931479936317696,02-MAR-16 06.02.40.922355000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - Dynamically sized windows","ANALYTICS - DYNAMICALLY SIZED WINDOWS","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script is using a PL/SQL function to create dynamic window range.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",59875012242496720055955419458821601536,"","","",19-AUG-24 01.39.23.707248000 PM,"PUBLIC","kiss, windows, oracle, analytics, dynamic",280,"","CYAE37SZB0J3ARX5033L3I8NM",99106,7,,,"","","","","","","","","","","","","","",,"",19-AUG-24 01.39.23.707129000 PM,02-MAR-16 06.02.40.922366000 AM,"","",,,"","","",478,""
59903544486382212483359828481885798011,02-MAR-16 12.49.15.300935000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Impact of NULLs on Nested Table MULTISET Operations","IMPACT OF NULLS ON NESTED TABLE MULTISET OPERATIONS","You can perform set-level operations on nested tables using the MULTISET operators (example: MULTISET UNION). But if you nested tables have elements whose values are NULL....watch out! The outcomes might not be what you expected. This script walks you through several scenarios. Check it out before you move ahead with MULTISET in your apps IF your nested tables might contain NULLs!","",59903544486362869670245994415090499195,"","","",11-APR-24 02.33.50.761077000 PM,"PUBLIC","MULTISET,NULL",3,"","CY6QW9DJWW7JYZJVGURISYD61",99533,4,,,"","","","","","","","","","","","","","",,"",27-MAR-17 08.14.04.672296000 PM,07-MAR-16 07.11.43.684276000 PM,"","",,,"","","",24,""
60125358270290870216973347283513563292,04-MAR-16 03.30.47.446358000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Object Type Hierarchies in PL/SQL","OBJECT TYPE HIERARCHIES IN PL/SQL","While PL/SQL is mostly used to provide secure, efficient access to the relational tables (SQL), you can also - to some extent - follow an object-oriented approach as well. PL/SQL doesn't offer classes, but instead OBJECT TYPEs. You can then declare instances of the object type (just like an object is an instance of a class). You can declare static and member methods, take advantage of inheritance, and many other expected O-O features. One thing you cannot do, though, is declare private attributes and methods. It's all public in object types. ","",7101366819790,"","","",01-AUG-24 04.43.17.306793000 AM,"PUBLIC","object type,hierarchy,inheritance",63,"","CYOX1BGARC98MJCH2TAIWP0G7",6319097,4,,,"","","","","","","","","","","","","","",,"",16-JUL-24 10.13.08.642851000 AM,19-SEP-17 01.47.50.254472000 PM,"","",,,"","","",329,""
58954124573225743338758665058873150911,22-FEB-16 10.36.05.219653000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","How to Terminate Loop with FETCH BULK COLLECT LIMIT","HOW TO TERMINATE LOOP WITH FETCH BULK COLLECT LIMIT","Many Oracle Database developers are used to executed ""EXIT WHEN my_cursor%NOTFOUND"" immediately after their fetch inside a loop. That's fine when you are fetching a single row at a time. But why-ever would you be doing that, when you can use BULK COLLECT and fetch 100+ rows at a time, greatly improving performance? So you switch FETCH BULK COLLECT with the LIMIT clause - but then you must be careful about the statement you use to exit the loop. This script shows you the way.","",103167784527707,"","","",10-JUL-24 06.19.56.119219000 PM,"PUBLIC","BULK COLLECT,LIMIT",30,"","CWTJK8EZEIA7J61UNEAQ496II",14499232,4,,,"","","","","","","","","","","","","","",,"",08-MAY-24 05.03.59.522335000 AM,23-JUL-18 06.05.29.664849000 PM,"","APPROVED",23-JUL-18 06.05.29.655870000 PM,,"Auto Approved","","",131,""
60641084289292845275774031230927551986,09-MAR-16 02.05.42.039851000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Dynamic Polymorphism with Object Types","DYNAMIC POLYMORPHISM WITH OBJECT TYPES","This script demonstrates dynamic polymorphism with object types. So what the heck is dynamic polymorphism? Well, you've probably heard of overloading: when 2+ subprograms in a package have the same name. Another name for overloading is static polymorphism: ""static"" means at compile time. ""polymorphism"" means multiple shapes (multiple subprograms, same name). Overloading is static polymorphism because the COMPILER resolves which of the subprograms to execute (at compile time). Dynamic polymorphism means we have 2+ methods with the same name, but in different types in the same hierarchy. And the decision on which of them to execute happens at RUN-TIME (hence, ""dynamic.""","",2797624137036,"","","",16-JUL-24 10.16.31.929242000 AM,"PUBLIC","OBJECT TYPE,POLYMORPHISM",22,"","CZIM0SGK1064RZ0XQF3RQFIPW",14570165,4,,,"","","","","","","","","","","","","","",,"",12-JUN-24 11.56.03.310879000 PM,26-JUL-18 03.57.24.900147000 PM,"","APPROVED",26-JUL-18 03.57.24.888913000 PM,,"Auto Approved","","",100,""
59143038383899533030514263792405903378,24-FEB-16 05.44.47.334303000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - Windows and null values","ANALYTICS - WINDOWS AND NULL VALUES","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script looks at how to deal with nulls when using the window clause.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",59143038383756879783799737549790574610,"","","",16-AUG-24 12.47.59.558433000 PM,"PUBLIC","kiss, windows, oracle, analytics, nulls",341,"","CW352GZBQ36HHLDP58IECHIM8",93993,7,,,"","","","","","","","","","","","","","",,"",15-AUG-24 08.10.02.751157000 AM,25-FEB-16 06.56.12.519908000 AM,"","",,,"","","",515,""
60736900074020225135392090263078455296,10-MAR-16 11.57.43.046984000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Examples of Native Dynamic SQL Method 2","EXAMPLES OF NATIVE DYNAMIC SQL METHOD 2","Method 2 means your dynamically-constructed SQL statement in a non-query DML (insert, update, delete, merge) with a fixed number of bind variables. That is, at the time you are writing your code, you know how many variables you must bind into placeholders.","",113650985892601,"","","",06-JUL-24 08.17.50.441564000 AM,"PUBLIC","DYNAMIC SQL,METHOD 2",13,"","CZOMNVKLAURTLRYM5VVJD6BCG",14570142,4,,,"","","","","","","","","","","","","","",,"",03-MAR-23 08.43.26.524092000 AM,26-JUL-18 03.57.01.260849000 PM,"","APPROVED",26-JUL-18 03.57.01.249304000 PM,,"Auto Approved","","",66,""
60844072724029156885822428599592601163,11-MAR-16 12.57.10.813487000 PM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - LAG and LEAD functions","ANALYTICS - LAG AND LEAD FUNCTIONS","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script looks at the lag and lead functions.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",60844072723925189265335570490567870027,"","","",22-AUG-24 04.17.00.690268000 PM,"PUBLIC","kiss, windows, oracle, analytics, lag, lead",485,"","CZUCT0MCOWGHMET3LC60QUQCD",107420,7,,,"","","","","","","","","","","","","","",,"",19-AUG-24 01.39.54.543042000 PM,11-MAR-16 12.57.10.813501000 PM,"","",,,"","","",970,""
61257924170040596593527653575630149899,15-MAR-16 11.51.35.181865000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Package Marked as Initialized Even if Initialization Fails - until 12.1!","PACKAGE MARKED AS INITIALIZED EVEN IF INITIALIZATION FAILS - UNTIL 12.1!","When a session first references an element in a package, the PL/SQL runtime engine initializes the package: instantiates package-level data and assigns default values; executes the initialization section, if present. If assignment of a default value fails, the exception cannot be trapped ""inside"" the package. The exception section of the initialization section can only possibly trap errors raised within the initialization section. But the key thing to know is this: prior to 12.1, if package initialization fails, the package is still marked as initialized. So within that same session, the PL/SQL engine will not try to initialize again - which means you could be facing one of those awful situations: it fails the first time, but then runs. If you are experiencing this dynamic, disconnect and reconnect, and see if that causes the failure to appear again. Then you will know it is likely a failure in package initialization somewhere. In 12.1 and higher, when a package fails to initialize, it is marked as uninitialized.","",107586797361483,"","","",17-APR-24 12.48.00.823337000 PM,"PUBLIC","initialization",16,"","C0IWE516B5CDKYPSW1XRBDVZO",4361379,6,,,"","","","","","","","","","","","","","",,"",06-MAR-20 10.11.10.080122000 PM,14-JUN-17 07.49.39.246047000 PM,"","",,,"","","",28,""
61443244335275389203837525921322632598,17-MAR-16 06.22.19.891296000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - LAG and LEAD extensions","ANALYTICS - LAG AND LEAD EXTENSIONS","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script shows how to use the IGNORE NULLS extensions to lag and lead.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",61443244335202853654660648170840262038,"","","",16-AUG-24 01.47.02.482570000 PM,"PUBLIC","lag, lead, kiss, oracle, sql, analytics",199,"","C0SXW1PG4CX3T51AX0RFE3E3C",111880,7,,,"","","","","","","","","","","","","","",,"",15-AUG-24 03.37.38.166149000 PM,17-MAR-16 06.22.19.891305000 AM,"","",,,"","","",349,""
61577232321197556788953801324661223582,18-MAR-16 01.11.55.492973000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Accessing index of associative array in SELECT-FROM TABLE() operation","ACCESSING INDEX OF ASSOCIATIVE ARRAY IN SELECT-FROM TABLE() OPERATION","As of Oracle Database 12c Release 1, you can now use the TABLE operator with associative arrays whose types are declared in a package specification. Prior to 12.1, this was only possible with schema-level nested table and varray types. 

What if you need to access the index values of that array in the dataset returned by the TABLE operator? That information simply isn't available natively - which, I think, is quite reasonable. When you use SELECT-FROM TABLE you are saying, in effect, I want to treat the data as a virtual tables. Tables don't have indexes built into them. You have to specify them ""on top"" of the table.

In any case, the solution isn't terribly difficult. You simply add a field to your record (or attribute to object type). Or if your collection is currently a collection of scalars (list of dates or strings or numbers), then you will have to create a record or object type to hold that scalar value, plus the index value. Then that index value is available as ""just another column"" in your query. ","",109384914003761,"","","",06-MAY-24 10.06.44.876123000 PM,"PUBLIC","TABLE,INDEX VALUE",37,"","C00OCGQ9JGS1JDUV01YPA0QH8",112959,4,,,"","","","","","","","","","","","","","",,"",26-JUL-22 10.28.44.560424000 AM,18-MAR-16 01.18.46.045917000 PM,"","",,,"","","",215,""
62132755138278313872250790059115685987,23-MAR-16 08.47.00.441753000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","The $$PLSQL_UNIT and $$PLSQL_TYPE Conditional Compilation Flags","THE $$PLSQL_UNIT AND $$PLSQL_TYPE CONDITIONAL COMPILATION FLAGS","These pre-defined conditional compilation flags, or ccflags, return the name and type of the program unit. Note that they do NOT return the name of the subprogram or nested subprogram within a program unit.","",28289265768380,"","","",21-AUG-24 06.54.08.140587000 PM,"PUBLIC","CCFLAG,CONDITIONAL COMPILATION",143,"","C1WQP69WKBK1IUX1848HPH57P",115828,4,,,"","","","","","","","","","","","","","",,"",21-AUG-24 06.54.08.140483000 PM,23-MAR-16 08.48.47.005303000 PM,"","",,,"","","",203,""
62138706091824827469962523172852625862,23-MAR-16 10.07.21.762440000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","DBMS_SQL.to_cursor_number Example","DBMS_SQL.TO_CURSOR_NUMBER EXAMPLE","This function takes an OPENed strongly or weakly-typed ref cursor and transforms it into a DBMS_SQL cursor number. Primary use case: dynamic SQL scenario in which you have a fixed number of bind variables (handled neatly with cursor variables) and a variable number of expressions in the SELECT list (handled best with DBMS_SQL).

Doc: http://docs.oracle.com/cd/B28359_01/appdev.111/b28419/d_sql.htm#CHDJDGDG","",11602734694753,"","","",01-MAY-24 02.51.14.090239000 AM,"PUBLIC","dynamic sql",17,"","C1W23DSC91JP9NMZYFN78SCIG",14570123,4,,,"","","","","","","","","","","","","","",,"",16-JUN-22 04.00.13.775759000 PM,26-JUL-18 03.55.08.571657000 PM,"","APPROVED",26-JUL-18 03.55.08.565852000 PM,,"Auto Approved","","",74,""
62138706091811529285946762251930857926,23-MAR-16 10.04.16.251673000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","DBMS_SQL.to_refcursor Example","DBMS_SQL.TO_REFCURSOR EXAMPLE","This function takes an OPENed, PARSEd, and EXECUTEd cursor and transforms/migrates it into a PL/SQL manageable REF CURSOR (a weakly-typed cursor) that can be consumed by PL/SQL native dynamic SQLswitched to use native dynamic SQL. This subprogram is only used with SELECT cursors. Primary use case: you have a dynamic number of bind variables (leading to use of DBMS_SQL) but static list of expressions in SELECT list (handled more easily with cursor variables).

Doc link: http://docs.oracle.com/cd/B28359_01/appdev.111/b28419/d_sql.htm#CHDFDCDE","",11602734694753,"","","",17-JUL-24 03.26.36.956473000 AM,"PUBLIC","dynamic sql",28,"","C1W23DSC84QJS1XBK9IONVFBS",115893,4,,,"","","","","","","","","","","","","","",,"",07-MAR-24 11.04.57.674459000 PM,23-MAR-16 10.05.31.045576000 PM,"","",,,"","","",119,""
62138706092102880408473887883035046342,23-MAR-16 10.19.53.129771000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Fine-Grained Dependency Management","FINE-GRAINED DEPENDENCY MANAGEMENT","As of 11.1, Oracle Database offers fine-grained dependency management on invalidation of progr11.1, am units. Prior to 11.1, granularity was the database object level: change a table in any way whatsoever, and all program units dependent on that table are marked invalid. As of 11.1 dependencies are now tracked to the sub-object level (columns of tables, parameters of subprograms, etc.). ","",62138706091813947137585991510280270278,"","","",04-APR-24 06.11.48.212567000 AM,"PUBLIC","dependency",4,"","C1W6NZ9AHTRMZQ5QESK6OFP9J",116768,6,,,"","","","","","","","","","","","","","",,"",13-JUL-22 10.29.02.258644000 AM,24-MAR-16 07.42.54.654858000 PM,"","",,,"","","",15,""
61986735778733549822940171829443719656,22-MAR-16 11.08.07.821273000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Infinite Loop Killer API - Single Loop Support","INFINITE LOOP KILLER API - SINGLE LOOP SUPPORT","Ever get caught in an infinite loop? Sometimes it's a dumb mistake, sometimes it's subtle. But it's always embarrassing. Use this simple API as an insurance against the infinite loop - at least until you sort out your tricky logic. And as one viewer pointed out, if you have nested loops, you can selectively specify kills for each loop. Check out ""Infinite Loop Killer API - Nested Loop Support"" for that more complicated scenario.","",61983971647680043372191845788930417652,"","","",25-JUL-24 04.59.38.788664000 AM,"PUBLIC","INFINITE LOOP,LOOP",5,"","C1OBAQI6AE7CKFP79WGBLPQ3U",115041,4,,,"","","","","","","","","","","","","","",,"",25-JUL-24 04.59.38.788521000 AM,22-MAR-16 11.17.56.399824000 AM,"","",,,"","","",41,""
62140425474736560939513806045294775845,23-MAR-16 10.38.08.789544000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","SERIALLY_REUSABLE Package","SERIALLY_REUSABLE PACKAGE","By default, the state of package-level variables persists in one's session. You assign a value to a variable declared at the package level, PL/SQL ""remembers"" that value in between references to the package. The same is true for a cursor declared at the package level. It stays open. Use the SERIALLY_REUSABLE pragma to turn off this persistence, forcing re-initialization of the package with each new server call to an element in the package.","",11602734694753,"","","",03-APR-24 02.43.51.403925000 PM,"PUBLIC","serially_reusable",10,"","C1W6NZ9AZF3RWQX5HFKC8R7UF",116772,6,,,"","","","","","","","","","","","","","",,"",08-SEP-22 11.22.37.240646000 PM,24-MAR-16 07.43.29.482097000 PM,"","",,,"","","",43,""
62140425474899765925161780983880109605,23-MAR-16 10.46.29.994280000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Utility to Find Placeholders in Dynamic SQL Strings","UTILITY TO FIND PLACEHOLDERS IN DYNAMIC SQL STRINGS","In the most complicated dynamic SQL scenarios (method 4), you may not know how many bind variables you have in your statement. This means you need to use DBMS_SQL.BIND_VARIABLE but you still need to know how many and their names. This package finds the placeholders and returns the information in an array. And it also knows about the differences in placeholder binding for dynamic SQL vs dynamic PLSQL. For the latter, assignment of value to placeholder is by NAME, not POSITION (as is the case with SQL).","",62138706091813947137585991510280270278,"","","",25-JUL-24 04.14.47.774475000 PM,"PUBLIC","dynamic sql,placeholder",9,"","C1W6NZ9A6V12OB9UGZTM5K2UV",116776,4,,,"","","","","","","","","","","","","","",,"",15-MAY-22 01.08.12.322557000 PM,24-MAR-16 07.44.55.225419000 PM,"","",,,"","","",56,""
61484820757569501194074382148402074602,17-MAR-16 03.52.38.280345000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Exceptions Raised in Declaration Section Not Handled Locally","EXCEPTIONS RAISED IN DECLARATION SECTION NOT HANDLED LOCALLY","This sometimes surprises a developer new to PL/SQL. The exception section of a PL/SQL block can only possibly handle an exception raised in the executable section. An exception raised in the declaration section (in an attempt to assign a default value to a variable or constant) always propagates out unhandled to the enclosing block.","",61482211256238839687584229599295972105,"","","",15-AUG-24 11.01.49.658916000 PM,"PUBLIC","exception,declaration,unhandled",291,"","C0U8YPIU32E9G5B889R9F8XHE",112475,4,,,"","","","","","","","","","","","","","",,"",16-JUL-24 08.56.04.849979000 AM,17-MAR-16 07.49.43.694605000 PM,"","",,,"","","",579,""
61484820757585217229729372327673254890,17-MAR-16 04.11.29.541002000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Exceptions Do Not Rollback Uncommitted Changes","EXCEPTIONS DO NOT ROLLBACK UNCOMMITTED CHANGES","Any non-query DML statements that complete successfully in your session are not rolled back when an exception occurs - either directly in PL/SQL or propagated out from the SQL engine. You still have the option of either committing or rolling back yourself.

If, however, the exception goes unhandled out to the host environment, a rollback almost always occurs (this is performed by the host environment).","",61482211256238839687584229599295972105,"","","",19-AUG-24 09.00.42.036715000 AM,"PUBLIC","",189,"","C0VCBA56W5RVGBNR8RHC1WK8C",112424,4,,,"","","","","","","","","","","","","","",,"",16-AUG-24 06.48.20.053841000 PM,17-MAR-16 04.11.29.548271000 PM,"","",,,"","","",345,""
61462141340033015054084129108234230286,17-MAR-16 10.39.11.439467000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Emulate multi-dimensional arrays with nested collections","EMULATE MULTI-DIMENSIONAL ARRAYS WITH NESTED COLLECTIONS","PL/SQL doesn't offer native support for multi-dimensional arrays, as you will find in other programming languages. You can, however, emulate these structures using nested collections. The syntax can be something of a surprise to developers, so be sure to hide the details behind a simple API.","",116969673908826,"","","",04-JUL-24 09.28.33.603099000 AM,"PUBLIC","mutli-dimensional array, array,collection",7,"","C0T3SSWTJT1M7YOCQJ7J3OE8D",14570128,4,,,"","","","","","","","","","","","","","",,"",04-JUL-24 09.28.20.910251000 AM,26-JUL-18 03.55.37.600069000 PM,"","APPROVED",26-JUL-18 03.55.37.591157000 PM,,"Auto Approved","","",37,""
61487902977156030954987051096023381916,17-MAR-16 04.29.49.836071000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Use EXCEPTION_INIT to Give Names to Un-named Oracle Errors","USE EXCEPTION_INIT TO GIVE NAMES TO UN-NAMED ORACLE ERRORS","Oracle Database pre-defines a number of exceptions for common ORA errors, such as NO_DATA_FOUND and VALUE_ERROR. But there a whole lot more errors for which there is no pre-defined name. And some of these can be encountered quite often in code. The key thing for developers is to avoid hard-coding these error numbers in your code. Instead, use the EXCEPTION_INIT pragma to assign a name for that error code, and then handle it by name.","",15298389935981,"","","",03-JUL-24 12.33.08.864304000 PM,"PUBLIC","exception_init,pragma",75,"","C0VIPVWBFP1RCBJ0W5SCEKVT6",117268,4,,,"","","","","","","","","","","","","","",,"",25-JAN-24 08.24.55.725223000 PM,25-MAR-16 12.33.19.568916000 PM,"","",,,"","","",178,""
61487902977229775429983543475680458652,17-MAR-16 04.44.07.305957000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Automatically Detect Exception Handlers That ''Swallow Up'' Errors","AUTOMATICALLY DETECT EXCEPTION HANDLERS THAT ''SWALLOW UP'' ERRORS","Use compile time warnings to be warned if the compiler has identified an exception handler that does not contain a RAISE statement or a call to RAISE_APPLICATION_ERROR.","",61487902977217686171787397183933396892,"","","",03-APR-24 02.06.40.768247000 PM,"PUBLIC","raise,warning,plw",40,"","C0VIPVWBL3P0KJJRHCU5GZB4U",112462,4,,,"","","","","","","","","","","","","","",,"",07-JUL-23 10.10.15.879248000 AM,17-MAR-16 04.54.29.956447000 PM,"","",,,"","","",65,""
61487902977418367857843425626934622108,17-MAR-16 04.59.11.411898000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","If Exception Not Re-raised, No More Exception!","IF EXCEPTION NOT RE-RAISED, NO MORE EXCEPTION!","You have a subprogram that invokes another subprogram (or nested block). That ""inner"" subprogram fails with an exception. It contains an exception handler. It logs the error, but then neglects to re-raise that exception (or another). Control passes out to the invoking subprogram, and it continues executing statements, completely unaware that an error occurred in that inner block. Which means, by the way, that a call to SQLCODE will return 0. This may be just what you want, but make sure you do this deliberately.","",107555761072751,"","","",20-AUG-24 09.13.23.651209000 AM,"PUBLIC","sqlcode,error",64,"","C0VIPVWB9869SIX66DX2C7RJI",119530,4,,,"","","","","","","","","","","","","","",,"",19-MAR-24 02.04.16.937216000 PM,28-MAR-16 01.26.30.339827000 PM,"","",,,"","","",109,""
61490310199535164284062588863077041937,17-MAR-16 05.14.11.095916000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Send Application-specific Error Message To Users With RAISE_APPLICATION_ERROR","SEND APPLICATION-SPECIFIC ERROR MESSAGE TO USERS WITH RAISE_APPLICATION_ERROR","If you execute a SELECT-INTO that does not identify any rows, the PL/SQL runtime engine raises: ORA-01403 and the error message (retrieved via SQLERRM or DBMS_UTILITY.FORMAT_ERROR_STACK) is simply ""No data found"".

That may be exactly what you want your users to see. But there is a very good chance you'd like to offer something more informative, such as ""An employee with that ID is not in the system.""

In this case, you can use RAISE_APPLICATION_ERROR.","",61487902977235820059081616621553989532,"","","",19-AUG-24 06.58.42.649789000 PM,"PUBLIC","raise_application_error",31,"","C0VNPYSDM3M3RQDYQMH18VKWZ",121276,4,,,"","","","","","","","","","","","","","",,"",19-AUG-24 06.58.42.649662000 PM,29-MAR-16 04.35.37.055856000 PM,"","",,,"","","",76,""
62068499681087198163413658846630687154,23-MAR-16 05.58.23.346114000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - Deleting Duplicates","ANALYTICS - DELETING DUPLICATES","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script looks at how to delete duplicate rows with the ROW_NUMBER function.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",62068499680884098625718401145280049586,"","","",06-AUG-24 04.02.04.920377000 PM,"PUBLIC","kiss, oracle, analytics, duplicates, row_number",86,"","C1S07CWFIEHK3ARAGQ6GKUQMC",115498,7,,,"","","","","","","","","","","","","","",,"",12-JUN-24 08.31.37.607158000 AM,23-MAR-16 05.58.23.389396000 AM,"","",,,"","","",257,""
62110124506722322110194833002269940558,23-MAR-16 03.32.26.745176000 PM,"",,"CHARLIE.BERGER@ORACLE.COM","Statistical SQL functions for performing t-test","STATISTICAL SQL FUNCTIONS FOR PERFORMING T-TEST","Statistical SQL functions for performing t-test in-Database using the SH.Sales and SH.Customers tables.  The t-test measures the significance of a difference of means. You can use it to compare the means of two groups or the means of one group with a constant.  

A t-test is any statistical hypothesis test in which the test statistic follows a Student's t-distribution under the null hypothesis. It can be used to determine if two sets of data are significantly different from each other, and is most commonly applied when the test statistic would follow a normal distribution if the value of a scaling term in the test statistic were known. When the scaling term is unknown and is replaced by an estimate based on the data, the test statistic (under certain conditions) follows a Student's t distribution.  See https://en.wikipedia.org/wiki/Student%27s_t-test","",12796947604237,"","","",17-AUG-24 02.35.47.948527000 AM,"PUBLIC","statistics, statistical functions",114,"","C1VHTDKJYIRHMJ1B139Q5PDUY",,62122359562009447255714070369388904843,,,"","","","","","","","","","","","","","",,"",17-AUG-24 02.35.47.948254000 AM,23-MAR-16 03.32.26.759278000 PM,"","",,,"","","",422,""
62112646185312658999746137631926934859,23-MAR-16 04.21.36.203756000 PM,"",,"CHARLIE.BERGER@ORACLE.COM","ANOVA Analysis of Variance SQL function","ANOVA ANALYSIS OF VARIANCE SQL FUNCTION","ANOVA Analysis of Variance SQL function","",62110124506709023926179072081348172622,"","","",04-AUG-24 10.23.14.518465000 AM,"PUBLIC","statistics, statistical functions",11,"","C283EA7FW8IFD5RA7ICUXKL21",115697,62122359562009447255714070369388904843,,,"","","","","","","","","","","","","","",,"",04-AUG-24 10.23.14.518369000 AM,23-MAR-16 04.21.36.213396000 PM,"","",,,"","","",17,""
67080063521089018040202930660131359926,10-MAY-16 05.25.16.619804000 AM,"",,"ROGEL@WEB.DE","Parametrized View","PARAMETRIZED VIEW","Another approach to parameterize a view right in the query.

Handle with extreme care (don't use in complexer SQLs than the shown one) ! ","",67079713169468179539674062136348911734,"","","",25-JAN-23 12.16.03.416649000 PM,"PUBLIC","",2,"","C9UA93ND71BGA0DZE7YEIPOAW",169048,1,,,"","","","","","","","","","","","","","",,"",25-JAN-23 12.15.00.316654000 PM,10-MAY-16 05.25.16.742128000 AM,"","APPROVED",15-JUN-18 01.34.34.997075000 AM,18-JUN-18 05.54.42.488613000 PM,"sharon.kennedy@oracle.com","","",24,""
62636044797656148543091092220377963144,28-MAR-16 04.32.02.873042000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Basic Error Logging Package","BASIC ERROR LOGGING PACKAGE","This very, VERY basic error logging package demonstrations the critical elements: use an autonomous transaction to write a row to the error log; call the full suite of error-related built-in functions to gather all generic information; pass in application-specific data for logging.","",62636044797576359438996526694847355528,"","","",19-AUG-24 04.41.22.728584000 PM,"PUBLIC","error,exception,log",77,"","C2PXB8COCDQXEU9DXYKAC6WEL",119671,4,,,"","","","","","","","","","","","","","",,"",19-AUG-24 06.43.06.722212000 AM,28-MAR-16 06.09.20.323656000 PM,"","",,,"","","",225,""
62920634756660809320536240129185599890,31-MAR-16 10.07.58.135332000 AM,"",,"KONSTANTINS.STRAZDS@FIRSTDATA.LV","the mysterious THE()","THE MYSTERIOUS THE()","the mysterious THE() vs TABLE()","",62920634756607616584473196445498528146,"","","",10-APR-23 03.30.10.856251000 PM,"PUBLIC","THE()",1,"","C257X5WG1S8UTKRX2NWJT69J4",123402,1,,,"","","","","","","","","","","","","","",,"",01-APR-16 01.43.31.091738000 PM,31-MAR-16 10.07.58.289337000 AM,"","APPROVED",15-JUN-18 01.34.35.000852000 AM,18-JUN-18 02.32.13.972600000 PM,"sharon.kennedy@oracle.com","","",5,""
63043836695612845594782396939141574115,01-APR-16 02.02.17.170785000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Use RETURNING Clause to Avoid Unnecessary SQL Statements","USE RETURNING CLAUSE TO AVOID UNNECESSARY SQL STATEMENTS","The RETURNING clause allows you to retrieve values of columns (and expressions based on columns) that were modified by an insert, delete or update. Without RETURNING you would have to run a SELECT statement after the DML statement is completed to obtain the values of the changed columns.

The RETURNING clause can return multiple rows of data, in which case you will use the RETURNING BULK COLLECT INTO form. You can also call aggregate functions in the RETURNING clause to obtain sums, counts and so on of columns in multiple rows changed by the DML statement.","",63043836695530638639048602155261554147,"","","",18-AUG-24 03.37.26.903105000 PM,"PUBLIC","returning,dml",55,"","C3DBYO1QG261U1OFZGGZZ1E1X",27077532,4,,,"","","","","","","","","","","","","","",,"",18-AUG-24 03.37.26.903010000 PM,29-APR-19 04.02.20.571809000 PM,"","APPROVED",29-APR-19 04.02.20.522102000 PM,,"Auto Approved","","",157,""
64050843583731523621874871782393660728,11-APR-16 05.44.20.796810000 AM,"",,"TRENT.SCHAFER@GMAIL.COM","PL/SQL variable scope","PL/SQL VARIABLE SCOPE","Demonstrating variables getting inherited in sub-units","",64050843583642063111223389223465403704,"","","",23-MAY-24 09.17.45.249939000 AM,"PUBLIC","",72,"","C4ZGI7BZF00GOJM8D96PLX5K6",134676,4,,,"","","","","","","","","","","","","","",,"",19-MAY-23 04.35.56.821696000 PM,11-APR-16 06.10.11.058944000 AM,"","APPROVED",15-JUN-18 01.34.35.004517000 AM,18-JUN-18 02.31.38.102659000 PM,"sharon.kennedy@oracle.com","","",254,""
62830271532617095309183413964166044781,30-MAR-16 01.06.43.294295000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Boolean Conversion Package","BOOLEAN CONVERSION PACKAGE","Every want to display a boolean value, convert it to Y/N or 1/0, and vice versa? This package can help. John Nagtzaam also points out that you can use sys.diutil.bool_to_int and sys.diutil.int_to_bool.","",107086078250972,"","","",03-APR-24 02.32.16.690731000 PM,"PUBLIC","boolean",15,"","C20Z58O7NHD6WY8009M2YAEBJ",122282,4,,,"","","","","","","","","","","","","","",,"",17-JAN-24 03.55.11.570593000 PM,30-MAR-16 01.11.03.894193000 PM,"","",,,"","","",46,""
62830271532649736306313008951883111533,30-MAR-16 01.16.33.404125000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Use SET to Remove Duplicates from Nested Tables","USE SET TO REMOVE DUPLICATES FROM NESTED TABLES","Nested tables are mulitsets, just like relational tables, so it should come as no surprise that you can perform set-level operations on them. The SET operator removes duplicates (no more ""multi"" in your multi set). You can use IS A SET to determine if the nested table does not have any duplicates.","",107086078250972,"","","",04-APR-24 10.47.22.030939000 PM,"PUBLIC","set,is a set,nested table",4,"","C20Z58O7QTO6LUU6DJ7EQY3ZZ",122302,4,,,"","","","","","","","","","","","","","",,"",03-APR-22 12.12.54.411861000 PM,30-MAR-16 01.19.03.767812000 PM,"","",,,"","","",42,""
62611449980736835115141170516911063680,28-MAR-16 10.39.26.134388000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Package of PL/SQL Limits","PACKAGE OF PL/SQL LIMITS","Yes, even PL/SQL has its limits, many of which are documented here: http://docs.oracle.com/database/121/LNPLS/limits.htm#LNPLS018. more of which are encapsulated in this package.","",117513990924809,"","","",04-APR-24 06.01.03.855373000 AM,"PUBLIC","",5,"","C2ODGKDDENY6H3YHMAWWFRO5E",119358,4,,,"","","","","","","","","","","","","","",,"",08-SEP-21 09.09.33.907456000 AM,28-MAR-16 10.40.54.523726000 AM,"","",,,"","","",13,""
62715637956617987745537707712442953713,29-MAR-16 10.46.00.447468000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Reverse a String with UTL_RAW.REVERSE","REVERSE A STRING WITH UTL_RAW.REVERSE","UTL_RAW comes in handy since normal SQL functions do not operate on RAWs, and PL/SQL does not allow overloading between a RAW and a VARCHAR2 datatype. UTL_RAW.REVERSE reverses a byte sequence from end to end. Combine it with conversion functions, and you can use it to reverse a VARCHAR2 string. Doc: http://docs.oracle.com/database/121/ARPLS/u_raw.htm#ARPLS71412. Please note, however (and as pointed out to me by Connor McDonald of AskTom), that with multibyte character sets, reversing with UTL_RAW.REVERSE can ""go bad"" since it performs a byte-by-byte reversal. ","",62713636126790706803010018401474722500,"","","",22-APR-24 05.50.24.564952000 PM,"PUBLIC","reverse,utl_raw",9,"","C2UDYO0GMS9K39ZET6UYLMR1V",120837,4,,,"","","","","","","","","","","","","","",,"",18-JAN-24 08.15.39.249429000 PM,29-MAR-16 10.57.36.885801000 AM,"","",,,"","","",38,""
63461411028067336222814125131089726956,05-APR-16 02.20.07.149379000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Incremental Commit Processing with FORALL","INCREMENTAL COMMIT PROCESSING WITH FORALL","What if you need to update so many rows in a single SQL statement that you get a ""rollback segment too small"" error? Traditionally, you do ""incremental commits"": commit after every N rows are modified. This only makes sense if your application will accept ""partial"" commits. And if you are executing DML statements row by row it can still be quite slow. What can you do about that? First, check out DBMS_PARALLEL_EXECUTE. Tf you can't make use of that package, you will want to switch to FORALL to go faster - but you will also hit the rollback error faster. So this script shows you how to implement incremental commits when using FORALL.","",116059670814799,"","","",24-JUL-24 05.11.54.551883000 PM,"PUBLIC","forall,incremental commit, commit",37,"","C3150JXVXKSLJHJZYUVLEND4M",128674,4,,,"","","","","","","","","","","","","","",,"",07-SEP-22 05.51.41.667337000 AM,05-APR-16 05.35.04.089635000 PM,"","",,,"","","",221,""
63533056589864254281442254604064146309,06-APR-16 06.25.01.253581000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - Grouping ranges of data","ANALYTICS - GROUPING RANGES OF DATA","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script looks at the classical problem of identifying groups of data within a set of rows.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",63532882910551892584823413085194317809,"","","",19-AUG-24 01.43.14.718029000 PM,"PUBLIC","kiss, oracle, analytics, grouping, ranges",317,"","C35KKE5TYDYWRU9C2CUIJXR7R",129082,7,,,"","","","","","","","","","","","","","",,"",19-AUG-24 01.43.14.717908000 PM,06-APR-16 06.25.01.271702000 AM,"","",,,"","","",514,""
63379382644446653976073805509323043661,04-APR-16 07.18.10.675812000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Fetching Multiple Rows from Dynamic SELECT","FETCHING MULTIPLE ROWS FROM DYNAMIC SELECT","This script shows you how to use both EXECUTE IMMEDIATE with BULK COLLECT and OPEN FOR with cursor variables to fetch multiple rows from a dynamically-constructed SELECT statement.","",114325953181759,"","","",12-AUG-24 07.19.30.133563000 PM,"PUBLIC","dynamic sql,bulk collect",69,"","C3WRCL0QD1K7J034M6XMCYBCQ",14570082,4,,,"","","","","","","","","","","","","","",,"",07-JUN-24 01.00.53.912397000 PM,26-JUL-18 03.52.39.431519000 PM,"","APPROVED",26-JUL-18 03.52.39.423124000 PM,,"Auto Approved","","",335,""
62823062324142712675941462547605639265,30-MAR-16 11.40.09.849694000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Unit Test Template for Deterministic Functions","UNIT TEST TEMPLATE FOR DETERMINISTIC FUNCTIONS","I offer in this script a template block that you can use to ""easily"" exercise a deterministic or pure function (no side effects - value returned is completely determined by its inputs). I then demonstrate how to put it into use with the element_found function.","",110730838704936,"","","",04-APR-24 05.57.42.780212000 AM,"PUBLIC","unit test",6,"","C20K6XKXVT2FXOGVMWSBKJR27",122203,4,,,"","","","","","","","","","","","","","",,"",09-JUN-22 10.36.15.427044000 AM,30-MAR-16 11.51.25.821848000 AM,"","",,,"","","",22,""
64471084008899794923061332713918857395,15-APR-16 06.04.56.298834000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - The LISTAGG function","ANALYTICS - THE LISTAGG FUNCTION","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script looks at the listagg function to concatenate rows into a list.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",64471084008839348632080601255183548595,"","","",19-AUG-24 02.41.35.175436000 PM,"PUBLIC","kiss, oracle, analytics, listagg, concatenation",199,"","C5NPSOT3UP34GYXQ7Q82168LH",140839,7,,,"","","","","","","","","","","","","","",,"",19-AUG-24 02.41.35.175319000 PM,15-APR-16 06.04.56.329631000 AM,"","",,,"","","",325,""
64929006720663821690760750526745946542,19-APR-16 03.13.47.568693000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Log Errors with Reject Limit","LOG ERRORS WITH REJECT LIMIT","When you specify a limit for the LOG ERRORS clause, Oracle will terminate the execution of the DML statement when that number of errors have been raised.","",64929006720591286141583872776263575982,"","","",17-JUN-24 05.43.17.552821000 PM,"PUBLIC","LOG ERRORS, DBMS_ERRLOG",34,"","C6EP54V1KRHJB2RAHXX25R6CV",146886,4,,,"","","","","","","","","","","","","","",,"",17-JUN-24 05.43.17.552721000 PM,08-OCT-19 08.45.55.793126000 PM,"","APPROVED",08-OCT-19 08.45.55.792749000 PM,,"Auto Approved","","",81,""
65998775867756072024052225873208294425,29-APR-16 09.03.21.100478000 PM,"",,"PHILIPP.SALVISBERG@TRIVADIS.COM","oddgen: Generate WHEN clause for DML trigger","ODDGEN: GENERATE WHEN CLAUSE FOR DML TRIGGER","Implementation for oddgen, http://www.oddgen.org generator. Original code by Steven Feuerstein, https://livesql.oracle.com/apex/livesql/file/content_C7VKBA85Q9PUS2XRAL1U8J3LG.html","",65998775867737938136758006435587701785,"","","",03-APR-24 02.35.02.474420000 PM,"PUBLIC","oddgen",13,"","C73W7CZ0LPFXWJPBW8M99DBOZ",160575,5,,,"","","","","","","","","","","","","","",,"",22-NOV-22 08.59.13.450766000 AM,01-MAY-16 01.48.36.600018000 PM,"","APPROVED",15-JUN-18 01.34.35.008475000 AM,18-JUN-18 06.56.46.146518000 PM,"sharon.kennedy@oracle.com","","",56,""
63870030810470829695819216454496743310,09-APR-16 12.05.12.095087000 PM,"",,"AMMAR173@GMAIL.COM","Current Of Example","CURRENT OF EXAMPLE","Example of Current of
CURSOR cur_currof_exa IS
SELECT  ....
FOR UPDATE;

UPDATE ......
WHERE CURRENT OF cur_currof_exa;","",63870030809966707629039916088644267918,"","","",03-APR-24 02.37.48.530235000 PM,"PUBLIC","Current Of",13,"","C4O0SWF3DJCZDYD6LDC79JZMO",132871,4,,,"","","","","","","","","","","","","","",,"",07-AUG-23 07.03.38.147406000 AM,09-APR-16 12.05.12.128099000 PM,"","APPROVED",15-JUN-18 01.34.35.012398000 AM,18-JUN-18 02.31.28.475107000 PM,"sharon.kennedy@oracle.com","","",54,""
66375020746383470552408800778168966925,03-MAY-16 11.33.11.677947000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Optimization of Loop Invariants","OPTIMIZATION OF LOOP INVARIANTS","This script demonstrates how the PL/SQL optimizer automatically detects and optimizes loop invariants (operations executed within a loop that do not change for each iteration of the loop). What does it do? Pulls the invariant expression out of the loop, executes it once, and then replaces the invariant expression with a variable. All transparent to the programmer. Want more details? Check out this whitepaper: http://www.oracle.com/technetwork/database/features/plsql/codeorder-133512.zip","",66375020746277085080282713410794823437,"","","",03-APR-24 02.50.16.237500000 PM,"PUBLIC","optimization,loop invariants",8,"","C8PL60XF94KNISMFSGMSY1BI3",162737,4,,,"","","","","","","","","","","","","","",,"",31-MAR-21 05.53.25.771759000 PM,03-MAY-16 11.47.16.844900000 AM,"","",,,"","","",18,""
66392786504332598517946757687508915366,03-MAY-16 03.58.58.734654000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Flashback table, query and drop","FLASHBACK TABLE, QUERY AND DROP","Examples of using flashback to:

- Restore a whole table to a previous state
- Recover a few rows from a table
- Undrop a table!

For further details, see the blog post How to Recover Data (Without a Backup!):

https://blogs.oracle.com/sql/entry/how_to_recover_data_without","",66392786503349741826600064168472794278,"","","",01-AUG-24 10.17.15.516393000 AM,"PUBLIC","flashback",59,"","C80ZYF7O5VTINNGX3CYAVYZF3",164866,1,,,"","","","","","","","","","","","","","",,"",13-MAY-24 12.03.07.192459000 PM,05-MAY-16 08.46.57.018935000 AM,"","",,,"","","",198,""
66474532793917646364486952601990644740,04-MAY-16 10.42.40.971081000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - LISTAGG with the OVER clause","ANALYTICS - LISTAGG WITH THE OVER CLAUSE","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script is for looking at to how use an analytic expression on the listagg function

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",66474532793412315371888037606963463172,"","","",19-AUG-24 03.36.43.277018000 PM,"PUBLIC","kiss, analytics, listagg",237,"","C8VCZCTSTOY4DUHJ1TZCBH2K2",164059,7,,,"","","","","","","","","","","","","","",,"",19-AUG-24 03.36.43.276900000 PM,04-MAY-16 10.42.41.095317000 AM,"","",,,"","","",415,""
66483455382574706483016371948021779496,04-MAY-16 12.20.13.934209000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Use DBMS_METADATA to Extract DDL","USE DBMS_METADATA TO EXTRACT DDL","I will let the doc tell the story: ""The DBMS_METADATA API eliminates the need for you to write and maintain your own code for metadata extraction. It provides a centralized facility for the extraction, manipulation, and re-creation of dictionary metadata. And it supports all dictionary objects at their most current level."" [http://docs.oracle.com/database/121/SUTIL/GUID-D9B1300F-B21D-416E-8B9B-C542195EF249.htm#SUTIL015] This LiveSQL script only scratches the surface of what you can do with this powerful package.","",1264545037507,"","","",18-JUL-24 12.04.11.026425000 PM,"PUBLIC","DBMS_METADATA,DDL,EXTRACT DDL",46,"","C8VVIT8290I19X1J954GFIMC6",164152,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",18-JUL-24 12.04.11.026246000 PM,04-MAY-16 12.23.39.285108000 PM,"","",,,"","","",145,""
66590573815014585238476483589785145995,05-MAY-16 01.16.54.367934000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Different Types of Cursors in PL/SQL","DIFFERENT TYPES OF CURSORS IN PL/SQL","An exploration into the different ways you can define and use cursors (pointers to SQL result sets) in PL/SQL, including: implicit cursor, explicit cursor, cursor expressions, cursor variables, DBMS_SQL cursor handles. More details available at my blog: http://stevenfeuersteinonplsql.blogspot.com/2016/05/types-of-cursors-available-in-plsql.html","",4511885373407,"","","",21-AUG-24 07.06.57.027630000 PM,"PUBLIC","cursor",1310,"","C82D79HX5GHDJA3W77QS65Q8W",29053013,4,,,"","","","","","","","","","","","","","",,"",18-AUG-24 05.28.03.952571000 PM,12-JUN-19 12.42.41.367959000 PM,"","APPROVED",12-JUN-19 12.42.41.355622000 PM,,"Auto Approved","","",5492,"N"
66692224453680095792543336354915462742,06-MAY-16 12.18.23.662579000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Simple Table Function Example: Collection of Scalars","SIMPLE TABLE FUNCTION EXAMPLE: COLLECTION OF SCALARS","A table function is a function executed with the TABLE operator, and then within the FROM clause of a query - in other words, a function that is selected from just like a relational table! A common usage of table functions in the Data Warehousing world is to stream data directly from one process or transformation, to the next process without intermediate staging (a ""streaming"" table function - see my script demonstrating that elsewhere on LiveSQL). But you can also leverage table functions to programatically create a dataset and then make it available in SQL.","",6070452447715,"","","",10-AUG-24 08.10.31.028989000 AM,"PUBLIC","table function",51,"","C87X7AHZ4UR3756WYZ71EVNLK",166496,4,,,"","","","","","","","","","","","","","",,"",22-JUN-23 07.43.46.683346000 AM,06-MAY-16 12.25.48.818405000 PM,"","",,,"","","",162,""
66657370942208031036672709914583034706,06-MAY-16 04.17.53.513566000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - The KEEP clause","ANALYTICS - THE KEEP CLAUSE","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script is demonstrates the KEEP clause, a great way of picking up attributes related to an aggregate, but not within the GROUP BY clause.  For exmaple, finding the lowest salary per department, but also collecting the details of the employee with that salary as well","",66656719288307535955261019672615190754,"","","",19-AUG-24 10.33.36.736235000 PM,"PUBLIC","kiss, analytics, keep, aggregate",258,"","C85WW581KNY479N0MO15RPZOK",165958,7,,,"","","","","","","","","","","","","","",,"",19-AUG-24 10.33.36.736122000 PM,06-MAY-16 04.17.53.563829000 AM,"","",,,"","","",408,""
64068520651764948281984775834080784254,11-APR-16 09.30.57.291333000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - In-list processing","ANALYTICS - IN-LIST PROCESSING","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script uses LAG to convert string list into a set of rows.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",64068520651739560839772868621411954558,"","","",19-AUG-24 02.33.30.769560000 PM,"PUBLIC","lag, lead, kiss, oracle, sql, analytics",207,"","C40G9LF09003ZWP5IN8W6UR5S",134809,7,,,"","","","","","","","","","","","","","",,"",19-AUG-24 02.33.30.769416000 PM,11-APR-16 09.30.57.301141000 AM,"","",,,"","","",339,""
64991905697184273107090129527520283909,20-APR-16 05.44.15.600678000 AM,"",,"LUCAS.JELLEMA@AMIS.NL","JSON Array Parsing","JSON ARRAY PARSING","This script shows how strings holding JSON arrays can be parsed using JSON support in Oracle Database 12c","",64991905696946114720626047580103167237,"","","",30-JUL-24 08.47.30.507494000 AM,"PUBLIC","json",170,"","C6HR2HQQQBWUHPV39C5VOT3KN",148070,6,,,"","","","","","","","","","","","","","",,"",27-APR-24 10.21.36.726957000 PM,20-APR-16 06.00.34.362642000 AM,"","APPROVED",15-JUN-18 01.34.35.022666000 AM,18-JUN-18 02.31.15.518414000 PM,"sharon.kennedy@oracle.com","","",415,""
65650013977214658521212164210875365498,26-APR-16 12.55.00.045555000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Ask Tom Answer - How to split a row into 2 rows based on condition.","ASK TOM ANSWER - HOW TO SPLIT A ROW INTO 2 ROWS BASED ON CONDITION.","Scripts to support the answer to the Ask Tom question ""How to split a row into 2 rows based on condition.""","",65650013977185644301541413110682417274,"","","",02-MAY-24 12.37.48.883462000 PM,"PUBLIC","SQL",40,"","C7JRMG590CZFZY3UHXUC9MG3G",155304,1,,,"","","","","","","","","","","","","","",,"",29-MAR-20 07.58.48.688169000 PM,26-APR-16 12.57.27.715955000 PM,"","",,,"","","",65,""
63876049330562777069089370183406612781,09-APR-16 01.25.50.936127000 PM,"",,"AMMAR173@GMAIL.COM","Session parameters","SESSION PARAMETERS","Procedure to show all session parameters.","",63870030810485336805654592004593217422,"","","",19-APR-24 05.17.30.195551000 PM,"PUBLIC","session parameters",12,"","C4PDA4W84UHR9O0EA2ZDP0A0F",133040,4,,,"","","","","","","","","","","","","","",,"",22-DEC-21 12.17.28.888823000 AM,09-APR-16 01.25.51.143663000 PM,"","APPROVED",15-JUN-18 01.34.35.029268000 AM,15-JUN-18 05.56.50.896722000 PM,"sharon.kennedy@oracle.com","","",56,""
64295868234079308837172359052021923044,13-APR-16 01.41.32.645150000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Secure Your PL/SQL Code!","SECURE YOUR PL/SQL CODE!","Developers often think that security is not their problem, their job. Database admins, system admins, network admins: they're the ones responsible for securing applications. Well, sure that's true. But developers also play a fundamental part in ensuring that their company's data is secure. In this script (a co-production of Steven Feuerstein and Rob Lockard, oraclewizard.com), we start with a procedure full of security issues, and step through changes that a developer can and should make to secure their individual program units.","",64293406765489089645022208564826663403,"","","",19-MAY-24 06.32.01.207990000 PM,"PUBLIC","security,sql injection",44,"","C5DZ2H7JV2LM5DJYYMN938DGX",138738,4,,,"","","","","","","","","","","","","","",,"",01-APR-23 12.29.09.140253000 AM,13-APR-16 04.46.36.961091000 PM,"","",,,"","","",184,""
64738896422501069119470470994921675721,17-APR-16 08.02.59.786462000 PM,"",,"XFGORDONIE","LATERAL_EXAMPLE","LATERAL_EXAMPLE","Example of the LATERAL keyword in SQL","",64738471866764328374122353508211150153,"","","",02-JUL-24 06.24.23.372986000 AM,"PUBLIC","LATERAL",3,"","C526BAGFODFIFAN91S6JFBL8R",142392,3,,,"","","","","","","","","","","","","","",,"",22-FEB-23 04.27.54.275710000 PM,17-APR-16 08.02.59.880000000 PM,"","APPROVED",15-JUN-18 01.34.35.032597000 AM,18-JUN-18 02.31.51.313434000 PM,"sharon.kennedy@oracle.com","","",19,""
65854387403055966331800789118328938146,28-APR-16 11.49.39.837519000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Generate WHEN clause for DML trigger","GENERATE WHEN CLAUSE FOR DML TRIGGER","Use the WHEN clause to avoid execution of a trigger body unless a column value has changed. This script generates such a WHEN clause for a table, handling the usual NULL ""nonsense.""","",775146335590,"","","",09-JUN-24 04.57.00.878962000 AM,"PUBLIC","",13,"","C7VKBA85URHPKP56O3M4AQAS0",158338,5,,,"","","","","","","","","","","","","","",,"",11-DEC-22 03.16.17.855991000 PM,28-APR-16 11.50.46.014558000 AM,"","",,,"","","",77,""
64267729277978434366645395028152313613,13-APR-16 07.50.29.519619000 AM,"",,"SARAVANANNSIT@GMAIL.COM","GREATEST and LEAST function in PL/SQL","GREATEST AND LEAST FUNCTION IN PL/SQL","Simple code to find Greatest and least values in PL/SQL block","",64267729277794677642063971393596974861,"","","",04-APR-24 06.00.42.259224000 AM,"PUBLIC","PL/SQL, GREATEST, LEAST ",6,"","C5BY717BQNRNXTDPUV6MFSZVJ",137895,4,,,"","","","","","","","","","","","","","",,"",05-JAN-24 11.45.01.714961000 AM,13-APR-16 07.51.41.958388000 AM,"","APPROVED",15-JUN-18 01.34.35.035977000 AM,15-JUN-18 04.40.30.980210000 PM,"sharon.kennedy@oracle.com","","",33,""
67079681675813475599742277774004099213,10-MAY-16 05.34.27.752968000 AM,"",,"AMIT.SHANKARLAL.SHAH@ACCENTURE.COM","MULTISET example","MULTISET EXAMPLE","use of MULTISET EXCEPT, INTERSECT, UNION on collection type of nested table. 

For a complex type of object (row type), need to provide MAP function to work all these MULTISET operations. 

Create EMP and DEPT tables using this script:
https://livesql.oracle.com/apex/livesql/s/c9uctactgkq1lqb9lmxbk1cc6
","",67076702008696489729691063779188183574,"","","",15-JUN-24 08.18.00.179549000 PM,"PUBLIC","MULTISET EXCEPT INTERSECT UNION",14,"","C9UCTACTF4CGDFHFE1UJSKVRU",169066,6,,,"","","","","","","","","","","","","","",,"",15-JUN-24 08.17.37.065211000 PM,10-MAY-16 05.42.49.034238000 AM,"","APPROVED",15-JUN-18 01.34.35.039537000 AM,18-JUN-18 02.33.03.872793000 PM,"sharon.kennedy@oracle.com","","",87,""
68056846718686159292289086788698039362,19-MAY-16 01.59.48.947009000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Generate Starting Point for Table DDL","GENERATE STARTING POINT FOR TABLE DDL","I follow a few standards for table definitions, including: table name is plural; four standard audit columns (created by/when, updated by/when) with associated triggers; primary key name is [entity]_id, and more. This procedure (refactored from PL/SQL Challenge, the quiz website plsqlchallenge.oracle.com) gives me a consisting start point, from which I then add entity-specific columns, additional foreign keys, etc. Hopefully you will find it useful, too!","",23329499639566,"","","",15-AUG-24 02.32.51.544258000 PM,"PUBLIC","generate",35,"","DBEO1MIHOUMA93ID0QGSKJOWK",182633,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",06-FEB-24 01.32.16.645472000 PM,19-MAY-16 02.46.32.998483000 PM,"","",,,"","","",284,""
68242542471960415662630498132665449766,21-MAY-16 08.57.01.594893000 AM,"",,"ERIK.VAN.ROON@EVROCS.NL","Variable/column = null??","VARIABLE/COLUMN = NULL??","There is a misconception about comparing variables and columnvalues with null that I keep running into both at work and in answers in online forums.
Too many people believe that ""variable = null"" or ""column = null"" returns ""False"".
However, this idea is incorrect, and can lead to serious bugs that can prove to be hard to track as long as you still believe the above mentioned misconception.
","",68241251338916871317856333925421048411,"","","",16-JUL-23 09.10.51.859301000 AM,"PUBLIC","sql plsql null",3,"","DBPEW7Q2WA8NFRCL5HA5EPWAG",184997,1,,,"","","","","","","","","","","","","","",,"",16-JUL-23 09.10.51.859189000 AM,21-MAY-16 08.57.01.708103000 AM,"","APPROVED",15-JUN-18 01.34.35.043048000 AM,18-JUN-18 02.33.52.040963000 PM,"sharon.kennedy@oracle.com","","",20,""
68016066370383287713021868038272196495,19-MAY-16 04.31.50.276623000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - Hypothetical ranking and RATIO_TO_REPORT","ANALYTICS - HYPOTHETICAL RANKING AND RATIO_TO_REPORT","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script is the hypothetical RANK function, and the RATIO_TO_REPORT function.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",68016066370243052317946571054006280079,"","","",19-AUG-24 10.34.41.169743000 PM,"PUBLIC","hypothetical, kiss, partition, ratio_to_report, ratio",185,"","DBCCAWYD3SQNCKH248TRP2I99",181732,7,,,"","","","","","","","","","","","","","",,"",19-AUG-24 10.34.41.169215000 PM,19-MAY-16 04.31.50.308304000 AM,"","",,,"","","",309,""
67528032347648029221014773275218835712,14-MAY-16 12.54.28.818188000 PM,"",,"PHILIPP.SALVISBERG@TRIVADIS.COM","Never use a schema name as package name","NEVER USE A SCHEMA NAME AS PACKAGE NAME","Demonstrates a side effect when using a schema name as package name.","",67528032347415915463648764473675249920,"","","",04-APR-24 06.28.48.231468000 AM,"PUBLIC","Bug",1,"","DAJ9CV61GST6R5VLGNBIUPFK3",175781,6,,,"","","","","","","","","","","","","","",,"",14-MAY-16 01.11.05.458660000 PM,14-MAY-16 12.54.28.821724000 PM,"","APPROVED",15-JUN-18 01.34.35.055539000 AM,18-JUN-18 02.33.59.126660000 PM,"sharon.kennedy@oracle.com","","",14,""
67211350431414060464956579895898164325,11-MAY-16 12.17.47.851303000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Convert N to Nth","CONVERT N TO NTH","Simple package API to make it easy for you to convert N to Nth, as in 3 to 3rd. In addition, convert a day number to the word for that day, as in 3 to third. How do I do it? By leveraging the wonderful format masks of TO_CHAR for dates!","",108600102717764,"","","",04-APR-24 06.18.18.518381000 AM,"PUBLIC","NTH",3,"","C91V3GFKMJK6LIETN532NQL0N",171840,4,,,"","","","","","","","","","","","","","",,"",25-APR-20 07.18.36.896809000 AM,11-MAY-16 12.18.28.151619000 PM,"","",,,"","","",24,""
67108086838682778104218582930831324587,10-MAY-16 11.54.28.732348000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","DML Trigger Conditional Predicates: INSERTING, UPDATING, DELETING","DML TRIGGER CONDITIONAL PREDICATES: INSERTING, UPDATING, DELETING","The triggering event of a DML trigger can be composed of multiple triggering statements. When one of them fires the trigger, the trigger can determine which one by using these conditional predicates: INSERTING, UPDATING, UPDATING ('column_name'), DELETING. Very useful when you need to run similar (but not same) logic for different events. Put it all in one trigger with branching logic.

Link to doc: http://docs.oracle.com/database/121/LNPLS/triggers.htm#LNPLS750","",4579147613554,"","","",06-AUG-24 10.49.33.501574000 AM,"PUBLIC","conditional predicate,inserting,updating,deleting",358,"","C9VXIG8WWNFDYJBLNZIULIBZX",14570076,5,,,"","","","","","","","","","","","","","",,"",15-JUN-24 04.42.27.581678000 AM,26-JUL-18 03.52.12.448557000 PM,"","APPROVED",26-JUL-18 03.52.12.440221000 PM,,"Auto Approved","","",1736,""
67845731153646603849408726799049487945,17-MAY-16 01.31.55.006712000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Nested Subprograms Better Than Nested Blocks","NESTED SUBPROGRAMS BETTER THAN NESTED BLOCKS","Sure, you can create nested (anonymous) blocks inside other blocks (executable sections). You can use a <<label>> to give that block a ""name."" You can attach that ""name"" to the END statement of the block. But it is way better (in my opinion) to move those nested blocks up to the declaration section as nested subprograms and then invoke those subprograms by name. No need to for labels, cleaner, simpler, easier to read code.","",3345387372316,"","","",03-JUL-24 04.50.06.277797000 PM,"PUBLIC","nested subprogram,nested block,block",11,"","DA2ICE6DWXRSQ2OOA2EATBCUZ",14570070,6,,,"","","","","","","","","","","","","","",,"",10-JUN-21 04.49.25.504725000 AM,26-JUL-18 03.51.54.231193000 PM,"","APPROVED",26-JUL-18 03.51.54.222261000 PM,,"Auto Approved","","",38,""
68484737926047441798143811192919597461,23-MAY-16 04.26.07.057875000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","The Cursor FOR Loop","THE CURSOR FOR LOOP","An exploration into the very useful and elegant cursor FOR loop, in which we declaratively tell the PL/SQL engine ""I want to do X for each row fetched by the cursor."" But we leave it up to that fine engine to do all the administrative work for us (open, fetch, close) - PLUS this loop is automatically optimized to return 100 rows with each fetch!","",12343638837612,"","","",17-AUG-24 12.39.47.018872000 PM,"PUBLIC","cursor,cursor for loop",121,"","DB3J3JU4IDPAJFCVXFE7QDSW0",187344,4,,,"","","","","","","","","","","","","","",,"",14-JUL-24 06.21.40.685064000 PM,23-MAY-16 04.59.55.214306000 PM,"","",,,"","","",671,""
68651679432695513997636210187844648695,25-MAY-16 06.54.25.438054000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - PIVOT and UNPIVOT functions","ANALYTICS - PIVOT AND UNPIVOT FUNCTIONS","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script demonstrates the PIVOT and UNPIVOT functions.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",68651679432549233973462840057705201399,"","","",19-AUG-24 10.36.21.743777000 PM,"PUBLIC","kiss, oracle, analytics, pivot, unpivot",259,"","DCC032IJOS537YTTZKNZ7Q0QX",189337,7,,,"","","","","","","","","","","","","","",,"",19-AUG-24 10.36.21.743650000 PM,25-MAY-16 06.54.25.452700000 AM,"","",,,"","","",600,""
69517341310797633903581390754382748173,02-JUN-16 01.51.06.375658000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Pluralize Function: 1 Quiz, 22 Quizzes, 0 Quizzes","PLURALIZE FUNCTION: 1 QUIZ, 22 QUIZZES, 0 QUIZZES","I hate reading messages like ""1 Quizzes Taken"". I hate even worse when my own apps display such grammatically incorrect text. So I wrote this function to correctly pluralize (or not) numbers, depending on their values. ","",10376119027284,"","","",04-APR-24 05.57.46.661585000 AM,"PUBLIC","plural",6,"","DDQZYSJQ72174L333T60TR6T7",205072,4,,,"","","","","","","","","","","","","","",,"",20-AUG-22 12.01.12.867901000 AM,03-JUN-16 04.09.21.532114000 PM,"","",,,"","","",6,""
68996764606366275577767606708893024316,28-MAY-16 01.51.09.738940000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Using REVERSE in FOR Loops","USING REVERSE IN FOR LOOPS","Need to execute your loop body from highest to lowest values, instead of the usual lowest to highest? Then use the REVERSE keyword!","",14418299643951,"","","",15-AUG-24 04.32.31.930587000 AM,"PUBLIC","loop,reverse",24,"","DCWX7BEO2ZUBYCT8STRUHNLCE",193724,4,,,"","","","","","","","","","","","","","",,"",15-AUG-24 04.32.31.930466000 AM,28-MAY-16 01.52.53.063233000 PM,"","",,,"","","",120,""
70673079238574874799492052597447752769,13-JUN-16 03.03.19.833526000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","MOD and REMAINDER in SQL and PL/SQL","MOD AND REMAINDER IN SQL AND PL/SQL","MOD uses FLOOR and REMAINDER uses ROUND in their formulas. FLOOR returns the largest integer equal to or less than the number provided. ROUND could return an integer that is greater than the number provided (it could round up). The formulas used by these two functions are: MOD (m, n) = m - n * FLOOR (m/n); 
REMAINDER (m, n) = m - n * ROUND (m/n); Thus, if ROUND rounds up, a larger number will be subtracted from m, and so the value returned by REMAINDER could be less than that returned by MOD, but never greater. Doc link: http://docs.oracle.com/database/121/SQLRF/functions002.htm#CJAIBHGG","",70673079238570039096213594080748928065,"","","",29-FEB-24 01.03.43.656785000 PM,"PUBLIC","MOD,REMAINDER",5,"","DFLPLMEGF2DKWL17PRO10MITV",222499,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",18-SEP-23 08.12.01.300532000 PM,13-JUN-16 03.03.19.843608000 PM,"","",,,"","","",55,""
70675008959775017250231333596428932454,13-JUN-16 03.40.30.354650000 PM,"",,"ORATUNE@YAHOO.COM","remainder_problem","REMAINDER_PROBLEM","Displays the incorrect remainders generated for 15 divided by numbers that are powers of 2.  Also creates a function to generate the correct remainders.","",70675008959758092288756728787983045990,"","","",17-FEB-23 06.36.32.641979000 AM,"PUBLIC","remainder, mod",2,"","DFLTLZB0L6088S7QDNSLLAML0",222542,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",19-NOV-20 03.07.02.724816000 PM,13-JUN-16 03.40.30.417097000 PM,"","APPROVED",15-JUN-18 01.34.35.063240000 AM,18-JUN-18 06.23.27.849212000 PM,"sharon.kennedy@oracle.com","","",17,""
70682199306895995029079310821961111868,13-JUN-16 05.08.17.974364000 PM,"",,"ORATUNE@YAHOO.COM","remainder_issue_followup","REMAINDER_ISSUE_FOLLOWUP","Shows difference when round() and trunc() are used on the m/n results.","",70679634433611881406543702779555890195,"","","",13-OCT-22 08.24.06.677565000 PM,"PUBLIC","remainder, mod",2,"","DFL8JVNOMCV309QQSPMBI422M",222546,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",23-AUG-19 05.34.38.591623000 AM,13-JUN-16 05.08.17.989576000 PM,"","APPROVED",15-JUN-18 01.34.35.072697000 AM,18-JUN-18 06.23.40.125978000 PM,"sharon.kennedy@oracle.com","","",11,""
69612860546656740564232315950215073579,03-JUN-16 11.25.20.929961000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - Partitioned Outer Join","ANALYTICS - PARTITIONED OUTER JOIN","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script is demonstrates the partitioned outer join, a means via which to do a ""grouped"" outer join based on logical subsets of the data.  In the sample script, we perform a join on bookings for meetings room, partitioning the result set out for each room

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",69612860546584205015055438199732703019,"","","",22-AUG-24 07.27.50.061178000 PM,"PUBLIC","kiss, oracle, analytics, partitioned outer join",206,"","DDWIGFEMAOKZ88ND9XJOM1ARH",204634,7,,,"","","","","","","","","","","","","","",,"",22-AUG-24 07.27.50.061074000 PM,03-JUN-16 11.25.20.953751000 AM,"","",,,"","","",398,""
69633465046716044913108588921220691836,03-JUN-16 04.16.00.091234000 PM,"",,"DAVI84@GMAIL.COM","bulk collect","BULK COLLECT","bulk collect of a custom record in an array","",69633465046643509363931711170738321276,"","","",03-APR-24 02.25.44.229363000 PM,"PUBLIC","",17,"","DDXO9TDV4W7GLTMZ3ST91EBRI",205037,6,,,"","","","","","","","","","","","","","",,"",19-JAN-21 07.17.52.022349000 AM,03-JUN-16 04.16.00.137917000 PM,"","APPROVED",15-JUN-18 01.34.35.083310000 AM,18-JUN-18 02.34.07.449008000 PM,"sharon.kennedy@oracle.com","","",85,""
70645164065306518407007232290955333243,13-JUN-16 08.41.57.003088000 AM,"",,"ARUN51284@GMAIL.COM","emp_details","EMP_DETAILS","To list the all employees who have get salary greater than or equal to 3000.","",70645164065261788151681491011491204731,"","","",04-AUG-24 04.59.18.370427000 PM,"PUBLIC","",32,"","DFJ3LB1PJWRDSPXGMI9NUN921",221840,6,,,"","","","","","","","","","","","","","",,"",04-AUG-24 04.56.16.994199000 PM,13-JUN-16 08.41.57.062453000 AM,"","APPROVED",15-JUN-18 01.34.35.087505000 AM,18-JUN-18 02.34.36.531578000 PM,"sharon.kennedy@oracle.com","","",202,""
71701007518146232974585665903473083102,23-JUN-16 11.25.50.298519000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Exception Section WHEN Clause Rules","EXCEPTION SECTION WHEN CLAUSE RULES","The exception section contains one or more WHEN clause to possibly trap/handle that exception. This script goes over key rules and features for WHEN clauses.","",2455130510492,"","","",03-APR-24 02.46.37.932282000 PM,"PUBLIC","exception,when,when others",10,"","DG9QXSOYAQ9Z676TY39677WMW",240233,4,,,"","","","","","","","","","","","","","",,"",17-APR-18 02.54.42.023600000 AM,23-JUN-16 02.12.52.232941000 PM,"","",,,"","","",25,""
71413610549261221353998334235884814687,20-JUN-16 05.15.13.451538000 PM,"",,"CMEDEIROS@PAGINASAMARELAS.PT","PL/SQL anonymous Block with procedure and function  inside","PL/SQL ANONYMOUS BLOCK WITH PROCEDURE AND FUNCTION  INSIDE","You can use procedures or functions inside a PL/SQL anonymous Block ","",71411941723004573311189571705745597151,"","","",07-AUG-24 01.38.04.138049000 PM,"PUBLIC","block anonymous procedure function",44,"","DGSGFJASF6IXT3PA3DCUDEEH9",235606,4,,,"","","","","","","","","","","","","","",,"",01-JUL-24 11.13.34.473575000 AM,21-JUN-16 08.39.08.223371000 AM,"","APPROVED",15-JUN-18 01.34.35.112015000 AM,18-JUN-18 02.34.15.815248000 PM,"sharon.kennedy@oracle.com","","",204,""
71622506793603111740032820010302468266,22-JUN-16 05.26.11.789197000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Characteristics of BULK COLLECT Collections","CHARACTERISTICS OF BULK COLLECT COLLECTIONS","This script demonstrates key characteristics of a collection populated by a BULK COLLECT fetch: it is either empty or sequentially filled from index value 1.","",5857378348445,"","","",03-APR-24 02.32.14.958525000 PM,"PUBLIC","collection,bulk collect",15,"","DG4IIPR55HE25DU82GH5J6KHO",238455,4,,,"","","","","","","","","","","","","","",,"",14-AUG-23 02.45.21.482379000 PM,22-JUN-16 05.26.45.829012000 PM,"","",,,"","","",72,""
71505762445200271073887106029931125600,21-JUN-16 02.43.26.488688000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Use REVERSE Keyword to Go From High to Low Values","USE REVERSE KEYWORD TO GO FROM HIGH TO LOW VALUES","Using a numeric FOR loop, but you want to go from highest to lowest value? Add the REVERSE keyword!","",15878855865616,"","","",17-APR-24 03.34.32.043291000 PM,"PUBLIC","reverse,loop",2,"","DGXRW9KNQ6XABQY68Q67HAP5U",236593,4,,,"","","","","","","","","","","","","","",,"",09-FEB-17 03.45.55.960739000 PM,21-JUN-16 02.45.35.549520000 PM,"","",,,"","","",12,""
74966012365350485568193743109275438944,24-JUL-16 05.27.32.878418000 PM,"",,"LUKAS.EDER@GMAIL.COM","Steve Jones Johnson","STEVE JONES JOHNSON","GROUP BY individual columns vs GROUP BY expressions","",74966012365306964238687616458986016608,"","","",07-DEC-23 06.50.13.945521000 AM,"PUBLIC","GROUP BY",6,"","DMHICSQ2UTM12S3MABY5PMLMA",297949,1,,,"","","","","","","","","","","","","","",,"",15-SEP-22 10.52.01.688807000 PM,24-JUL-16 05.27.32.910346000 PM,"","APPROVED",15-JUN-18 01.34.35.135243000 AM,18-JUN-18 05.56.29.733694000 PM,"sharon.kennedy@oracle.com","","",39,""
73929081028497872531557267974497386509,14-JUL-16 07.10.21.044681000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Extending UTL_FILE with Java Methods","EXTENDING UTL_FILE WITH JAVA METHODS","UTL_FILE is a handy package but it doesn't do everything everyone wants with files (such as: get list of files in directory). So I ""fell back"" on Java to build out file management via a PL/SQL API. NOTE: this code will NOT execute in LiveSQL, and it is definitely offered on a USER BE CAREFUL basis. You need all the appropriate privileges and you need to carefully review the code offered here before you use it anywhere NEAR to production.","",9476882239101,"","","",26-JUN-24 05.23.30.958642000 AM,"PUBLIC","utl_file",203,"","DKTNLOXLRFEKM6K9QC5XQWR57",14570054,4,,,"","","","","","","","","","","","","","",,"",26-JUN-24 05.23.30.958528000 AM,26-JUL-18 03.50.52.925163000 PM,"","APPROVED",26-JUL-18 03.50.52.914592000 PM,,"Auto Approved","","",1461,""
73929081028509961789753414266244448269,14-JUL-16 07.17.48.199985000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Use External Table Feature to List Files in Directory","USE EXTERNAL TABLE FEATURE TO LIST FILES IN DIRECTORY","The PREPROCESSOR clause of the external table feature lets you do all sorts of amazing things. Here's an example (WARNING: it will NOT execute on LiveSQL!) and lots more information from Tom Kyte at http://www.oracle.com/technetwork/issue-archive/2012/12-nov/o62asktom-1867739.html","",9476882239101,"","","",05-JUN-24 03.04.22.056260000 PM,"PUBLIC","external table",57,"","DKTNLOXLS3J2HMECEIF3M840F",,1,,,"","","","","","","","","","","","","","",,"",28-MAY-24 04.01.05.404676000 AM,14-JUL-16 07.17.48.206674000 PM,"","",,,"","","",188,""
73453953215881677274336758523761433789,10-JUL-16 06.03.48.491465000 AM,"",,"PATRICK.BAREL@GMAIL.COM","DataIntegrity","DATAINTEGRITY","Accompanying script for the DataIntegrity part","",2377703686476,"","","",05-JUL-22 03.09.44.918752000 PM,"PUBLIC","Patch72 presentation",1,"","MOCB562CIVTHLCNZT2MDDDQUK",115376296,1,,,"","","","","","","","","","","","","","",,"",10-JUL-16 06.03.59.794022000 AM,21-NOV-21 09.57.53.470717000 AM,"","APPROVED",21-NOV-21 09.57.53.469993000 AM,,"Auto Approved","","",2,""
73704851672499860074680979657887190503,12-JUL-16 03.36.52.940997000 PM,"",,"BINURAJSNAIR@GMAIL.COM","Automate the errored records using LOG ERRORS feature","AUTOMATE THE ERRORED RECORDS USING LOG ERRORS FEATURE","Oracle provides a powerful mechanism to uncover DML errors from version 10g Release 2 onwards. The LOG ERRORS clause is similar to SAVE EXCEPTIONS in PLSQL bulk operations. This feature can be used to identify the records the problematic records which cause an SQL statements to raise an exception.","",73702893919143733001671474078024337627,"","","",17-JUN-24 05.41.14.092375000 PM,"PUBLIC","LOG ERRORS",22,"","DKGSOAV9QNRZL3ATGKW3T06NC",281269,4,,,"","","","","","","","","","","","","","",,"",18-DEC-23 06.29.21.548137000 PM,12-JUL-16 03.36.53.042193000 PM,"","APPROVED",15-JUN-18 01.34.35.139034000 AM,18-JUN-18 02.34.45.907194000 PM,"sharon.kennedy@oracle.com","","",65,""
75370017311993897353430121692145521368,28-JUL-16 02.21.47.346205000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Examples of Native Dynamic SQL Method 3","EXAMPLES OF NATIVE DYNAMIC SQL METHOD 3","Method 3 Dynamic SQL: a SELECT statement whose select list (number of elements returned by the query) and bind variables are fixed at compile-time. For more information on dynamic SQL in PL/SQL: https://stevenfeuersteinonplsql.blogspot.com/2016/07/a-quick-guide-to-writing-dynamic-sql-in.html","",107525997895239,"","","",03-APR-24 02.43.43.369241000 PM,"PUBLIC","DYNAMIC SQL,METHOD 3",11,"","DM4VD7X39IU0TW6OGRU82HY5Q",306021,4,,,"","","","","","","","","","","","","","",,"",04-FEB-23 08.25.56.134773000 AM,28-JUL-16 02.33.50.101238000 PM,"","",,,"","","",46,""
95966764950235258776843029608665852168,10-FEB-17 06.50.10.890426000 PM,"",,"MANOJSHUKLA.RI@GMAIL.COM","Global Vs Local variable","GLOBAL VS LOCAL VARIABLE","Difference between Global Vs Local variable and their execution order","",95964213337709865237228306082573196858,"","","",03-APR-24 02.50.23.123477000 PM,"PUBLIC","Global Vs Local variable",8,"","EJ5P3389CC7VC01RQM3UMTXNE",1934324,4,,,"","","","","","","","","","","","","","",,"",07-DEC-23 02.09.46.378688000 PM,10-FEB-17 06.50.10.971660000 PM,"","APPROVED",15-JUN-18 01.34.36.268417000 AM,19-JUN-18 04.56.55.971343000 PM,"sharon.kennedy@oracle.com","","",40,""
97220311296880004006582463055270663320,22-FEB-17 07.09.39.324215000 PM,"",,"MARTIN.A.BERGER@GMAIL.COM","Order By nlssort(number,'nls_sort=''punctuation''')","ORDER BY NLSSORT(NUMBER,'NLS_SORT=''PUNCTUATION''')","demo which shows the effect of nlssort ... 'nls_sort=''punctuation' on numeric columns","",97220311295145195455435470189567300760,"","","",04-APR-24 10.48.02.939041000 AM,"PUBLIC","nlssort number",2,"","EL52ZTYR9LQ6YLWBBMMRS1HRE",2191101,333804701807972275005933417866206051852,,,"","","","","","","","","","","","","","",,"",09-JAN-18 12.51.03.396504000 PM,22-FEB-17 07.09.39.358245000 PM,"","APPROVED",15-JUN-18 01.34.36.288351000 AM,19-JUN-18 04.53.48.657778000 PM,"sharon.kennedy@oracle.com","","",19,""
95478218767673633155833928507789581170,06-FEB-17 03.22.06.260469000 AM,"",,"PATRICKJOLLIFFE@LIFUNG.COM","Predicate Pushdown Bug","PREDICATE PUSHDOWN BUG","Demonstration to show Predicate Pushdown seems to stop when adding functional index.","",95478218767574501238625528915463674738,"","","",20-NOV-23 05.37.11.918650000 AM,"PUBLIC","bug",1,"","EJDIWSIK1FVWPXK13KGHBGRUS",1855621,3,,,"","","","","","","","","","","","","","",,"",20-AUG-19 08.26.41.357409000 AM,06-FEB-17 03.22.06.451211000 AM,"","APPROVED",15-JUN-18 01.34.36.325414000 AM,20-JUN-18 04.56.11.782956000 PM,"sharon.kennedy@oracle.com","","",8,""
95840473044462364033215815978136039752,09-FEB-17 01.57.42.958653000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Find Associative Array INDEX BY Type","FIND ASSOCIATIVE ARRAY INDEX BY TYPE","Lukas Eder of jOOQ graciously gave permission to share his very interesting use of dynamic PL/SQL to figure out if the type of an INDEX BY collection is integer or string. Taken from his StackOverflow Q&A: http://stackoverflow.com/questions/42116679/how-to-discover-the-index-type-of-an-oracle-12c-associative-array-from-the-dicti","",112890902418836,"","","",04-APR-24 06.00.47.715602000 AM,"PUBLIC","index by,collection type",6,"","EJYFOFIT8RAOXST7C36ZUPVIY",14569996,4,,,"","","","","","","","","","","","","","",,"",26-JUL-18 03.48.20.984241000 PM,26-JUL-18 03.48.24.495018000 PM,"","APPROVED",26-JUL-18 03.48.24.486611000 PM,,"Auto Approved","","",28,""
98679585331004999991187788723760294096,08-MAR-17 06.34.44.138794000 PM,"",,"SWEETSALONI028@GMAIL.COM","EVEN NUMBERS","EVEN NUMBERS","PRINT EVEN NUMBERS USING FOR LOOP AND IF CONDITION","",98678860591795675905918962956159844077,"","","",16-APR-24 09.44.42.764876000 AM,"PUBLIC","",11,"","EOIBDOW02LQY4TITF1GLC45Q6",2430788,4,,,"","","","","","","","","","","","","","",,"",24-MAY-23 12.05.11.281221000 PM,08-MAR-17 06.34.44.150979000 PM,"","APPROVED",15-JUN-18 01.34.36.340364000 AM,19-JUN-18 03.50.59.203904000 PM,"sharon.kennedy@oracle.com","","",97,""
100911164772563126740894811148983621478,30-MAR-17 03.10.41.664634000 AM,"",,"RICHARD.W.SHAW@TEAM.TELSTRA.COM","Removing duplicates in a parent child connect by path","REMOVING DUPLICATES IN A PARENT CHILD CONNECT BY PATH","Removes duplicates in a parent child connect by path","",100911164772541366076141747823838910310,"","","",14-JUL-24 03.02.56.072048000 PM,"PUBLIC","",5,"","ER24MFK5XY8HSE3EZT07E37V8",2855186,1,,,"","","","","","","","","","","","","","",,"",25-MAY-22 06.56.53.943996000 AM,30-MAR-17 03.10.41.784755000 AM,"","APPROVED",15-JUN-18 01.34.36.345474000 AM,19-JUN-18 03.51.48.469641000 PM,"sharon.kennedy@oracle.com","","",48,""
103181532564503555107962508531148170060,20-APR-17 09.01.47.297403000 PM,"",,"ANDY@ORACLEDEPOT.COM","tx_contention_index_coalesce_cleanup","TX_CONTENTION_INDEX_COALESCE_CLEANUP","This test case attempts to reproduce enq: TX - row lock contention from an INSERT while trying to COALESCE CLEANUP a global index. I failed.","",103181532564304082347726094717321651020,"","","",05-JUN-23 09.06.59.296952000 PM,"PUBLIC","index coalesce cleanup",1,"","EVP6GU5Y8YK244ML34LTBR1X6",3255920,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",15-AUG-20 06.26.02.220470000 AM,20-APR-17 09.01.47.473406000 PM,"","APPROVED",15-JUN-18 01.34.36.355216000 AM,15-JUN-18 04.53.33.600940000 PM,"sharon.kennedy@oracle.com","","",13,""
96481436115691467480246391257762034523,15-FEB-17 05.10.42.672096000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","12.2: Enhanced ACCESSIBLE BY Options","12.2: ENHANCED ACCESSIBLE BY OPTIONS","The ACCESSIBLE BY clause restricts access to units and subprograms by other units. The accessor list, also known as the white list, explicitly lists those units which may have access. In 12.2, this feature was enhanced to be applied to subprograms in packages. You can also specify the type or ""unit kind"" to which the whitelist applies. This is useful when you have triggers and PL/SQL program units of the same name. Doc: http://docs.oracle.com/database/122/LNPLS/ACCESSIBLE-BY-clause.htm","",7010631610713,"","","",03-APR-24 02.23.08.598590000 PM,"PUBLIC","whitelist,accessible by",19,"","EKZGS5FMFZ6FHTSASDPYW77H0",2002468,6,,,"","","","","","","","","","","","","","",,"",11-OCT-23 06.57.13.137311000 AM,16-JUN-20 07.45.25.110316000 PM,"","APPROVED",16-JUN-20 07.45.25.109757000 PM,,"Auto Approved","","",40,""
96333131535433725155135782685927724272,14-FEB-17 07.32.03.343134000 AM,"",,"SHETCHLER@TRISTATEGT.ORG","I am a number less than 3000","I AM A NUMBER LESS THAN 3000","This is the overkill brute force way to solve the problem:
""I am a number less than 3000. When you divide me by 32, my remainder is 30. When you divide me by 58, my remainder is 44. What number am I?""","",96330352891759860852846032133162664408,"","","",19-APR-22 08.41.45.770733000 AM,"PUBLIC","",4,"","EKQVFD4BYSU2D77QRXNEU05KY",1978282,62122359562009447255714070369388904843,,,"","","","","","","","","","","","","","",,"",20-APR-17 03.07.50.825737000 PM,14-FEB-17 07.32.03.529025000 AM,"","APPROVED",15-JUN-18 01.34.36.383625000 AM,19-JUN-18 03.50.45.728556000 PM,"sharon.kennedy@oracle.com","","",14,""
97789707356457817569907994692025993341,28-FEB-17 05.41.36.023750000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","partitioning_basic_range_table","PARTITIONING_BASIC_RANGE_TABLE","SQL from the KISS (Keep It Simply SQL) Partitioning video series by Developer Advocate Connor McDonald. 
This script demonstrates a basic range partitioned table.
","",97789707356439683682613775254405400701,"","","",14-JUL-24 02.56.50.809313000 PM,"PUBLIC","kiss, partitioning, developer advocates, range",28,"","EM2X7EIHVCHVB0USQ1600XHXR",2275512,8,,,"","","","","","","","","","","","","","",,"",06-JUL-24 06.25.34.934481000 PM,28-FEB-17 05.41.36.075837000 AM,"","",,,"","","",54,""
97808599955666314598554741397986625787,28-FEB-17 10.03.31.180472000 AM,"",,"YARAGALARAMESH02@GMAIL.COM","Amazon_Interview_Qestions","AMAZON_INTERVIEW_QESTIONS","we have two teams team a and team b and the winner. based on that find out the no of matches palyed ,won,lost","",97802131563756760918886393578059880937,"","","",04-APR-24 11.37.14.397148000 AM,"PUBLIC","Amazon_interview",34,"","EM31GP58OG2PO2D34TOE175T5",2281567,3,,,"","","","","","","","","","","","","","",,"",26-NOV-22 01.11.36.936157000 PM,28-FEB-17 10.15.42.270480000 AM,"","APPROVED",15-JUN-18 01.34.36.392416000 AM,20-JUN-18 03.56.20.994314000 PM,"sharon.kennedy@oracle.com","","",107,""
101731653676816255094645415686108237849,07-APR-17 01.12.20.800691000 AM,"",,"EDSONEGI@GMAIL.COM","CALCULADORA","CALCULADORA","CALCULADORA PL SQL","",101731653676541828933592894863449935897,"","","",19-AUG-24 01.36.46.586002000 PM,"PUBLIC","CALCULADORA",64,"","ETEHLT973706YRD1SKH32DCW7",3015871,4,,,"","","","","","","","","","","","","","",,"",17-AUG-24 12.26.39.758198000 AM,07-APR-17 01.12.20.850968000 AM,"","APPROVED",15-JUN-18 01.34.36.405733000 AM,19-JUN-18 05.01.26.079565000 PM,"sharon.kennedy@oracle.com","","",287,""
95425895852345362597261456902466494404,05-FEB-17 03.21.38.199307000 PM,"",,"JEFFREY.KEMP@JK64.COM","uuid_pkg","UUID_PKG","associate a tuple with a unique identifier - proof of concept","",95424212173454483372539672653717969047,"","","",28-MAR-24 03.07.36.200610000 AM,"PUBLIC","",9,"","EJAQCNF5DHGFWV8DFZ5UATRC6",1851067,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",27-APR-20 05.47.42.456325000 AM,05-FEB-17 03.41.02.287965000 PM,"","APPROVED",15-JUN-18 01.34.36.410106000 AM,19-JUN-18 05.38.36.425048000 PM,"sharon.kennedy@oracle.com","","",19,""
102237861714550325021550060431569731797,11-APR-17 08.08.45.939582000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Identically Defined Package and Local Collection Types","IDENTICALLY DEFINED PACKAGE AND LOCAL COLLECTION TYPES","The package specification and the anonymous block define the collection type NumList identically. ","",102232122923765092992308257796523720761,"","","",20-AUG-24 06.05.16.718690000 PM,"PUBLIC","PL/SQL  PLS-00306",13,"","ET7DK3034U69X6PYCXPQD7JKB",3098226,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"tdlnplscomposites40err",20-AUG-24 05.54.46.925139000 PM,11-APR-17 08.08.45.969570000 PM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-7C84EBD2-D0A5-4126-8EB7-FF9243EE5B47__CHDIHDIJ","",,,"","","",32,""
102254466384937016738030064795327819877,11-APR-17 11.37.58.388847000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Identically Defined Package and Local RECORD Types","IDENTICALLY DEFINED PACKAGE AND LOCAL RECORD TYPES"," the package pkg and the anonymous block define the RECORD type rec_type identically. The package defines a procedure, print_rec_type, which has a rec_type parameter. The anonymous block declares the variable r1 of the package type (pkg.rec_type) and the variable r2 of the local type (rec_type). ","",102252417501055918722861209639210073536,"","","",27-JUN-24 07.40.49.250145000 PM,"PUBLIC","LNPLS PLS-00306",9,"","ET8O682UJHR7BSOP20I73X5J8",3101303,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"tdlnplscomposites75err",03-APR-24 09.51.53.528869000 AM,11-APR-17 11.37.58.421433000 PM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-7DC81088-1265-4C46-A04D-E3AD10BCC04F__CIHFBIAF","",,,"","","",23,""
102254466385807443328152597801116266597,12-APR-17 12.29.22.212435000 AM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","%ROWTYPE Variable Represents Partial Database Table Row","%ROWTYPE VARIABLE REPRESENTS PARTIAL DATABASE TABLE ROW","This defines an explicit cursor whose query selects only the columns first_name, last_name, and phone_number from the employees table in the sample schema HR. Then the example declares a record variable that has a field for each column that the cursor selects. The variable represents a partial row of employees.","",102254466385773593405203388184224493669,"","","",06-AUG-24 12.04.20.900303000 AM,"PUBLIC","LNPLS",21,"","ET8O682VOCSEZ55WHIFRZL5C4",3101817,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"tdlnplscomposites81",06-AUG-24 12.04.20.900178000 AM,12-APR-17 12.29.22.232398000 AM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-064DACC4-4F40-43CA-9518-09F0BE5923EB__CBJCGDHB","",,,"","","",96,""
102918305269331596827618622924344925938,18-APR-17 08.50.23.915164000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","partitioning_hash_partitioned_table","PARTITIONING_HASH_PARTITIONED_TABLE","SQL from the KISS (Keep It Simply SQL) Partitioning video series by Developer Advocate Connor McDonald. This script demonstrates a basic hash partitioned table.","",102919430580283142547768119727869313524,"","","",21-JUL-24 09.26.19.092846000 AM,"PUBLIC"," kiss, partitioning, developer advocates, hash",2,"","EVAZG9P72NAL7ITJ7UU5V6BGK",3196173,8,,,"","","","","","","","","","","","","","",,"",31-AUG-22 12.55.44.247540000 AM,18-APR-17 08.50.23.994478000 AM,"","",,,"","","",26,""
97155557392627064959375036094865921310,22-FEB-17 04.09.31.227957000 AM,"",,"SCOTT.WESLEY@SAGECOMPUTING.COM.AU","recent status change q for asktom","RECENT STATUS CHANGE Q FOR ASKTOM","is subquery the best way? can it be done with analytics?","",100540659680582,"","","",04-APR-24 06.38.39.416139000 AM,"PUBLIC","",4,"","EL2E2VDHQJ4ZXQF7N2TNYOYWV",2149487,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",26-FEB-17 06.18.22.971627000 AM,22-FEB-17 04.14.36.619364000 AM,"","APPROVED",15-JUN-18 01.34.36.436107000 AM,20-JUN-18 06.01.45.813623000 PM,"sharon.kennedy@oracle.com","","",13,""
102439044547730997142952710411016375213,13-APR-17 06.26.22.094530000 PM,"",,"PLSQL@IMPLESTRAT.COM","JSON_TEXTCONTAINS vs JSON_EXISTS","JSON_TEXTCONTAINS VS JSON_EXISTS","A comparison of JSON_TEXTCONTAINS and JSON_EXISTS for searching JSON data in the Oracle Database.","",102434183072842786927869357806693520698,"","","",08-AUG-24 09.16.19.888232000 AM,"PUBLIC","JSON JSON_TEXTCONTAINS JSON_EXISTS",32,"","EVCTHL62S1Q0YMQLW5M07K51Z",3132844,13,,,"","","","","","","","","","","","","","",,"",20-MAR-24 09.06.59.048220000 AM,13-APR-17 06.26.22.115570000 PM,"","APPROVED",15-JUN-18 01.34.36.439911000 AM,20-JUN-18 06.03.20.993933000 PM,"sharon.kennedy@oracle.com","","",59,""
105007286600778521231145576010575701365,08-MAY-17 09.06.30.738835000 AM,"",,"ROGEL@WEB.DE","PL/SQL implementation restriction with in-operator","PL/SQL IMPLEMENTATION RESTRICTION WITH IN-OPERATOR","Illustration of PLS-00999: implementation restriction (may be temporary) IN operator does not yet support aggregates on the left-hand side","",105007286600323965122970475440886179189,"","","",04-APR-24 06.21.17.052308000 AM,"PUBLIC","",2,"","EYNKEHE8149X5VQMP7MIIUZNR",3599064,4,,,"","","","","","","","","","","","","","",,"",16-SEP-20 03.42.44.962811000 PM,08-MAY-17 09.10.10.503235000 AM,"","APPROVED",15-JUN-18 01.34.37.018970000 AM,18-JUN-18 05.55.19.482716000 PM,"sharon.kennedy@oracle.com","","",19,""
105344568256280563077953815474520876892,11-MAY-17 01.43.47.119775000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Mastermind Solver by Niels Hecker","MASTERMIND SOLVER BY NIELS HECKER","Niels created this script to verify a particular combination of digits as a solution the weekly PL/SQL Challenge logic quiz (modeled after the classic Mastermind game).","",105343127442151242224359698776732598872,"","","",04-APR-24 06.15.07.521865000 AM,"PUBLIC","",3,"","EY609YNTG2X0S7V6FHC4AGB8E",3672593,4,,,"","","","","","","","","","","","","","",,"",30-AUG-20 06.42.31.996985000 AM,11-MAY-17 01.43.47.141331000 PM,"","",,,"","","",7,""
106751077122751588196742750110411827520,25-MAY-17 12.43.29.951638000 AM,"",,"MARK.STEWART@HPE.COM","Regexp function","REGEXP FUNCTION","Replace one or more invalid characters in a numeric (non-United States) social security ID","",106743562997050923469929568705807269690,"","","",19-OCT-22 06.21.50.089253000 PM,"PUBLIC","Regexp",4,"","E1F70JQKIQE9KU8XKW0MN54SY",3952635,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",19-OCT-22 06.21.21.536538000 PM,25-MAY-17 12.49.52.358454000 AM,"","APPROVED",15-JUN-18 01.34.37.056070000 AM,19-JUN-18 03.57.15.665511000 PM,"sharon.kennedy@oracle.com","","",47,""
106185821557786267709576313120389509387,19-MAY-17 03.34.16.067480000 PM,"",,"DON.SIMPSON@GOLDBLATTSYSTEMS.COM","named_not_null_constraint","NAMED_NOT_NULL_CONSTRAINT","How can I name a ""not null"" constraint that sets the NULLABLE flag in DBA/USER_TAB_COLUMNS?","",106185821557569869987865294498117103883,"","","",29-APR-24 04.23.18.902327000 PM,"PUBLIC","",6,"","E0JLEPYFVZ76A7NZ9CYDVFAFX",3831027,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",08-NOV-21 12.23.05.663955000 AM,19-MAY-17 03.34.16.119306000 PM,"","APPROVED",15-JUN-18 01.34.37.072048000 AM,15-JUN-18 04.00.14.046070000 PM,"sharon.kennedy@oracle.com","","",43,""
107620445536424365657638522128815532591,02-JUN-17 08.29.49.314139000 AM,"",,"ALEX1ST@NAROD.RU","Join on like","JOIN ON LIKE","Join on like - slow...","",107619360369390499074872240555214638905,"","","",06-DEC-23 12.43.05.032122000 AM,"PUBLIC","Join on like",6,"","E2UEKJUB3ISA2DDKYBPOA4HXD",4108531,3,,,"","","","","","","","","","","","","","",,"",13-MAY-20 08.44.26.013335000 AM,02-JUN-17 08.29.50.241975000 AM,"","APPROVED",15-JUN-18 01.34.37.080791000 AM,19-JUN-18 04.55.42.668683000 PM,"sharon.kennedy@oracle.com","","",40,""
106007660185682864393506451952163807975,17-MAY-17 10.27.17.524944000 PM,"",,"MICHAELSUAUSTRALIA@HOTMAIL.COM","Create Table-Exercise","CREATE TABLE-EXERCISE","Step1:Create AUTOPARTS table;
Step2:Insert Values;
Step3:View the AUTOPARTS table;
Step4:Change Pirce from 18 to 81 and View the AUTOPARTS table again;
Step5:Only Keep OE# start with '62150';
Step6:Create PARTSINFO table and give values;
Step7:Combine Two Tables by mathcing ID and create a newtable called ""Newtable"";
Step8:View the Newtable, order by Price from Low to high.","",106007712480224521381413823486953670494,"","","",08-AUG-24 06.50.09.232472000 AM,"PUBLIC","",406,"","EZ9A6RJ4Y6NNEYXD57R5CRR6X",3793216,1,,,"","","","","","","","","","","","","","",,"",04-AUG-24 09.35.17.720515000 PM,17-MAY-17 10.27.17.730091000 PM,"","APPROVED",15-JUN-18 01.34.37.100257000 AM,20-JUN-18 02.37.32.482899000 PM,"sharon.kennedy@oracle.com","","",1498,""
105270077401694462285854089202104962545,10-MAY-17 08.46.19.996550000 PM,"",,"A-L_L_4_E@HOTMAIL.COM","Partición por HASH simple.","PARTICIÓN POR HASH SIMPLE.","Aquí puedes ver un ejemplo sencillo de partición HASH, donde se muestra también una manera de visualizar fácilmente los datos de las particiones de la tabla creada.","",105260730007328892984458979088764932016,"","","",21-JUL-24 09.29.23.257760000 AM,"PUBLIC","Simple HASH partitioning partition ",2,"","EY2QHFB6TKA5MN5OV02SCDTHF",3656661,8,,,"","","","","","","","","","","","","","",,"",21-SEP-20 04.13.21.685764000 PM,10-MAY-17 08.46.20.154332000 PM,"","APPROVED",15-JUN-18 01.34.37.107049000 AM,19-JUN-18 05.33.42.744859000 PM,"sharon.kennedy@oracle.com","","",22,""
105270077403795575360344314707744296433,10-MAY-17 09.44.28.196329000 PM,"",,"A-L_L_4_E@HOTMAIL.COM","Partición por LISTA simple","PARTICIÓN POR LISTA SIMPLE","Aquí puedes visualizar el particionado simple por el método de lista a una tabla.","",105260730007328892984458979088764932016,"","","",08-AUG-24 06.41.29.385783000 PM,"PUBLIC","LIST PARTITION",3,"","EY2QHFCD5KFG71REU7OOAL54J",3657067,8,,,"","","","","","","","","","","","","","",,"",14-MAR-23 08.05.18.862747000 PM,10-MAY-17 09.44.28.213155000 PM,"","APPROVED",15-JUN-18 01.34.37.110427000 AM,19-JUN-18 04.53.24.449974000 PM,"sharon.kennedy@oracle.com","","",10,""
106506013765132414682245181692986402982,22-MAY-17 04.36.32.696977000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Simple Delimited String Parsing Package","SIMPLE DELIMITED STRING PARSING PACKAGE","On request from a developer, I have stripped down other parsing packages I've written to just the basics. Hope you find this helpful.","",1894487437778,"","","",04-APR-24 06.21.07.968663000 AM,"PUBLIC","parse,delimited",2,"","E012ITSV0XTNMOZDWKLX53ZZQ",3885086,4,,,"","","","","","","","","","","","","","",,"",22-MAY-17 04.37.38.625766000 PM,22-MAY-17 04.38.17.197110000 PM,"","",,,"","","",9,""
105344568255261438612018683080243570524,11-MAY-17 01.39.12.479502000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Mastermind Solver by James Su","MASTERMIND SOLVER BY JAMES SU","James put together this SQL query to solve Mastermind-like puzzles offered on the PL/SQL Challenge (plsqlchallenge.oracle.com)","",105343127442151242224359698776732598872,"","","",10-AUG-24 05.41.40.679058000 PM,"PUBLIC","",2,"","EY609YNPW02A0G6K0YP65YTPQ",3672339,1,,,"","","","","","","","","","","","","","",,"",03-NOV-21 07.19.44.263234000 PM,11-MAY-17 01.39.12.527609000 PM,"","",,,"","","",12,""
105344568255494761295204306510961862492,11-MAY-17 01.40.57.949920000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Mastermind Solver by Kim Berg Hansen","MASTERMIND SOLVER BY KIM BERG HANSEN","Kim Berg Hansen, author of many SQL quizzes and all-around SQL guru, couldn't resist the challenge of provided a SQL-only Mastermind solution generator, after two PL/SQL scripts were made available.","",105343127442151242224359698776732598872,"","","",16-AUG-24 07.21.18.017583000 AM,"PUBLIC","",1,"","EY609YNQQCGWUJMISMOI0PS56",3672426,1,,,"","","","","","","","","","","","","","",,"",11-MAR-20 05.13.15.384006000 PM,11-MAY-17 01.40.58.028748000 PM,"","",,,"","","",16,""
105344568255506850553400452802708924252,11-MAY-17 01.41.03.449429000 PM,"",,"JEEVSAN9@GMAIL.COM","case when","CASE WHEN","Its an exaple for update using case when statement","",105343127441603598828074271760590701144,"","","",30-MAY-24 01.28.36.859193000 AM,"PUBLIC","case when then",34,"","EY609YNQRU5JL7TBEKXRNKOHA",3672430,1,,,"","","","","","","","","","","","","","",,"",07-MAR-23 11.46.32.777240000 AM,11-MAY-17 01.41.03.536297000 PM,"","APPROVED",15-JUN-18 01.34.37.133317000 AM,20-JUN-18 01.55.43.862008000 PM,"sharon.kennedy@oracle.com","","",168,""
105344568255805455230845266208861349724,11-MAY-17 01.42.32.496928000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Mastermind Solver by Hamid Talebian","MASTERMIND SOLVER BY HAMID TALEBIAN","Hamid created this script to verify a particular combination of digits as a solution the weekly PL/SQL Challenge logic quiz (modeled after the classic Mastermind game).","",105343127442151242224359698776732598872,"","","",18-MAY-24 10.55.24.888316000 PM,"PUBLIC","",,"","EY609YNRTDURLPOCGR9ZQJYLQ",3672497,4,,,"","","","","","","","","","","","","","",,"",,11-MAY-17 01.42.32.514388000 PM,"","",,,"","","",16,""
113467610430704006371598016253258269272,28-JUL-17 08.24.58.042967000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Bitmap vs. B-tree Index Comparison","BITMAP VS. B-TREE INDEX COMPARISON","A comparison between single column B-tree vs. bitmap indexes. ","",113463174097953735012817699423654663625,"","","",24-JUL-24 03.55.02.940777000 PM,"PUBLIC","index, bitmap",207,"","FEFK6P3OD2RODUAI175E2UI46",5344295,1,,,"","","","","","","","","","","","","","",,"",24-JUL-24 03.55.02.940641000 PM,04-AUG-17 09.20.53.273893000 AM,"","",,,"","","",479,""
118620779673635335182260102955566523318,15-SEP-17 04.32.08.104984000 PM,"",,"RBEERS@BLACKHAWKENTERPRISE.COM","JSON 4000 limit","JSON 4000 LIMIT","Fails with ORA-40459: output value too large","",118617217349946108413164946949659078172,"","","",04-APR-24 11.27.26.183883000 AM,"PUBLIC","",56,"","FKHDC720WA8GK4RQ62D9OEGQW",6232494,13,,,"","","","","","","","","","","","","","",,"",03-JAN-24 06.46.53.371739000 AM,15-SEP-17 04.32.08.115576000 PM,"","APPROVED",15-JUN-18 01.34.37.841059000 AM,19-JUN-18 04.03.46.895076000 PM,"sharon.kennedy@oracle.com","","",94,""
119786545387909724494870628399483349861,26-SEP-17 08.57.00.103328000 PM,"",,"DRIBEIRO@UTE.COM.UY","FORALL","FORALL","FORALL transfers data from a PL/SQL collection to the specified table using collections.","",119779381684425677545189198903131120431,"","","",24-JUL-24 05.13.06.672869000 PM,"PUBLIC","FORALL",27,"","FMCVZ01NVVG3BAUHPMXSFN64T",6543840,4,,,"","","","","","","","","","","","","","",,"",14-OCT-23 08.25.12.789670000 PM,27-SEP-17 08.23.34.824818000 PM,"","APPROVED",15-JUN-18 01.34.37.880512000 AM,19-JUN-18 07.00.56.415444000 PM,"sharon.kennedy@oracle.com","","",95,""
120497077558762903970465556038968575860,03-OCT-17 03.44.03.554830000 PM,"",,"MARK.STA-ANA@MHCB.CO.UK","Parsing JSON from a variable","PARSING JSON FROM A VARIABLE","Parsing JSON from a variable","",120497077558182619577050534035109611380,"","","",23-MAR-23 10.52.44.763347000 PM,"PUBLIC","parse, json,plsql",8,"","FNLLQB4SJURGLO3Y6Q87UJME8",6695184,13,,,"","","","","","","","","","","","","","",,"",13-JUN-22 09.57.57.017652000 AM,04-OCT-17 07.42.19.387781000 AM,"","APPROVED",15-JUN-18 01.34.37.988309000 AM,19-JUN-18 04.04.08.528108000 PM,"sharon.kennedy@oracle.com","","",18,""
122153440566606234112185786696469203970,19-OCT-17 11.57.12.415506000 AM,"",,"KRISDBE@GMAIL.COM","MAX() KEEP (DENSE_RANK LAST ORDER BY ) OVER() PARTITION BY()","MAX() KEEP (DENSE_RANK LAST ORDER BY ) OVER() PARTITION BY()","MAX() KEEP (DENSE_RANK LAST ORDER BY DESC NULLS LAST) OVER() PARTITION BY() ""Highest Value""","",122146238180333340601021453972397544505,"","","",07-AUG-24 05.56.17.471052000 AM,"PUBLIC","",235,"","FP499O87HE4E53XDLRJGKNE6C",7112986,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",18-JUL-24 07.55.32.978245000 AM,19-OCT-17 11.57.12.539511000 AM,"","APPROVED",15-JUN-18 01.34.38.172195000 AM,20-JUN-18 01.52.07.089019000 PM,"sharon.kennedy@oracle.com","","",730,""
123427121541950273949582026759247372244,31-OCT-17 04.27.16.919388000 PM,"",,"DURGAPALNEERAJ@GMAIL.COM","plsql - count rows in cursor","PLSQL - COUNT ROWS IN CURSOR","plsql - count rows in cursor","",123391773031370538677314024727097517185,"","","",07-AUG-24 05.42.13.384470000 PM,"PUBLIC","",36,"","FR6SZNI742QC7042HAFWJJ66U",7482466,1,,,"","","","","","","","","","","","","","",,"",07-AUG-24 05.42.13.384331000 PM,31-OCT-17 04.27.17.037716000 PM,"","APPROVED",15-JUN-18 01.34.38.198104000 AM,19-JUN-18 04.25.30.893005000 PM,"sharon.kennedy@oracle.com","","",123,""
130140159764002302856172551879550187134,03-JAN-18 11.07.32.815029000 PM,"",,"RICHARD.SMITH@IT.ABEL.CO.UK","Risk battle army loss count","RISK BATTLE ARMY LOSS COUNT","In the game ""Risk"" a battle consists of three attacking armies (three red dice) taking on two defending armies (two blue dice). This query counts the number of ways in which the attacking army and defending army can remove zero, one or two of their opponents armies from the game as the result of a battle.","",130140159763980542191419488554405475966,"","","",25-DEC-22 06.28.03.205510000 AM,"PUBLIC","Risk ""Factored sub-query""",1,"","F2YAQUZZIJK5KJRVFE9TOLLAO",9174691,3,,,"","","","","","","","","","","","","","",,"",03-JAN-18 11.09.13.770699000 PM,03-JAN-18 11.07.32.828477000 PM,"","APPROVED",15-JUN-18 01.34.39.236235000 AM,19-JUN-18 05.02.43.195507000 PM,"sharon.kennedy@oracle.com","","",8,""
130731359937559011626861347588968967666,09-JAN-18 02.47.35.629427000 PM,"",,"TYSON.JOUGLET@GMAIL.COM","Dense Ranking Example","DENSE RANKING EXAMPLE","Illustrates how to use dense_rank to prioritize certain column values.","",130728316254083997450098413189496202325,"","","",08-AUG-24 12.14.52.330061000 AM,"PUBLIC","",15,"","F3WE9J7GKC8RE4R731ZR5BA7O",9296327,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",06-JUL-23 12.44.07.212801000 AM,02-NOV-18 03.42.46.530630000 PM,"","APPROVED",15-JUN-18 01.34.39.239894000 AM,20-JUN-18 06.00.42.845068000 PM,"sharon.kennedy@oracle.com","","",98,""
130731359942843226384396891711609662962,09-JAN-18 04.39.22.660771000 PM,"",,"JUERGEN.RAUSCH@X-MAP.DE","Prepare tables with trigger and FK constraint","PREPARE TABLES WITH TRIGGER AND FK CONSTRAINT","Preparation parent child tables with BR trigger","",130720623183968231051921832903640256880,"","","",16-MAY-24 08.07.50.058991000 PM,"PUBLIC","",18,"","F3WE9J7Y0BP0EIVSM26IVIUMC",9299268,1,,,"","","","","","","","","","","","","","",,"",19-JAN-23 05.03.48.765768000 AM,09-JAN-18 05.10.51.964611000 PM,"","APPROVED",15-JUN-18 01.34.39.243784000 AM,20-JUN-18 03.53.54.213592000 PM,"sharon.kennedy@oracle.com","","",130,""
129377500553038629919128749096229855546,27-DEC-17 04.17.11.668477000 PM,"",,"CBTPRO@163.COM","查询符合条件的菜单下的所有子菜单","查询符合条件的菜单下的所有子菜单","查询符合条件的菜单下的所有子菜单","",129375672082345601691759470116868900939,"","","",22-AUG-24 09.36.10.890254000 AM,"PUBLIC","",1,"","F1P9XLGADAFB8DLK3ED6H7PAK",9103098,3,,,"","","","","","","","","","","","","","",,"",20-MAR-18 07.17.27.940785000 PM,27-DEC-17 04.17.11.855155000 PM,"","APPROVED",15-JUN-18 01.34.39.258070000 AM,18-JUN-18 08.37.23.236266000 PM,"sharon.kennedy@oracle.com","","",30,""
130430587350163278190541063115594403108,06-JAN-18 05.45.03.650151000 PM,"",,"SANDEEPPATHAK145@GMAIL.COM","Alter emp_mgmt","ALTER EMP_MGMT","Native dynamic sql to compile PL/SQL code","",130428946465706818364042305615226870232,"","","",04-APR-24 06.25.40.764968000 AM,"PUBLIC","Native dynamic sql",2,"","F3E189JH63CHU8PG3QPSEM0R6",9214555,6,,,"","","","","","","","","","","","","","",,"",22-AUG-18 10.40.24.245316000 AM,06-JAN-18 05.45.03.822815000 PM,"","APPROVED",15-JUN-18 01.34.39.291530000 AM,18-JUN-18 02.42.22.894952000 PM,"sharon.kennedy@oracle.com","","",25,""
130612001756299901389842162266600515200,08-JAN-18 12.09.05.467891000 PM,"",,"ROGEL@WEB.DE","1.5-valued-logic","1.5-VALUED-LOGIC","see also https://asktom.oracle.com/pls/asktom/f?p=100:11:0::::P11_QUESTION_ID:3181424400346795479","",130612001756129442849276499552966944384,"","","",04-JUL-24 10.53.41.588168000 AM,"PUBLIC","",4,"","F3PI8KON0DL8A0UU5SDM85QMQ",9250924,1,,,"","","","","","","","","","","","","","",,"",23-AUG-18 12.35.54.461902000 AM,08-JAN-18 12.09.05.469976000 PM,"","APPROVED",15-JUN-18 01.34.39.353457000 AM,15-JUN-18 04.59.50.712108000 PM,"sharon.kennedy@oracle.com","","",10,""
130361893987985051242591736409612780853,06-JAN-18 06.05.24.407790000 AM,"",,"LYRICINFO333@GMAIL.COM","variable","VARIABLE","PL/SQL simple variable initilizing example","",130376619661261053903404294219888254579,"","","",04-APR-24 06.25.46.469677000 AM,"PUBLIC","",1,"","F3A3IFF1QKYQ9PFWKM81CPIG3",9207884,4,,,"","","","","","","","","","","","","","",,"",24-AUG-18 11.37.35.428692000 AM,06-JAN-18 06.05.24.574829000 AM,"","APPROVED",15-JUN-18 01.34.39.382578000 AM,19-JUN-18 04.01.34.227358000 PM,"sharon.kennedy@oracle.com","","",5,""
130653591087322833758013955073592978487,08-JAN-18 09.11.02.246372000 PM,"",,"MIKEKEMP541145@GMAIL.COM","Dynamically Discover Ref Cursor Attributes, DBMS_SQL","DYNAMICALLY DISCOVER REF CURSOR ATTRIBUTES, DBMS_SQL","This script:

..... 1) Creates a Procedure ""P1"" that returns a Ref Cursor as an Out Parameter (ROUTINE #01). The routine succeeds.
..... 2) A Routine that consumes the Ref Cursor returned by Procedure ""P1"" and prints the column values using hard-coded column names (ROUTINE #02). The routine succeeds.
..... 3) A Routine that dynamically discovers DBMS_SQL cursor attributes (column names and column values) using the DBMS_SQL package (ROUTINE #03). The routine succeeds.
..... 4) A Routine identical to ROUTINE #03, except that is uses the ""BIND_VARIABLE"" method in the ""DBMS_SQL"" package. The routine succeeds.
..... 5) A routine identical to ROUTINE #04, except that it attempts to consume the Ref Cursor from Procedure ""P1"" noted in ""1)"" above.","",130653591084637809512649863676570561591,"","","",25-JUL-24 04.14.26.887421000 PM,"PUBLIC","Ref Cursor, DBMS_SQL, Dynamic Cursor Attribute Discovery",17,"","F3RXNSWWJBJCS5ABHLKV00L2X",9260068,4,,,"","","","","","","","","","","","","","",,"",18-JUL-24 07.46.40.357876000 AM,08-JAN-18 09.11.02.316158000 PM,"","APPROVED",15-JUN-18 01.34.39.390094000 AM,20-JUN-18 05.06.51.276938000 PM,"sharon.kennedy@oracle.com","","",199,""
130457519430951910308647602915384126880,06-JAN-18 11.49.43.690371000 PM,"",,"TOODENYS@GMAIL.COM","add sequence number in each group element","ADD SEQUENCE NUMBER IN EACH GROUP ELEMENT","sequnce number each element group","",130444123691008656432874386424223931330,"","","",19-APR-24 07.12.40.184506000 AM,"PUBLIC","",8,"","F3GL70BU1PXN5WGZBSYGMLKQA",9217615,62122359562009447255714070369388904843,,,"","","","","","","","","","","","","","",,"",04-JUL-21 01.47.41.435021000 AM,06-JAN-18 11.49.43.743023000 PM,"","APPROVED",15-JUN-18 01.34.39.414871000 AM,20-JUN-18 05.02.48.733618000 PM,"sharon.kennedy@oracle.com","","",53,""
132902224067606411199156482097705310319,30-JAN-18 09.40.58.217593000 AM,"",,"MAARCSAB@GMAIL.COM","production of numbers","PRODUCTION OF NUMBERS","production of numbers. how to multiply numbers without a ""multiply"" aggregation function. Let's that logarithm is isomorph.","",132898551006424738660955813995212338829,"","","",23-APR-24 06.57.26.205386000 AM,"PUBLIC","",,"","F7DQCAGXA21ZB13JD0OSZT86P",9705320,1,,,"","","","","","","","","","","","","","",,"",,14-JAN-20 09.31.26.415065000 AM,"","APPROVED",15-JUN-18 01.34.39.572698000 AM,19-JUN-18 05.33.08.385165000 PM,"sharon.kennedy@oracle.com","","",31,""
132236684763605899404478471202233038552,24-JAN-18 03.11.18.267533000 AM,"",,"WENQI.MA@COGNIZANT.COM","Oracle Database 11g SQL","ORACLE DATABASE 11G SQL","Oracle Database 11g SQL Scripts
Includes table customers,product_types,products,purchases,employees and salary_grades","",132236684759342018038697674103044355800,"","","",21-AUG-24 08.24.38.056898000 AM,"PUBLIC","",832,"","F6BBCEJPWKYDGC5EQDD6SBMNE",9613152,893254896586036118486907198353590179,,,"","","","","","","","","","","","","","",,"",21-AUG-24 08.24.38.056789000 AM,24-JAN-18 03.11.18.285228000 AM,"","APPROVED",15-JUN-18 01.34.39.594898000 AM,18-JUN-18 04.42.29.706527000 PM,"sharon.kennedy@oracle.com","","",3004,""
133122424394985641873384914467016041509,01-FEB-18 12.51.23.287538000 PM,"",,"NAVIN9835@GMAIL.COM","PL/SQL If Statement","PL/SQL IF STATEMENT","PL/SQL If Statement","",133122424394891345659454973391388959781,"","","",27-JUN-24 01.22.59.649801000 PM,"PUBLIC","",37,"","F7QFW3Y88B2U1FLGWR7S8DBQV",9759707,4,,,"","","","","","","","","","","","","","",,"",26-MAR-24 09.50.10.551343000 AM,01-FEB-18 12.51.23.295857000 PM,"","APPROVED",15-JUN-18 01.34.39.627661000 AM,19-JUN-18 04.47.38.563753000 PM,"sharon.kennedy@oracle.com","","",145,""
134721807571371829685031893750839430730,16-FEB-18 08.23.04.381851000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Working with JSON Arrays in PL/SQL 12.2 (JSON_ARRAY_T)","WORKING WITH JSON ARRAYS IN PL/SQL 12.2 (JSON_ARRAY_T)","In Oracle Database 12c Release 2, we added a set of object types to make easy for you to manipulate in-memory representations of JSON documents. You can then put them into database tables or pass them out to, say, JavaScript programs that thrive on JSON. In this script, I show how to use methods in the JSON_ARRAY_T type to work with JSON arrays (lists that are enclosed in [ ]). Remember: array indexes in JSON start at 0, not 1!","",5874104642995,"","","",24-JUL-24 05.43.46.704600000 AM,"PUBLIC","12.2,json,array",12,"","GAARGAVU9GNC72I1APBZI0WC8",10066180,4,,,"","","","","","","","","","","","","","",,"",23-MAR-24 03.02.30.134646000 PM,16-FEB-18 08.26.30.348308000 PM,"","",,,"","","",62,""
134520564095516802159632957022206046825,14-FEB-18 09.47.40.265415000 PM,"",,"MARK.DRAKE@ORACLE.COM","JSON Generation Enhancements in Oracle Database 18c","JSON GENERATION ENHANCEMENTS IN ORACLE DATABASE 18C","This script showcases the enhancements that have been to the JSON Generation  operators in Oracle 18c. JSON_OBJECT, JSON_ARRAY, JSON_ARRAYAGG and JSON_OBJECTAGG now support returning CLOB and BLOB datatypes.  This allows much larger JSON documents to be generated using these operators, allowing a single simple SQL statement to be used to generate very large JSON documents.","",134508178670916750388624689864406374538,"","","",24-JUN-24 06.56.57.471058000 AM,"PUBLIC","18c JSON",101,"","GAF1A1FS439B09IBFVQBVC38L",10072500,13,,,"","","","","","","","","","","","","","",,"",15-MAY-23 04.10.19.964792000 AM,17-FEB-18 05.18.25.090929000 PM,"","",,,"","","",552,"N"
134645163750628014918730535020714950455,16-FEB-18 02.58.52.300736000 AM,"",,"MARK.DRAKE@ORACLE.COM","Database 18c TREAT(... AS JSON)","DATABASE 18C TREAT(... AS JSON)","This script showcases the new (TREAT ... as JSON) operator introduced as part of Oracle Database 18c. This operator provides a way to inform the database that the content of a VARCHAR2, BLOB, CLOB should be treated as containing JSON. This enables a number of useful features, including the ability to use ""Simplified Syntax"" on database objects that do not have an ""IS JSON"" constraint. ","",134645163749856720245816401607252410167,"","","",18-MAR-24 06.51.39.118978000 PM,"PUBLIC","18c",4,"","GAFZH392NRDVNWN9JFDWBWCQ7",10072520,13,,,"","","","","","","","","","","","","","",,"",15-FEB-22 10.02.23.927494000 PM,17-FEB-18 05.21.17.869844000 PM,"","",,,"","","",34,""
133742850718551375136769203182794058508,07-FEB-18 11.29.06.330980000 AM,"",,"CHRIS.SAXON@ORACLE.COM","How to Group Rows in 7 Day Batches with Variable Gaps","HOW TO GROUP ROWS IN 7 DAY BATCHES WITH VARIABLE GAPS","Examples of how to group rows in seven-day batches. The start date of each batch is the date of the first row in it. So there can be a variable number of days between batches. You can do this with the model clause, recursive subquery factoring or match_recognize","",133742850718282993604814755506009287436,"","","",14-AUG-24 06.12.52.110383000 AM,"PUBLIC","model, match_recognize, recursive with, 12c",11,"","F8RLQB25NRWU3MSDZELUD3B5F",9884834,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",08-SEP-22 07.52.32.000780000 PM,07-FEB-18 04.36.08.344495000 PM,"","",,,"","","",88,""
161748877785175977379514839725813435485,02-NOV-18 02.04.05.655389000 PM,"",,"TYSON.JOUGLET@GMAIL.COM","Implicit vs Explicit Date Conversion","IMPLICIT VS EXPLICIT DATE CONVERSION","Discuss the difference between implicit and explicit date conversion using the to_date function.","",161748877781139374067821592911469513821,"","","",27-JUL-24 11.41.53.715560000 AM,"PUBLIC","",23,"","HHMTYEK0YIVO3RSNR56EXCRT7",18207976,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",17-JAN-24 11.52.39.780276000 AM,02-NOV-18 03.26.47.674255000 PM,"","APPROVED",02-NOV-18 02.04.05.655041000 PM,,"Auto Approved","","",197,""
92095149188918563682537680373325403103,04-JAN-17 05.40.06.921549000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","12.2: Use static expressions","12.2: USE STATIC EXPRESSIONS","Starting with Oracle Database 12c Release 2 (12.2), we can now use static expressions where previously only literal constants were allowed. This will help us write code that adapts more easily and automatically to changes and is easier to maintain.

Doc: http://docs.oracle.com/database/122/LNPLS/plsql-language-fundamentals.htm#LNPLS300","",103093425422126,"","","",03-APR-24 02.29.28.868401000 PM,"PUBLIC","declaration,static expression,subtype",16,"","EDYBI7P1YWNEO7VL9P453AO2P",1422182,4,,,"","","","","","","","","","","","","","",,"",06-AUG-21 03.01.27.410428000 AM,04-JAN-17 05.45.45.444427000 PM,"","",,,"","","",42,""
93405721195379688314722128635303170598,17-JAN-17 06.45.54.482100000 AM,"",,"ASHLEY.VANDHANA@GMAIL.COM","PL/SQL cursor~salary in descending order","PL/SQL CURSOR~SALARY IN DESCENDING ORDER","PL/SQL block to Arranging salaries in descending order using cursor without cursor parameters","",93404660304272258202819213536074015039,"","","",01-MAY-24 02.50.43.145577000 AM,"PUBLIC","PL/SQL, CURSOR, SALARY, EMPLOYEE, DESCENDING order",18,"","EF1V8O8EF008FJU5U4QSMO0VS",1592110,4,,,"","","","","","","","","","","","","","",,"",28-NOV-23 05.16.09.775367000 AM,17-JAN-17 06.45.54.498630000 AM,"","APPROVED",15-JUN-18 01.34.35.915749000 AM,19-JUN-18 06.52.10.061992000 PM,"sharon.kennedy@oracle.com","","",95,""
94794567529385200145301018335819492050,30-JAN-17 02.48.56.202841000 PM,"",,"KIBEHA@GMAIL.COM","Example of fix of bad view with analytic functions","EXAMPLE OF FIX OF BAD VIEW WITH ANALYTIC FUNCTIONS","An example of a (very) bad view that very very efficiently could be fixed using analytic functions","",13753725815562,"","","",04-APR-24 06.38.17.158340000 AM,"PUBLIC","",11,"","EIAHVLI5BTL7OXSSFQM0ID907",1757474,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",15-NOV-22 04.10.54.368962000 PM,30-JAN-17 03.47.30.900587000 PM,"","APPROVED",15-JUN-18 01.34.35.926872000 AM,20-JUN-18 05.51.16.144447000 PM,"sharon.kennedy@oracle.com","","",26,""
92743490255828660001055317138514528569,10-JAN-17 11.12.26.351887000 PM,"",,"PLSQL@IMPLESTRAT.COM","Intro To JSON_OBJECT","INTRO TO JSON_OBJECT","JSON_OBJECT is one of Oracle's function to generate JSON output from an SQL query. It takes column names as arguments and combines them with column values in JSON key element pairs.","",92743490254243758251540538290474731833,"","","",04-APR-24 11.27.32.234368000 AM,"PUBLIC","JSON JSON_OBJECT",55,"","EEZN4A2FCOTT4F1OON2HBYEOB",1488427,13,,,"","","","","","","","","","","","","","",,"",15-DEC-22 03.32.23.407910000 PM,10-JAN-17 11.12.26.363563000 PM,"","APPROVED",15-JUN-18 01.34.35.937829000 AM,20-JUN-18 06.02.22.739986000 PM,"sharon.kennedy@oracle.com","","",127,""
93404660304875512186806913494252396863,17-JAN-17 07.03.14.334551000 AM,"",,"ASHLEY.VANDHANA@GMAIL.COM","PL/SQL cursor~age in ascending order","PL/SQL CURSOR~AGE IN ASCENDING ORDER","Pl/SQL block using cursor to enter age from one table to another table in ascending order","",93404660304272258202819213536074015039,"","","",24-JUL-24 02.23.35.153719000 PM,"PUBLIC","PL/SQL, CURSOR, Age, ASCENDING order",8,"","EF1T1B5C836EZC5VVHU7X1PLD",1592350,4,,,"","","","","","","","","","","","","","",,"",14-MAY-22 06.15.38.559941000 AM,17-JAN-17 07.03.14.455593000 AM,"","APPROVED",15-JUN-18 01.34.35.943255000 AM,19-JUN-18 06.52.26.817626000 PM,"sharon.kennedy@oracle.com","","",66,""
93441664364284439237988554839998220645,17-JAN-17 03.06.59.711669000 PM,"",,"VALIDATOR1982@MAIL.RU","Merge_Example","MERGE_EXAMPLE","Example of strange compound trigger parts call for bulk operations: merge.","",93441664363006604646655891802333792613,"","","",14-JUL-24 02.58.22.733072000 PM,"PUBLIC","",7,"","EF3YXJR6G6F1VGPBGSOBCVDG3",1598596,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",09-MAR-23 02.21.35.143552000 PM,17-JAN-17 03.17.48.427455000 PM,"","APPROVED",15-JUN-18 01.34.35.953849000 AM,20-JUN-18 05.03.15.398690000 PM,"sharon.kennedy@oracle.com","","",65,""
93652358935984281701704284513040520471,19-JAN-17 03.07.12.404018000 PM,"",,"VALIDATOR1982@MAIL.RU","Compound_trigger_timestamp_error","COMPOUND_TRIGGER_TIMESTAMP_ERROR","Error for :new.timestamp field in compound trigger internal procedure.","",93651841065575395017035067430892366843,"","","",17-APR-24 06.56.29.953562000 PM,"PUBLIC","",4,"","EGF4Q9B9Y39YN31E1HF2TWLGP",1625709,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",,19-JAN-17 03.07.12.484068000 PM,"","APPROVED",15-JUN-18 01.34.35.958934000 AM,19-JUN-18 04.51.48.419968000 PM,"sharon.kennedy@oracle.com","","",36,""
94150584769045879063004845999135567549,24-JAN-17 10.14.17.042532000 AM,"",,"AXESHADES@GMAIL.COM","Simple Loop","SIMPLE LOOP","Demonstration Of Simple Loop in PL/SQL","",94150584768957627478172978069382016701,"","","",04-APR-24 06.08.14.145733000 AM,"PUBLIC","Loop",4,"","EG8V2PCKFIS0LDHHG36DE0YTR",1676954,4,,,"","","","","","","","","","","","","","",,"",16-OCT-22 04.35.20.682884000 AM,24-JAN-17 10.14.17.159909000 AM,"","APPROVED",15-JUN-18 01.34.35.969279000 AM,19-JUN-18 03.52.12.142373000 PM,"sharon.kennedy@oracle.com","","",32,""
92232332914409661179619996617432270141,06-JAN-17 01.12.40.139938000 AM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Deprecation of Inherited Object Types","DEPRECATION OF INHERITED OBJECT TYPES","This example shows that a reference to a deprecated entity x declared in unit type15_basetype type body will cause the compiler to issue a warning.","",92231356272758818022899150187727056598,"","","",16-JUL-24 10.18.09.781411000 AM,"PUBLIC","LNPLS 12.2.0.1 DEPRECATE PRAGMA",9,"","EHUD4VB9E15K5QKFBBG7B18H5",1435320,4,,,"","","","","","","","","","","","","","",94520911473630755178612439282428285352,"inherited-object-type",26-OCT-23 07.56.20.595654000 PM,06-JAN-17 01.35.31.657983000 AM,"http://docs.oracle.com/database/122/LNPLS/DEPRECATE-pragma.htm#GUID-D2DAD89D-C537-4666-A8A7-2836EB77A0E5__EXAMPLES-58564D6E","",,,"","","",21,""
95141738036295268758905074698284616844,02-FEB-17 10.10.46.091705000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Data Type Compatibility for Collection Assignment","DATA TYPE COMPATIBILITY FOR COLLECTION ASSIGNMENT","VARRAY types triplet and trio have the same element type, VARCHAR(15). Collection variables group1 and group2 have the same data type, triplet, but collection variable group3 has the data type trio. ","",2513038145649,"","","",10-MAY-24 03.26.09.901438000 PM,"PUBLIC","LNPLS PLS-00382",27,"","EIT3O78WEM1GE941HIYAT39WE",1819862,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"composites59err",10-MAY-24 03.26.09.901328000 PM,02-FEB-17 10.13.49.132230000 PM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#LNPLS99917","",,,"","","",67,""
95216676676459666619862040062861130026,03-FEB-17 02.45.24.434800000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","12c: Skip the TABLE Operator w/Table Functions","12C: SKIP THE TABLE OPERATOR W/TABLE FUNCTIONS","As of 12.1, you can now call table functions in the FROM clause of a query without nesting it inside the TABLE operator. This kinda makes sense: tables, packages and functions share the same namespace. So the database can definitely figure it out!","",16206725121800,"","","",04-APR-24 06.00.56.942598000 AM,"PUBLIC","table function",6,"","EIYDEBIHIPT4G1HTWD8K9ZOUC",1831939,6,,,"","","","","","","","","","","","","","",,"",13-NOV-17 03.35.11.997670000 PM,03-FEB-17 02.46.44.087515000 PM,"","",,,"","","",27,""
93441397017224235818826937090932636740,17-JAN-17 02.52.42.195192000 PM,"",,"ASHLEY.VANDHANA@GMAIL.COM","HRD salary update","HRD SALARY UPDATE","HRD salary update using cursor","",93437715232805284703370641465546551244,"","","",12-JUN-24 05.22.15.555762000 PM,"PUBLIC","HRD salary update using cursor",11,"","EF3YDJSGCT6RNDTA6YWFRAK7A",1598243,4,,,"","","","","","","","","","","","","","",,"",21-FEB-24 08.57.43.300480000 AM,17-JAN-17 02.52.42.242860000 PM,"","APPROVED",15-JUN-18 01.34.35.994170000 AM,18-JUN-18 08.13.19.448160000 PM,"sharon.kennedy@oracle.com","","",54,""
94491124922485565001530575264439516868,27-JAN-17 03.53.34.993939000 PM,"",,"STEW.ASHTON@GMAIL.COM","LISTAGG ... ON OVERFLOW pre-12.2","LISTAGG ... ON OVERFLOW PRE-12.2","In Oracle Database 12.2, the LISTAGG function includes an ON OVERFLOW TRUNCATE WITH COUNT option. This query provides the same functionality in versions 11.2 and 12.1.","",94489327250507495193454452938027749187,"","","",04-APR-24 06.35.28.664133000 AM,"PUBLIC","LISTAGG",16,"","EHSJPX1P6JVL50Q8C462ED7G2",6600932,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",16-JUL-20 02.58.16.312299000 PM,29-SEP-17 09.30.01.433482000 PM,"","APPROVED",15-JUN-18 01.34.36.000730000 AM,19-JUN-18 04.53.09.507298000 PM,"sharon.kennedy@oracle.com","","",46,""
95046755730037594992540727702962438230,01-FEB-17 11.23.42.212423000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Function Returns Associative Array Indexed by PLS_INTEGER","FUNCTION RETURNS ASSOCIATIVE ARRAY INDEXED BY PLS_INTEGER","This example defines a type of associative array indexed by PLS_INTEGER and a function that returns an associative array of that type.","",111898568900384,"","","",31-JUL-24 02.32.30.394572000 PM,"PUBLIC","LNPLS",119,"","EIOI10CKHAHC5VPNE6FWMC0H7",1799151,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"composites16",21-JUN-24 04.04.19.955428000 PM,01-FEB-17 11.26.12.797222000 PM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-8060F01F-B53B-48D4-9239-7EA8461C2170__BEIEBJJI","",,,"","","",230,""
95048792542837697553444200114624802145,02-FEB-17 12.11.43.368583000 AM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Varray (Variable-Size Array)","VARRAY (VARIABLE-SIZE ARRAY)","This example defines a local VARRAY type, declares a variable of that type (initializing it with a constructor), and defines a procedure that prints the varray.","",111898568900384,"","","",04-AUG-24 04.00.24.906744000 PM,"PUBLIC","LNPLS",51,"","EIOQJ4QG7AB2RHTISADQ89WI7",1799599,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"composites57",04-AUG-24 04.00.24.906632000 PM,02-FEB-17 12.13.52.159398000 AM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-E932FC04-C7AD-4562-9555-8BA05446C0B8__CIHFJAAD","",,,"","","",156,""
95048792546385894834013136742387428705,02-FEB-17 12.23.10.629348000 AM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Nested Table of Local Type","NESTED TABLE OF LOCAL TYPE","This example defines a local nested table type, declares a variable of that type (initializing it with a constructor), and defines a procedure that prints the nested table. ","",111898568900384,"","","",15-MAY-24 08.11.29.974700000 AM,"PUBLIC","LNPLS",30,"","EIOQJ4QTOGGO12TW3C9ZEMVAR",1799778,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"composites56",15-MAY-24 08.11.29.974603000 AM,02-FEB-17 12.25.17.512702000 AM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-5ADB7EE2-71F6-4172-ACD8-FFDCF2787A37__CIHCICAE","",,,"","","",91,""
95048792547851112927386067302131314017,02-FEB-17 12.34.14.666437000 AM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Nested Table of Standalone Type","NESTED TABLE OF STANDALONE TYPE","This example defines a standalone nested table type, nt_type, and a standalone procedure to print a variable of that type, print_nt. ","",111898568900384,"","","",03-APR-24 02.20.01.653637000 PM,"PUBLIC","LNPLS",21,"","EITZC6VQBN1ESDP9C5JZL582K",1818928,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"composites86",14-MAR-24 07.06.20.237427000 PM,02-FEB-17 08.52.48.081761000 PM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-5ADB7EE2-71F6-4172-ACD8-FFDCF2787A37__CIHDEIIG","",,,"","","",62,""
95140384445287296082049197076973810196,02-FEB-17 10.20.26.209066000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Assigning Null Value to Nested Table Variable","ASSIGNING NULL VALUE TO NESTED TABLE VARIABLE","This example initializes the nested table variable dept_names to a non-null value; assigns a null collection to it, making it null; and re-initializes it to a different non-null value.","",2513038145649,"","","",21-AUG-24 09.23.29.428046000 AM,"PUBLIC","LNPLS",15,"","EIT3O78XDFA40YU1F7TV6CSGU",1821119,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"composites18",10-NOV-23 02.30.10.508818000 PM,03-FEB-17 12.25.19.245975000 AM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#LNPLS99917","",,,"","","",36,""
92228553203408928731769968099053945120,06-JAN-17 12.06.50.208654000 AM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Deprecation of an Object Type","DEPRECATION OF AN OBJECT TYPE","This example shows the deprecation of an entire object type.","",92228553203308587888741953877553332512,"","","",04-APR-24 06.00.52.901676000 AM,"PUBLIC","LNPLS 12.2.0.1 DEPRECATE PRAGMA",6,"","EHT56NYX5HXMV4AXKIYGM4E30",1435104,4,,,"","","","","","","","","","","","","","",94520911473630755178612439282428285352,"deprecate-object-type",26-OCT-23 07.55.06.770831000 PM,06-JAN-17 12.12.15.465989000 AM,"http://docs.oracle.com/database/122/LNPLS/DEPRECATE-pragma.htm#GUID-D2DAD89D-C537-4666-A8A7-2836EB77A0E5__EXAMPLES-58564D6E","",,,"","","",8,""
94895494246246298548868984971689864386,31-JAN-17 01.12.13.079832000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","12.2: Find duplicate SQL statements with PL/Scope","12.2: FIND DUPLICATE SQL STATEMENTS WITH PL/SCOPE","PL/Scope is a compiler tool that gathers information about identifiers (as of 11.1) and SQL statements (as of 12.2) in your PL/SQL code. You can do all sorts of amazing deep-dive analysis of your code with PL/Scope, answering questions like:
Where is a variable assigned a value in a program?
What variables are declared inside a given program?
Which programs call another program (that is, you can get down to a subprogram in a package)?
Find the type of a variable from its declaration.
Show where specific columns are referenced.
Locate all SQL statements containing hints.
Find all dynamic SQL usages – ideal for getting rid of SQL injection vulnerabilities.
Show all locations in your code where you commit or rollback.
And my latest favorite: Locate multiple appearances of same ""canonical"" SQL statement. This script shows you how to do this. Doc:  http://docs.oracle.com/database/122/ADFNS/plscope.htm Blog: http://stevenfeuersteinonplsql.blogspot.com/2017/01/find-duplicate-sql-statements-with.html
","",14119044579536,"","","",09-AUG-24 10.14.50.000928000 AM,"PUBLIC","impact, change,duplicate",76,"","EIFVZ427KY1U4M9Q8EM7GCEOK",1772167,4,,,"","","","","","","","","","","","","","",,"",05-MAR-24 06.48.08.365105000 AM,31-JAN-17 01.23.37.787699000 PM,"","",,,"","","",276,""
92636538667893457073023070967306031784,09-JAN-17 09.45.37.531188000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Restricting Access to Top-Level Procedures in the Same Schema","RESTRICTING ACCESS TO TOP-LEVEL PROCEDURES IN THE SAME SCHEMA","This example shows that the top-level procedure top_protected_proc can only be called by procedure top_trusted_proc in the current schema. The user cannot call top_proctected_proc directly.","",92636442691782807514969316349247637501,"","","",07-MAY-24 06.39.54.703316000 PM,"PUBLIC","LNPLS ACCESSIBLE BY Clause PLS-00904",20,"","EHT56NYWRDCRIX2PF4HJOTPXC",184848050,4,,,"","","","","","","","","","","","","","",94516839393669168524344957533390792361,"whitelist1",07-MAY-24 06.39.54.703189000 PM,14-DEC-22 04.56.19.565589000 PM,"","APPROVED",14-DEC-22 04.56.19.559229000 PM,,"Auto Approved","","",38,""
92206780050436349999756977375936148228,05-JAN-17 07.25.56.964660000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Deprecation of a PL/SQL Package","DEPRECATION OF A PL/SQL PACKAGE","This example shows the deprecation of a PL/SQL package as a whole. Warnings will be issued for any reference to package pack1, and to the procedures foo and bar when used outside of the package and its body.","",92204952071570765520780776219792258205,"","","",03-APR-24 02.20.07.749030000 PM,"PUBLIC","12.2.0.1 DEPRECATE PRAGMA",21,"","EHUGI1LRQV3FY5UT01ZCOV5FT",1434676,4,,,"","","","","","","","","","","","","","",94520911473630755178612439282428285352,"package",15-FEB-24 09.39.07.740424000 AM,05-JAN-17 09.35.52.161633000 PM,"http://docs.oracle.com/database/122/LNPLS/DEPRECATE-pragma.htm#GUID-D2DAD89D-C537-4666-A8A7-2836EB77A0E5__EXAMPLES-58564D6E","",,,"","","",40,""
92314088705242570635408134068668901203,06-JAN-17 07.39.59.957708000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Deprecation Only Applies to Top Level Subprogram","DEPRECATION ONLY APPLIES TO TOP LEVEL SUBPROGRAM","This examples shows that the DEPRECATE pragma may not be used to deprecate a nested procedure. The compiler issues a warning about the misuse of the pragma on the entity. The pragma has no effect.","",92311511563987801292911607550319429695,"","","",04-APR-24 05.57.34.155300000 AM,"PUBLIC","LNPLS 12.2.0.1 DEPRECATE PRAGMA PLW-06022",7,"","EHTKYAJ2YVUYDJE0J86IXWXK6",1443120,4,,,"","","","","","","","","","","","","","",94520911473630755178612439282428285352,"misuse-pragma",26-OCT-23 07.57.08.382933000 PM,06-JAN-17 07.44.33.544746000 PM,"http://docs.oracle.com/database/122/LNPLS/DEPRECATE-pragma.htm#GUID-D2DAD89D-C537-4666-A8A7-2836EB77A0E5__EXAMPLES-58564D6E","",,,"","","",15,""
92640279573850271918410377108784815700,09-JAN-17 10.39.23.316672000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Restricting Access to a Unit Name of Any Kind","RESTRICTING ACCESS TO A UNIT NAME OF ANY KIND","This example shows that if the PL/SQL unit_kind is not specified in the ACCESSIBLE BY clause, then a call from any unit kind is allowed if the unit name matches.  There is no compilation error if the unit_kind specified in the ACCESSIBLE BY clause does not match any existing objects.  It is possible to define a trigger with the same name as a function. It is recommended to specify the unit_kind.","",92597987475054656040866049476679832069,"","","",07-MAY-24 07.30.06.751759000 PM,"PUBLIC","LNPLS ACCESSIBLE BY Clause",16,"","EHT56NYWM38LDGQVQNROA7218",184849844,4,,,"","","","","","","","","","","","","","",94516839393669168524344957533390792361,"whitelist2",26-OCT-23 05.26.16.445985000 PM,14-DEC-22 05.04.59.791366000 PM,"","APPROVED",14-DEC-22 05.04.59.789046000 PM,,"Auto Approved","","",35,""
91964496271310743017532230943285883272,03-JAN-17 11.15.10.579854000 AM,"",,"ORACLE@ORCHESTRAPIT.CO.UK","Create table with identity column","CREATE TABLE WITH IDENTITY COLUMN","Referred to from http://stackoverflow.com/questions/41441695/error-pops-up-while-creating-the-table","",91962463546787418521525955575683899765,"","","",05-AUG-24 04.56.51.576049000 PM,"PUBLIC","create table; identity",33,"","EDQPC2B9ZIJG6J89OGZOSW8NU",1404015,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",26-JUN-24 03.03.52.256711000 AM,03-JAN-17 11.15.10.661308000 AM,"","APPROVED",15-JUN-18 01.34.36.025085000 AM,19-JUN-18 03.49.38.741772000 PM,"sharon.kennedy@oracle.com","","",277,""
94569158317007383909082998101024357052,28-JAN-17 10.14.04.167951000 AM,"",,"STEW.ASHTON@GMAIL.COM","MATCH_RECOGNIZE 2: Playing with PATTERN","MATCH_RECOGNIZE 2: PLAYING WITH PATTERN","Simple examples to demonstrate some of the syntax of the PATTERN clause.","",94567694477197930677991487401225756222,"","","",04-APR-24 06.38.23.906037000 AM,"PUBLIC","MATCH_RECOGNIZE row pattern matching",10,"","EHW9R1UZHG2WJV25EKLJDNNSD",1729273,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",27-SEP-18 01.01.04.289113000 AM,28-JAN-17 10.39.24.767547000 AM,"","APPROVED",15-JUN-18 01.34.36.045251000 AM,20-JUN-18 05.13.01.464313000 PM,"sharon.kennedy@oracle.com","","",34,""
94181252677725135734291504554593399349,24-JAN-17 05.49.52.517883000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Error Backtrace Changed by Level 3 Optimization (inlining)","ERROR BACKTRACE CHANGED BY LEVEL 3 OPTIMIZATION (INLINING)","The DBMS_UTILITY.FORMAT_ERROR_BACKTRACE (and similar functionality in the UTL_CALL_STACK package) is a tremendously helpful function. It returns a formatted string that allows you to easily trace back to the line number on which an exception was raised. You know what else is really helpful? The automatic optimization performed by the PL/SQL compiler. The default level is 2, which does an awful lot of optimizing for you. But if you want to get the most out of the optimizer, you can ratchet it up to level 3, which then added subprogram inlining. Unfortunately, these two wonderful features don't mix all that well. Specifically, if you optimize at level 3, then the backtrace may not point all the way back to the line number in your ""original"" source code (without inlining, of course). Blog: http://stevenfeuersteinonplsql.blogspot.com/2017/01/confused-by-your-error-backtrace-check.html","",11578827084800,"","","",22-MAY-24 07.02.35.935364000 AM,"PUBLIC","backtrace, inlining,inline",8,"","EHANSW3FOL2JT41L2UASTVNPJ",1682820,4,,,"","","","","","","","","","","","","","",,"",28-MAR-22 07.49.18.844004000 AM,24-JAN-17 06.32.01.701628000 PM,"","",,,"","","",22,""
94055681617674041911577619939424136215,23-JAN-17 12.31.43.082210000 PM,"",,"DATABASE.FEEDS@YAHOO.COM","Creating Sample SQL Queries using the Oracle LIVE SQL","CREATING SAMPLE SQL QUERIES USING THE ORACLE LIVE SQL","Creating Sample SQL Queries using the Oracle LIVE SQL","",94055681616428848317374551889476774935,"","","",20-AUG-24 06.12.19.202625000 AM,"PUBLIC","",89,"","EG3EU5N2VR14WNCS756OZAYLL",1665523,1,,,"","","","","","","","","","","","","","",,"",17-AUG-24 06.27.13.650362000 AM,23-JAN-17 12.31.43.254771000 PM,"","APPROVED",15-JUN-18 01.34.36.062635000 AM,19-JUN-18 06.52.49.795644000 PM,"sharon.kennedy@oracle.com","","",341,""
93614645943353944622045418301699041739,19-JAN-17 06.38.06.050347000 AM,"",,"PRASHANTKR719@GMAIL.COM","if else","IF ELSE","if else program using pl/sql","",93614645943265693037213550371945490891,"","","",08-JUL-24 04.17.02.702627000 PM,"PUBLIC","prashant",20,"","EGDYD0G85ME7302RBF4UDMO89",1619101,4,,,"","","","","","","","","","","","","","",,"",19-FEB-24 09.16.54.426808000 AM,19-JAN-17 06.38.06.100277000 AM,"","APPROVED",15-JUN-18 01.34.36.067877000 AM,18-JUN-18 08.12.27.172423000 PM,"sharon.kennedy@oracle.com","","",169,""
93418604048176550520089910610898852072,17-JAN-17 09.58.59.070683000 AM,"",,"WILLIAMR13@AIM.COM","table-function-demo","TABLE-FUNCTION-DEMO","Demo of using a table function in a WHERE clause.","",93418604047601101829953347123738712296,"","","",04-APR-24 06.05.30.844964000 AM,"PUBLIC","",4,"","EF2M0F1LWE2OSYBOKP38MW1TM",1594191,6,,,"","","","","","","","","","","","","","",,"",23-JAN-24 11.39.08.023579000 AM,17-JAN-17 10.01.31.636391000 AM,"","APPROVED",15-JUN-18 01.34.36.094242000 AM,19-JUN-18 05.00.50.021009000 PM,"sharon.kennedy@oracle.com","","",27,""
92315753582872735772661222137379034376,06-JAN-17 07.56.20.692810000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Misplaced DEPRECATE Pragma","MISPLACED DEPRECATE PRAGMA","The DEPRECATE pragma must appear immediately after the declaration of the deprecated item. A warning about the misplaced pragma is issued and the pragma has no effect.","",92311511563987801292911607550319429695,"","","",03-APR-24 02.44.06.637447000 PM,"PUBLIC","LNPLS 12.2.0.1 DEPRECATE PRAGMA PLW-06021",10,"","EHTKYAJ2YFGC48J6DN3Q5GGZU",1470082,4,,,"","","","","","","","","","","","","","",94520911473630755178612439282428285352,"misplaced-pragma",17-JAN-24 12.23.47.307327000 PM,09-JAN-17 07.55.02.202955000 PM,"http://docs.oracle.com/database/122/LNPLS/DEPRECATE-pragma.htm#GUID-D2DAD89D-C537-4666-A8A7-2836EB77A0E5__EXAMPLES-58564D6E","",,,"","","",10,""
93465535731310586447609702342495720438,17-JAN-17 08.26.09.088709000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Restricting Access to a Stored Procedure","RESTRICTING ACCESS TO A STORED PROCEDURE","This example shows a package procedure private_proc that can only be called by top_trusted_proc procedure. ","",93465535730143973031681585188904260598,"","","",07-MAY-24 01.43.17.588365000 AM,"PUBLIC","LNPLS ACCESSIBLE BY Clause ",23,"","EGAUHQENGS9U8XNX6D49T3SD6",184850256,4,,,"","","","","","","","","","","","","","",94516839393669168524344957533390792361,"whitelist3",15-FEB-24 08.50.58.161577000 AM,14-DEC-22 05.06.56.874375000 PM,"","APPROVED",14-DEC-22 05.06.56.870445000 PM,,"Auto Approved","","",127,""
92224815009569424608072510489204763428,05-JAN-17 11.21.10.657045000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Deprecation of an Overloaded Procedure","DEPRECATION OF AN OVERLOADED PROCEDURE","This example shows the DEPRECATE pragma applies only to a specific overload of a procedure name. Only the second declaration of proc1 is deprecated.","",92214912495123615394799013401274762385,"","","",04-APR-24 06.00.51.304726000 AM,"PUBLIC","LNPLS 12.2.0.1 DEPRECATE PRAGMA",6,"","EHTKYAJ3CJ0NAK351THONMRC6",1434956,4,,,"","","","","","","","","","","","","","",94520911473630755178612439282428285352,"overloaded-procedure",26-OCT-23 07.53.29.946163000 PM,05-JAN-17 11.31.39.035776000 PM,"http://docs.oracle.com/database/122/LNPLS/DEPRECATE-pragma.htm#GUID-D2DAD89D-C537-4666-A8A7-2836EB77A0E5__EXAMPLES-58564D6E","",,,"","","",9,""
91880099091495642817767972063538771611,02-JAN-17 04.20.49.078039000 PM,"",,"EYGLE@EYGLE.COM","Oracle 12.2 Read Only Partitions","ORACLE 12.2 READ ONLY PARTITIONS","Have a sample testing for Oracle 12.2 Read-only Partition","",91880152124953221661302324928881293915,"","","",12-JUN-24 09.48.17.697759000 PM,"PUBLIC","",7,"","EDLTZGAJY304OFT3U1EYFJB4T",1395330,8,,,"","","","","","","","","","","","","","",,"",17-JAN-19 02.24.52.297345000 PM,02-JAN-17 04.20.49.156724000 PM,"","APPROVED",15-JUN-18 01.34.36.118468000 AM,15-JUN-18 04.52.16.121782000 PM,"sharon.kennedy@oracle.com","","",30,""
95044575385057192727819616615200853384,01-FEB-17 11.39.04.523241000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Declaring Associative Array Constant","DECLARING ASSOCIATIVE ARRAY CONSTANT","When declaring an associative array constant, you must create a function that populates the associative array with its initial value and then invoke the function in the constant declaration.","",111898568900384,"","","",17-JUL-24 03.25.46.218199000 AM,"PUBLIC","LNPLS",47,"","EIOHSNH91JBCM983517FLIVP2",1799292,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"composites89",07-JUN-24 04.33.55.401703000 AM,01-FEB-17 11.41.27.210534000 PM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-8A3DD42E-72A1-4807-8650-E92F5FD89763__BABIBCCB","",,,"","","",105,""
90812308182458575956893194793977002748,23-DEC-16 10.26.19.208900000 AM,"",,"RICHARD.SMITH3@EON.COM","Statistics collection in 12c for CTAS tables","STATISTICS COLLECTION IN 12C FOR CTAS TABLES","Script demonstrating the ability of Oracle 12c to collect table statistics during a CTAS and during an initial direct path population of a new or ""just truncated"" table.","",90804057378109829441096180145830101942,"","","",03-AUG-24 07.06.56.147393000 AM,"PUBLIC","12c CTAS statistics collection",6,"","EBV63SJ443QHYTB397M5JK37I",1301218,62122359562009447255714070369388904843,,,"","","","","","","","","","","","","","",,"",03-AUG-24 07.06.56.147236000 AM,23-DEC-16 10.26.19.239283000 AM,"","APPROVED",15-JUN-18 01.34.36.128012000 AM,20-JUN-18 02.34.06.207867000 PM,"sharon.kennedy@oracle.com","","",25,""
93260388652062049521231771221822729460,15-JAN-17 09.40.59.259743000 PM,"",,"PLSQL@IMPLESTRAT.COM","JSON_OBJECTAGG Introduction","JSON_OBJECTAGG INTRODUCTION","An introduction to the Oracle 12.2 JSON_OBJECTAGG function translating column values into JSON key-value pairs.","",93260477974729843248404574534336421391,"","","",09-JUN-24 04.55.50.379520000 PM,"PUBLIC","JSON_OBJECTAGG JSON SQL",12,"","EFTH8L5MAUTDI9W0PMMYF3ATI",1578567,13,,,"","","","","","","","","","","","","","",,"",13-FEB-24 09.24.11.987973000 AM,15-JAN-17 10.19.28.974788000 PM,"","APPROVED",15-JUN-18 01.34.36.139347000 AM,20-JUN-18 06.03.43.425501000 PM,"sharon.kennedy@oracle.com","","",28,""
95152280825842680096251044856771291167,02-FEB-17 11.47.58.329655000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Nested Tables of Nested Tables and Varrays of Integers","NESTED TABLES OF NESTED TABLES AND VARRAYS OF INTEGERS","In this example, ntb1 is a nested table of nested tables of strings, and ntb2 is a nested table of varrays of integers.","",25043867709982,"","","",02-JUL-24 07.01.42.433806000 AM,"PUBLIC","LNPLS",29,"","EIUPLW08BGUHW27JF3V163BM5",1821028,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"composites26",26-JUN-23 08.39.24.269852000 PM,03-FEB-17 12.20.14.353384000 AM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-2E00BF7F-0285-41F1-8075-AC859F622A3F__BABBHGFG","",,,"","","",108,""
95152280826419337712207222973106137119,02-FEB-17 11.52.03.650312000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Nested Tables of Associative Arrays and Varrays of Strings","NESTED TABLES OF ASSOCIATIVE ARRAYS AND VARRAYS OF STRINGS","In this example, aa1 is an associative array of associative arrays, and ntb2 is a nested table of varrays of strings.","",25043867709982,"","","",02-JUL-24 07.01.57.481093000 AM,"PUBLIC","LNPLS",25,"","EIUPLW092YNB1RWCXOMAB4VJL",1821077,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"composites27",06-APR-24 02.40.31.924963000 AM,03-FEB-17 12.17.16.331637000 AM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#LNPLS00506","",,,"","","",75,""
92222947680129267958693420984634611169,05-JAN-17 10.38.13.944447000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Deprecation of a PL/SQL Package with a Custom Warning","DEPRECATION OF A PL/SQL PACKAGE WITH A CUSTOM WARNING","This example shows the deprecation of a PL/SQL package. The compiler issues a custom warning message when a reference in another unit for the deprecated procedure foo is compiled. ","",92214912495123615394799013401274762385,"","","",26-JUL-24 11.14.38.100054000 AM,"PUBLIC","LNPLS 12.2.0.1 DEPRECATE PRAGMA",13,"","EHUGI1LRQK5PTML9WNXH5W6DL",1434870,4,,,"","","","","","","","","","","","","","",94520911473630755178612439282428285352,"package-custom-warning",15-FEB-24 09.08.24.422485000 AM,05-JAN-17 10.48.16.914790000 PM,"http://docs.oracle.com/database/122/LNPLS/DEPRECATE-pragma.htm#GUID-D2DAD89D-C537-4666-A8A7-2836EB77A0E5__EXAMPLES-58564D6E","",,,"","","",24,""
92222947681133885314793177828815443425,05-JAN-17 10.56.53.095520000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Deprecation of a PL/SQL Procedure","DEPRECATION OF A PL/SQL PROCEDURE","This example shows the deprecation of a single PL/SQL procedure foo in package pack7.","",92214912495123615394799013401274762385,"","","",03-APR-24 02.29.19.899342000 PM,"PUBLIC","LNPLS 12.2.0.1 DEPRECATE PRAGMA",16,"","EHTKYAJ3DGTTQ6TUEZM78JOJU",1434920,4,,,"","","","","","","","","","","","","","",94520911473630755178612439282428285352,"procedure",26-OCT-23 07.34.46.137272000 PM,05-JAN-17 11.06.24.810220000 PM,"http://docs.oracle.com/database/122/LNPLS/DEPRECATE-pragma.htm#GUID-D2DAD89D-C537-4666-A8A7-2836EB77A0E5__EXAMPLES-58564D6E","",,,"","","",66,""
94298461505689602544378688024370384872,25-JAN-17 07.41.18.601683000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","How NOT to Handle Exceptions in PL/SQL","HOW NOT TO HANDLE EXCEPTIONS IN PL/SQL","This script offers a number of examples of bad ideas when it comes to handling exceptions. And finishes up with a good example, of course! If you don't want to just stare at code, check out the YouTube playlist that covers all of this material: https://www.youtube.com/playlist?list=PL0mkplxCP4ygg0C_z6I3aZ_w7_api2zq4","",118105057393362,"","","",30-MAY-24 02.59.53.864385000 PM,"PUBLIC","error,handler,exception",30,"","EHHFC3662J8WMYZ5TA9KBLZZU",1707721,4,,,"","","","","","","","","","","","","","",,"",11-MAR-24 04.20.24.512225000 PM,26-JAN-17 03.19.55.928432000 PM,"","",,,"","","",90,""
92621658099828358031491319156091568708,09-JAN-17 06.54.56.905844000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Mismatch of the Element Name and the DEPRECATE Pragma Argument","MISMATCH OF THE ELEMENT NAME AND THE DEPRECATE PRAGMA ARGUMENT","This example shows that if the argument for the pragma does not match the name in the declaration, the pragma is ignored and the compiler does not issue a warning.","",92619061841169451632520121835607178000,"","","",03-APR-24 02.41.19.640718000 PM,"PUBLIC","LNPLS 12.2.0.1 DEPRECATE PRAGMA ",11,"","EHTKYAJ2W7PGI3LXV3WC1KKQY",1470091,4,,,"","","","","","","","","","","","","","",94520911473630755178612439282428285352,"mismatch-pragma",26-OCT-23 07.57.53.111651000 PM,09-JAN-17 07.56.26.710817000 PM,"http://docs.oracle.com/database/122/LNPLS/DEPRECATE-pragma.htm#GUID-D2DAD89D-C537-4666-A8A7-2836EB77A0E5__EXAMPLES-58564D6E","",,,"","","",6,""
92808668321738237776740561919396190048,11-JAN-17 01.50.48.448526000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","12.2: Identifiers can now be up to 128 bytes in length!","12.2: IDENTIFIERS CAN NOW BE UP TO 128 BYTES IN LENGTH!","Yes, indeed, with 12.2, Oracle Database removes the restriction of a maximum of 30 bytes for an identifier name: table name, column name, procedure name, package name, parameter name....you name it! Now you can write more self-documenting code (but don't overdo it!), as well as migrate code and data structures more easily from other databases and languages that already supported longer names.","",112937376446087,"","","",04-APR-24 06.11.58.209603000 AM,"PUBLIC","names",4,"","EE3FJ53948V684CX7YXBL8T0I",1506115,4,,,"","","","","","","","","","","","","","",,"",15-JUN-17 05.26.13.697502000 PM,11-JAN-17 01.51.19.969292000 PM,"","",,,"","","",28,""
95101683402149483135520736407060150428,02-FEB-17 12.17.58.207142000 PM,"",,"GERMANDAVID.RAMIREZFIGUEROA@GMAIL.COM","Diferencia entre un inner y un outer join","DIFERENCIA ENTRE UN INNER Y UN OUTER JOIN","Esquema para responder pregunta de es.stackoverflow
http://es.stackoverflow.com/questions/36/cu%c3%a1l-es-la-diferencia-entre-un-inner-y-un-outer-join

¿Cuál es la diferencia entre un inner y un outer join?

Y ¿cuál es la función de los modificadores left, right o full?","",95102068346251398647945733653710640288,"","","",19-MAR-24 07.23.13.763975000 PM,"PUBLIC","inner join - outer join",11,"","EIRSGS3Y5F8VRFFVFPBXP7ZFY",1810725,1,,,"","","","","","","","","","","","","","",,"",09-NOV-23 12.17.50.635096000 AM,02-FEB-17 12.17.58.239084000 PM,"","APPROVED",15-JUN-18 01.34.36.153848000 AM,20-JUN-18 04.19.44.670242000 PM,"sharon.kennedy@oracle.com","","",46,""
92227085530695459367506475660891282310,05-JAN-17 11.40.32.480278000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Deprecation of a Constant and of an Exception","DEPRECATION OF A CONSTANT AND OF AN EXCEPTION","This example shows the deprecation of a constant and of an exception.","",92214912495123615394799013401274762385,"","","",04-APR-24 05.54.01.183580000 AM,"PUBLIC","LNPLS 12.2.0.1 DEPRECATE PRAGMA",8,"","EHTKYAJ3BSOBWQ0RQUC2B7BPM",1434845,4,,,"","","","","","","","","","","","","","",94520911473630755178612439282428285352,"constant-exception",26-OCT-23 07.54.00.929135000 PM,05-JAN-17 11.53.26.735915000 PM,"http://docs.oracle.com/database/122/LNPLS/DEPRECATE-pragma.htm#GUID-D2DAD89D-C537-4666-A8A7-2836EB77A0E5__EXAMPLES-58564D6E","",,,"","","",15,""
92551366399033663416555378434951000678,09-JAN-17 02.37.45.287105000 AM,"",,"DIGGER1985@MAIL.RU","12.2 Handling Data Errors Bug rowsets","12.2 HANDLING DATA ERRORS BUG ROWSETS","12.2 Handling Data Errors Bug","",92551366398993768864508095672185696870,"","","",20-AUG-24 01.13.36.958778000 PM,"PUBLIC","bug 12.2",11,"","EEOKVUAVIFCDDXYAJBMLUM004",1460340,14,,,"","","","","","","","","","","","","","",,"",18-SEP-20 04.59.12.862400000 PM,09-JAN-17 02.37.45.367989000 AM,"","APPROVED",15-JUN-18 01.34.36.164545000 AM,15-JUN-18 05.02.59.922356000 PM,"sharon.kennedy@oracle.com","","",37,""
95140665597171633627458141123320096516,02-FEB-17 09.38.54.854898000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Initializing Collection (Varray) Variable to Empty","INITIALIZING COLLECTION (VARRAY) VARIABLE TO EMPTY","This example invokes a constructor twice: to initialize the varray variable team to empty in its declaration, and to give it new values in the executable part of the block.","",2513038145649,"","","",22-JUN-24 11.36.14.784510000 PM,"PUBLIC","LNPLS",39,"","EIT1GZ17XKX7S1JMH0KSNSZVA",1819540,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"composites58",22-JUN-24 11.36.14.784386000 PM,02-FEB-17 09.45.34.191107000 PM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-92967CC1-481E-472A-BB4C-90C60F75296D__CIHCBBJJ","",,,"","","",76,""
95149003224811201614610159713552871918,02-FEB-17 11.16.18.880632000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Assigning Set Operation Results to Nested Table Variable","ASSIGNING SET OPERATION RESULTS TO NESTED TABLE VARIABLE","This example assigns the results of several MULTISET operations and one SET function invocation of the nested table variable answer, using the procedure print_nested_table to print answer after each assignment. ","",25043867709982,"","","",03-APR-24 02.32.18.603045000 PM,"PUBLIC","LNPLS",15,"","EIUKO1FXAEDFI80Z5WDIDVO7S",1820540,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"composites19",10-OCT-22 02.15.30.856982000 PM,02-FEB-17 11.21.44.525823000 PM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-E939651F-5E2B-4A83-9035-4FA5498B78AA__BABFIDIG","",,,"","","",46,""
93537549224374745878023558447395172928,18-JAN-17 12.52.34.902217000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Emulation of Finally Clause in PL/SQL","EMULATION OF FINALLY CLAUSE IN PL/SQL","PL/SQL does not support a finally clause, as many other languages do, including Java. There is minimal need for this clause, since PL/SQL does so much cleanup for you. Still, if you do need to perform end-of-block cleanup, the best way is to define a nested subprogram and call it where needed.","",113208189535014,"","","",05-AUG-24 07.29.20.810064000 AM,"PUBLIC","finally,block",9,"","EF9H6JAXG6ZLWZX7DQKUPF0CY",14570001,6,,,"","","","","","","","","","","","","","",,"",22-AUG-19 04.50.42.428718000 PM,26-JUL-18 03.48.50.398893000 PM,"","APPROVED",26-JUL-18 03.48.50.391549000 PM,,"Auto Approved","","",32,""
95149003225980232882177506125493744110,02-FEB-17 11.44.07.142898000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Two-Dimensional Varray (Varray of Varrays)","TWO-DIMENSIONAL VARRAY (VARRAY OF VARRAYS)","In this example, nva is a two-dimensional varray—a varray of varrays of integers.","",25043867709982,"","","",06-APR-24 01.50.17.952886000 AM,"PUBLIC","LNPLS",47,"","EIUISP4N0N48R9DG9N7EUON64",1821030,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"composites25",06-APR-24 01.50.17.952785000 AM,03-FEB-17 12.21.34.866008000 AM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-2E00BF7F-0285-41F1-8075-AC859F622A3F__BABHFDCF","",,,"","","",92,""
93539315046561372677641078447125734776,18-JAN-17 01.45.35.725427000 PM,"",,"KUNDER.AKSHAY1@GMAIL.COM","Multiplication Procedure","MULTIPLICATION PROCEDURE","Simple Procedure showing a multiplication table of a number using For Loop.","",93539315046513015644856493280137487736,"","","",31-JUL-24 02.33.29.734081000 PM,"PUBLIC","",23,"","EF9LUMT6RP6XS9Z0Q2SN8D8EI",1610862,4,,,"","","","","","","","","","","","","","",,"",14-NOV-23 02.56.42.322638000 PM,18-JAN-17 01.45.35.740711000 PM,"","APPROVED",15-JUN-18 01.34.36.192836000 AM,19-JUN-18 04.29.27.119144000 PM,"sharon.kennedy@oracle.com","","",140,""
95028461017977876930865311626293849717,01-FEB-17 07.11.34.830834000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Associative Array Indexed by String","ASSOCIATIVE ARRAY INDEXED BY STRING","This example defines a type of associative array indexed by string, declares a variable of that type, populates the variable with three elements, changes the value of one element, and prints the values.","",112056267828377,"","","",17-AUG-24 10.18.27.343298000 AM,"PUBLIC","LNPLS ",193,"","EIOHSNH55HFFRXNFX4JINNV9M",1796293,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"composites1",20-JUN-24 05.02.31.224518000 PM,01-FEB-17 07.18.21.215133000 PM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-8060F01F-B53B-48D4-9239-7EA8461C2170__BABHGFHJ","",,,"","","",521,""
92231356272853114236829091263354138326,06-JAN-17 12.52.56.946123000 AM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Deprecation of a Member Function in an Object Type Specification","DEPRECATION OF A MEMBER FUNCTION IN AN OBJECT TYPE SPECIFICATION","This example shows the deprecation of member function add2 in an object type specification.","",92231356272758818022899150187727056598,"","","",28-APR-24 04.28.57.814559000 AM,"PUBLIC","LNPLS 12.2.0.1 DEPRECATE PRAGMA",8,"","EHTKYAJ2ZM69RDIEU8A49CC8Q",1435241,4,,,"","","","","","","","","","","","","","",94520911473630755178612439282428285352,"member-function",26-OCT-23 07.55.30.258312000 PM,06-JAN-17 12.59.03.375754000 AM,"http://docs.oracle.com/database/122/LNPLS/DEPRECATE-pragma.htm#GUID-D2DAD89D-C537-4666-A8A7-2836EB77A0E5__EXAMPLES-58564D6E","",,,"","","",33,""
92269001350336407111069253906534683001,06-JAN-17 10.03.39.436874000 AM,"",,"BJORN.AHL@KLARNA.COM","regexp_replace_sample","REGEXP_REPLACE_SAMPLE","regexp_replace sample. Having problem with that if there is no pattern match, then i get full string","",92270383472929233639139370751174035322,"","","",07-JUN-23 07.32.30.243796000 AM,"PUBLIC","regexp",14,"","ED794KY9SRNCZ1JKI692E0713",1440793,3,,,"","","","","","","","","","","","","","",,"",24-DEC-20 11.41.57.458596000 PM,06-JAN-17 01.23.51.091493000 PM,"","APPROVED",15-JUN-18 01.34.36.217517000 AM,19-JUN-18 03.50.02.289924000 PM,"sharon.kennedy@oracle.com","","",49,""
94494915240226558923769693902541073222,27-JAN-17 04.47.58.936501000 PM,"",,"STEW.ASHTON@GMAIL.COM","MATCH_RECOGNIZE 1: Syntax intro","MATCH_RECOGNIZE 1: SYNTAX INTRO","Showing some syntax of the MATCH_RECOGNIZE clause bit by bit.","",94489327250507495193454452938027749187,"","","",04-APR-24 06.35.38.819184000 AM,"PUBLIC","MATCH_RECOGNIZE row pattern matching",11,"","EHSTJONZYXQ323JCJDVSZC6IL",1722171,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",14-JUN-21 04.11.52.930003000 PM,27-JAN-17 04.47.58.962287000 PM,"","APPROVED",15-JUN-18 01.34.36.223642000 AM,20-JUN-18 05.13.33.856836000 PM,"sharon.kennedy@oracle.com","","",33,""
92257291743348597688116969070270219605,06-JAN-17 06.51.12.158969000 AM,"",,"GUESTART@163.COM","readonly partition","READONLY PARTITION","read only partition in oracle 12c","",92255626822936882562206075779237473763,"","","",23-JUL-24 02.35.57.088387000 AM,"PUBLIC","",2,"","ED7LSLT4HWU5FQTAI7L0CT6SN",1437229,14,,,"","","","","","","","","","","","","","",,"",05-DEC-19 09.53.03.652447000 AM,06-JAN-17 06.51.12.221789000 AM,"","APPROVED",15-JUN-18 01.34.36.232386000 AM,20-JUN-18 05.07.57.619001000 PM,"sharon.kennedy@oracle.com","","",48,""
93669886691195128684887544310081952857,19-JAN-17 07.05.42.752359000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","12.2: PL/Scope Now Analyzes SQL Statements!","12.2: PL/SCOPE NOW ANALYZES SQL STATEMENTS!","PL/Scope is a powerful code analysis tool for PL/SQL program units, first introduced in Oracle Database 11g. Now with 12.2, that analysis includes the SQL statements found inside your PL/SQL code base. This significant enhancement now allows developers to perform comprehensive impact analysis of changes to tables, such as changing a column's name. Doc link: http://docs.oracle.com/database/122/ADFNS/plscope.htm","",100199042076827,"","","",15-MAY-24 11.04.03.914158000 PM,"PUBLIC","PL/Scope,impact analysis",31,"","EGLCLPOC3O7B0267YN3DPWNNJ",1636724,4,,,"","","","","","","","","","","","","","",,"",02-OCT-22 01.14.50.337964000 AM,20-JAN-17 12.15.52.348676000 PM,"","",,,"","","",65,""
93304043515497244604235370816661548567,16-JAN-17 07.25.47.085883000 AM,"",,"ASHLEY.VANDHANA@GMAIL.COM","Odd_Even","ODD_EVEN","To print odd even numbers in respective tables using WHILE statement in PL/SQL block","",93297999168745810091474129086847782499,"","","",01-AUG-24 05.17.13.235152000 AM,"PUBLIC","odd, even, while, pl/sql, simple",14,"","EFV0YC2IY4NR9671DVMRTWVXL",1580911,4,,,"","","","","","","","","","","","","","",,"",01-AUG-24 05.17.13.235009000 AM,16-JAN-17 07.25.47.194092000 AM,"","APPROVED",15-JUN-18 01.34.36.241788000 AM,19-JUN-18 06.40.39.527966000 PM,"sharon.kennedy@oracle.com","","",69,""
107060459746643515360577658998577860716,28-MAY-17 12.42.08.595840000 AM,"",,"CAIO.HC.OLIVEIRA@GMAIL.COM","FUZZI_MATCH function","FUZZI_MATCH FUNCTION","a useful function for fuzzi matching.

parameters:
sentence - the sentence to match
target - the target to be matched
size_keywords - the precision of the algorithm","",107057552115879663475975740461641551830,"","","",04-APR-24 06.31.17.159823000 AM,"PUBLIC","FUZZI MATCH REGEX",1,"","E1X2WX3CK56L1KWCZH9O22F3I",4010755,6,,,"","","","","","","","","","","","","","",,"",20-NOV-23 12.39.03.476086000 AM,28-MAY-17 12.42.08.734898000 AM,"","APPROVED",15-JUN-18 01.34.36.884716000 AM,19-JUN-18 03.57.53.050341000 PM,"sharon.kennedy@oracle.com","","",31,""
106078143874123950560908680348513785676,18-MAY-17 02.44.00.311583000 PM,"",,"VINCENTFENOLL@GMAIL.COM","Transpose rows to one column","TRANSPOSE ROWS TO ONE COLUMN","The goal is to convert all the row values in a column to a single concatenated list.
You can change the space separated by comma or other csv like fields.

Example of a result:

ID	ADDRESS
id1 addres1 addres2 addres3
id2 addres4
id3 addres5 addres6
id4 addres7 addres8 addres9 addres10 addres11","",4004630461158,"","","",19-AUG-24 09.34.47.586260000 AM,"PUBLIC","transpose rows, convert rows to column",21,"","E0DF1IWLSO7D9C9DCOURA0Z15",,1,,,"","","","","","","","","","","","","","",,"",19-AUG-24 09.34.47.586121000 AM,18-MAY-17 02.44.00.332868000 PM,"","APPROVED",15-JUN-18 01.34.36.893867000 AM,19-JUN-18 03.56.52.018454000 PM,"sharon.kennedy@oracle.com","","",91,""
107644916352289398466661289385781816605,02-JUN-17 02.08.22.031528000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","12.2: Use PL/Scope to find SQL statements with user-defined function calls","12.2: USE PL/SCOPE TO FIND SQL STATEMENTS WITH USER-DEFINED FUNCTION CALLS","When a SQL statement executes a user-defined function, your users pay the price of a context switch, which can be expensive, especially if the function is called in the WHERE clause. Even worse, if that function itself contains a SQL statement, you can run into data consistency issues. Fortunately, you can use PL/Scope in 12.2 to find all the SQL statements in your PL/SQL code that call a user-defined function, and then analyze from there.","",115260072322648,"","","",28-MAY-24 06.54.56.372212000 AM,"PUBLIC","context switch",18,"","E2VNBR8D75S24UXRHQIKPL79Z",4117308,6,,,"","","","","","","","","","","","","","",,"",12-MAY-24 07.22.28.901376000 PM,02-JUN-17 07.55.02.808644000 PM,"","",,,"","","",73,""
105343127442437757643608365891137962584,11-MAY-17 01.31.50.809105000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","UTL_CALL_STACK Helper Package","UTL_CALL_STACK HELPER PACKAGE","UTL_CALL_STACK was added in Oracle Database 12c Release 1 to provide an API to call stack, error stack and error backtrace information. The existing functionality in the DBMS_UTILITY functions are still available. This package provides a layer of code on top of UTL_CALL_STACK to make it easier to use.","",105343127442151242224359698776732598872,"","","",04-APR-24 06.28.40.378547000 AM,"PUBLIC","trace, stack,12c",1,"","EY609YNNZGIXS3QK3KY0HHSKU",3671830,4,,,"","","","","","","","","","","","","","",,"",25-MAR-21 04.25.46.253347000 PM,11-MAY-17 01.31.50.847562000 PM,"","",,,"","","",30,""
104808246897247842543857050793426949065,06-MAY-17 10.18.58.455661000 AM,"",,"ROGEL@WEB.DE","case can't cope with tuples","CASE CAN'T COPE WITH TUPLES","case can't cope with tuples
see https://twitter.com/oraesque/status/860634920464637954","",104805742759972919476972012013880015748,"","","",31-JAN-23 04.49.37.039848000 AM,"PUBLIC","",2,"","EYB2SNK9959G2REOX3F4Q9QAJ",3568766,1,,,"","","","","","","","","","","","","","",,"",08-MAY-17 08.55.02.476598000 AM,06-MAY-17 10.21.32.584719000 AM,"","APPROVED",15-JUN-18 01.34.36.908193000 AM,18-JUN-18 05.55.00.942132000 PM,"sharon.kennedy@oracle.com","","",4,""
105280672304372054235717984588311213068,10-MAY-17 10.54.29.079621000 PM,"",,"A-L_L_4_E@HOTMAIL.COM","Partición por RANGO simple.","PARTICIÓN POR RANGO SIMPLE.","Aquí se muestra la utilización del método de particionado por rango, mediante un atributo de tipo fecha.","",105278494651864943596898797331864531807,"","","",20-AUG-24 01.01.22.395566000 AM,"PUBLIC","DATE PARTITION PARTITIONING",7,"","EY3CH0GYVR5DSMX4AXUL2PSWU",3657500,8,,,"","","","","","","","","","","","","","",,"",20-AUG-24 01.01.22.395384000 AM,10-MAY-17 10.54.29.122617000 PM,"","APPROVED",15-JUN-18 01.34.36.917915000 AM,19-JUN-18 04.53.31.054796000 PM,"sharon.kennedy@oracle.com","","",25,""
106066428694143186135568510926786813984,18-MAY-17 12.13.20.131959000 PM,"",,"POCHODAJ@YAHOO.COM","XML parsing","XML PARSING","XML parsing in Oracle (fields to tags and back again)","",106066428694129887951552750005865046048,"","","",05-JUN-24 06.09.26.193553000 AM,"PUBLIC","",18,"","E0CPA404VLWRFTIVWJBZP51TE",3806625,12,,,"","","","","","","","","","","","","","",,"",27-OCT-23 07.11.31.111634000 PM,18-MAY-17 12.13.20.156853000 PM,"","APPROVED",15-JUN-18 01.34.36.930379000 AM,19-JUN-18 04.22.48.577700000 PM,"sharon.kennedy@oracle.com","","",128,""
107615673277545261597741873319694215713,02-JUN-17 07.25.03.727469000 AM,"",,"PARTHASARATHI.RANGASAMY@ICONPLC.COM","clob to column","CLOB TO COLUMN","clob to column","",107613419919882151082535162248090525693,"","","",03-JUN-24 04.58.46.804681000 PM,"PUBLIC","Clob, SQL, Oracle",5,"","E2T4NJN62A8APZB4P5NYP5LMB",4107806,1,,,"","","","","","","","","","","","","","",,"",21-JUL-23 08.18.18.923239000 PM,02-JUN-17 07.25.03.828303000 AM,"","APPROVED",15-JUN-18 01.34.36.934459000 AM,19-JUN-18 04.45.43.899550000 PM,"sharon.kennedy@oracle.com","","",47,""
107871320767575718398973348013807427400,04-JUN-17 06.19.29.291158000 PM,"",,"MANASIRVL@GMAIL.COM","Pragma Autonomous Transaction Test Script","PRAGMA AUTONOMOUS TRANSACTION TEST SCRIPT","Simple example of how Pragma Autonomous Transaction works in Stored Procedure.","",107870575755339305895959258939370695749,"","","",22-APR-24 01.55.31.150928000 AM,"PUBLIC","Pragma Autonomous Transaction",18,"","E28VV3XPEGP376Q1D8IWRBS86",46128040,4,,,"","","","","","","","","","","","","","",,"",22-APR-24 01.55.31.150821000 AM,08-APR-20 08.42.17.624440000 PM,"","APPROVED",15-JUN-18 01.34.36.938382000 AM,15-JUN-18 04.11.21.234974000 PM,"sharon.kennedy@oracle.com","","",119,""
108371843941248838802810924607203849736,09-JUN-17 01.45.17.637392000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Find COMMITs and ROLLBACKs in Code with PL/Scope 12.2","FIND COMMITS AND ROLLBACKS IN CODE WITH PL/SCOPE 12.2","With 12.2's enhancement to PL/Scope to also gather data on SQL statements in your PL/SQL code, it's a snap to find all COMMIT and ROLLBACK statements in your code! Doc: http://docs.oracle.com/database/122/ADFNS/plscope.htm#ADFNS022","",31895175141005,"","","",01-MAY-24 08.33.17.978286000 PM,"PUBLIC","pl/scope,scope,analysis",11,"","E31WRLTFKZ2IOF5CAPHMA1G6A",14569963,4,,,"","","","","","","","","","","","","","",,"",17-JUL-23 12.17.01.701189000 PM,26-JUL-18 03.47.39.154024000 PM,"","APPROVED",26-JUL-18 03.47.39.127074000 PM,,"Auto Approved","","",52,""
104479653463559437747930719116826664907,03-MAY-17 06.55.58.542398000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","partitioning_list_partions","PARTITIONING_LIST_PARTIONS","SQL from the KISS (Keep It Simply SQL) Partitioning video series by Developer Advocate Connor McDonald. This script demonstrates a basic list partitioned table. ","",104479653463547348489734572825079603147,"","","",08-JUL-24 09.19.46.469110000 PM,"PUBLIC","kiss, partitioning, developer advocates, list",7,"","EXS3Y4LQGVAPJGPC5V4MP2J4D",3504242,8,,,"","","","","","","","","","","","","","",,"",06-JUL-24 07.34.59.119579000 PM,03-MAY-17 06.55.58.552257000 AM,"","",,,"","","",40,""
106665295700730698204231838088141890039,24-MAY-17 05.42.30.935312000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","partitioning_interval","PARTITIONING_INTERVAL","SQL from the KISS (Keep It Simply SQL) Partitioning video series by Developer Advocate Connor McDonald. This script demonstrates an interval range partitioned table.","",106665295700677505468168794404454818295,"","","",04-APR-24 11.05.25.837050000 AM,"PUBLIC","interval, kiss, partitioning, developer advocates, range, numtoyninterval",6,"","E1A9RDSCKG54IRXTJSN7BLX05",3925151,8,,,"","","","","","","","","","","","","","",,"",30-MAR-23 10.05.49.016407000 AM,24-MAY-17 05.42.30.965502000 AM,"","",,,"","","",36,""
107558913703369238202849462305885426297,01-JUN-17 06.24.15.334541000 PM,"",,"PLSQL@IMPLESTRAT.COM","PLSQL JSON","PLSQL JSON","Simple demo of SQL Update using JSON data and PLSQL.","",107557768740223653787514013553758177271,"","","",21-DEC-23 11.10.34.149953000 PM,"PUBLIC","JSON PLSQL DML",10,"","E2Q71FNUFDMOJVPHQ88RGQNZQ",4100212,13,,,"","","","","","","","","","","","","","",,"",10-NOV-20 10.02.19.831716000 AM,01-JUN-17 06.24.15.358197000 PM,"","APPROVED",15-JUN-18 01.34.36.946096000 AM,20-JUN-18 06.02.57.107683000 PM,"sharon.kennedy@oracle.com","","",50,""
108505839759273006011554360934546446478,10-JUN-17 09.01.23.914623000 PM,"",,"FERNANDO.ABRITTA@GMAIL.COM","Prime Factors","PRIME FACTORS","Prime factors calculation","",108507258626534334384592667535280357250,"","","",03-JUL-23 11.51.26.737220000 AM,"PUBLIC","math prime",2,"","E39IFE1YNO1IAO248DM9MM3TS",4293152,1,,,"","","","","","","","","","","","","","",,"",03-JUL-23 11.51.26.737066000 AM,10-JUN-17 09.01.24.394368000 PM,"","APPROVED",15-JUN-18 01.34.36.949681000 AM,19-JUN-18 04.45.56.856544000 PM,"sharon.kennedy@oracle.com","","",37,""
105856586195242788160401336345316469881,16-MAY-17 11.26.28.526927000 AM,"",,"ENESKOROGLU@GMAIL.COM","Collate by a column","COLLATE BY A COLUMN","Collates records by a column","",105856576839762367708086680395337874419,"","","",19-MAR-24 12.52.43.228954000 PM,"PUBLIC","oracle11g, collate",4,"","EZ0K856UZB0LBI600X4CWFS3F",3760116,3,,,"","","","","","","","","","","","","","",,"",31-JAN-19 07.45.57.709667000 PM,16-MAY-17 11.26.28.590864000 AM,"","APPROVED",15-JUN-18 01.34.36.971154000 AM,19-JUN-18 03.56.02.170315000 PM,"sharon.kennedy@oracle.com","","",17,""
105347041424717734319626724507971665722,11-MAY-17 02.22.18.749829000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","PL/SQL Tracing Utility","PL/SQL TRACING UTILITY","SF_TRACE by Steven Feuerstein:  A basic, but flexible trace utility. You can choose to 
send output to a table or to the screen. Trace info is stored in the sf_trace table. Trace settings are stored in sf_trace_settings. This package also includes: * Encapsulations/improvements for DBMS_OUTPUT.PUT_LINE; * Boolean -> Varchar2 converter; * Utility that generates trace calls for all the IN arguments of your subprogram.","",105343127442151242224359698776732598872,"","","",08-AUG-24 12.49.37.487095000 AM,"PUBLIC","trace, log,put_line",10,"","EY66EY5GINF9LZ0YRMMC26QP4",3673575,4,,,"","","","","","","","","","","","","","",,"",05-APR-22 10.34.36.605594000 AM,11-MAY-17 02.22.18.790344000 PM,"","",,,"","","",48,""
105347041424989742629040016072280555322,11-MAY-17 02.27.28.880128000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Method 4 Dynamic SQL Placeholder Parsing Uitility","METHOD 4 DYNAMIC SQL PLACEHOLDER PARSING UITILITY","Overview: Helps you analyze strings for placeholders, which is defined as the colon character "":"" followed by anything but =.

Most programs have a parameter named dyn_plsql_in. If your string is part of
a dynamic PL/SQL block, you should pass TRUE for this argument. If you pass
NULL and the string ends with a semi-colon, then I will assume it is a
dynamic PL/SQL block. Why bother with this? In a dynamic SQL block, you need
to provide a bind variable for each placeholder, even if there are multiple
with the same name. In a dynamic PL/SQL block, you only provide a value for
the first occurrence of each placeholder (by name).

Note: these programs do not take into account : characters that occur within a comment or within a literal.
","",105343127442151242224359698776732598872,"","","",04-APR-24 06.21.19.990760000 AM,"PUBLIC","dynamic SQL,method 4,placeholder",2,"","EY69LI82GV80O0FHRMANGTUTC",3673636,4,,,"","","","","","","","","","","","","","",,"",26-MAY-20 07.05.47.446941000 PM,11-MAY-17 02.27.28.909587000 PM,"","",,,"","","",38,""
105347041425165036872884137302612950842,11-MAY-17 02.30.22.858411000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","SELECT * FROM [table] with PL/SQL procedure","SELECT * FROM [TABLE] WITH PL/SQL PROCEDURE"," ""In Table"" utility: use DBMS_SQL to implement a Method 4 dynamic SQL challenge.

   Overview:

   Show the rows of the table specified by the table name and optional where clause.

   This is more of a prototype than a production-quality utility; its main purpose
   is to provide a demonstration of the steps you must go through to implement
   Method 4 dynamic SQL with DBMS_SQL.

   Method 4 means that at the time you are writing your program, you either don't
   know the number and types of columns being selected or you don't know the
   number of bind variables in the dynamic string.

   In this case, since the user can supply the table name, we have no way of knowing
   which columns (and how many) will need to be selected. We will get the column
   information from ALL_TAB_COLUMNS and then use that to drive the dynamic SQL
   processing with DBMS_SQL.

   Note: in most cases, you will want to use Native Dynamic SQL for dynamic SQL
   requirements. DBMS_SQL is, however, very well suited to implementing Method 4.

   Parameters:

      table_in - name of the table or view, in the from schema.table or table.

      where_in - optional where clause. Do not include the WHERE keyword. If, however,
                 you start the where clause with ORDER BY or GROUP BY, then that
                 entire string will be added to the query. Your where clause could
                 also contain an ORDER BY or GROUP BY after the where clause.

      colname_like_in - an optional filter that is applied to the set of columns
                       to restrict which columns are displayed. A NULL value is
                  treated as ""%"" - all columns.

   Requirements:

   * Oracle91 Database or higher: intab BULK COLLECTs into a collection of records.

   Restrictions of functionality in intab:

   * Prior to Oracle Database 10g Release 2, The contents of a row, converted to
     a string, cannot be longer than 255 characters. In Oracle10g Database Release 2,
     up to 32767 characters are supported.

   * Datatypes of columns must be string, number or date -- or be of a type that can
     implicitly converted to one of these types.

   * Does not support table or column names that contain double quotes.
*/","",105343127442151242224359698776732598872,"","","",16-AUG-24 03.25.39.815149000 AM,"PUBLIC","method 4,dynamic SQL",129,"","EY66EY5H2URN1U0DBT38KWW48",3673658,4,,,"","","","","","","","","","","","","","",,"",15-JUL-24 02.36.00.809886000 PM,11-MAY-17 02.30.22.887517000 PM,"","",,,"","","",1374,""
105347041425285929454845600220083568442,11-MAY-17 02.32.28.939533000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Generate Associate Arrays Matching Table Indexes","GENERATE ASSOCIATE ARRAYS MATCHING TABLE INDEXES","Generate a package that caches a table's contents in an associative array
          and also creates ""index"" arrays for each unique index defined for the
          specified table. Note: this procedure offers the option to write out the new package to a file using UTL_FILE. As a result it does not compile on LiveSQL.","",105343127442151242224359698776732598872,"","","",17-AUG-24 02.10.10.024123000 PM,"PUBLIC","array, generate",1,"","EY66EY5IH1LZQKWBFCOMXHL8C",3673703,4,,,"","","","","","","","","","","","","","",,"",23-FEB-24 02.41.16.830238000 PM,11-MAY-17 02.32.28.979979000 PM,"","",,,"","","",63,""
105347041425606294797043476951380705082,11-MAY-17 02.35.36.158969000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Date Timezone Conversion Function","DATE TIMEZONE CONVERSION FUNCTION","An alternative implementation of standard function NEW_TIME.
    NEW_TIME accepts only US timezones, this function accepts any
    timezone in your Oracle installation (see v$timezone_names for list.)
    
    Usage example:
    alaskan_date := date_tz_convert(danish_date, 'Europe/Copenhagen', 'US/Alaska');
    
    This function is Daylight Savings Time aware. For more details read:
    http://dspsd.blogspot.dk/2012/02/date-and-dst.html
    
    Created by:   Kim Berg Hansen   http://dspsd.blogspot.dk , shared with permission.","",105347041425435836256477814237747134266,"","","",29-JUL-24 07.26.24.923878000 AM,"PUBLIC","new_time,date,conversion,timezone",22,"","EY66EY5JMAQQ3VWDK2HHQ7NWS",3673732,1,,,"","","","","","","","","","","","","","",,"",25-APR-24 11.50.25.356544000 AM,11-MAY-17 02.35.36.161682000 PM,"","",,,"","","",102,""
105347041425704217788432261914531905338,11-MAY-17 02.50.05.481268000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Enable/Disable Triggers Through PL/SQL","ENABLE/DISABLE TRIGGERS THROUGH PL/SQL","Enable or disable all/filtered list of triggers.
If action is D, DISABLED, DISABLE or DIS, then triggers are disabled.
Otherwise they are enabled. 
","",105347041425435836256477814237747134266,"","","",16-JUL-24 09.15.33.186329000 AM,"PUBLIC","",10,"","EY66EY5JYLOOB000IVKB3J3WS",3673947,5,,,"","","","","","","","","","","","","","",,"",21-OCT-23 06.44.01.517563000 PM,11-MAY-17 02.50.05.483230000 PM,"","",,,"","","",106,""
104141711631656165281350233475458414860,30-APR-17 01.43.33.737639000 AM,"",,"PLSQL@IMPLESTRAT.COM","Cant Rename System VC's anymore","CANT RENAME SYSTEM VC'S ANYMORE","JSON indexes based on Oracle JSON functions (JSON_VALUE, JSON_EXISTS, etc) add a Virtual Column (VC) to the table. The VC gets a system generated name. In Oracle 12.1 it was possible to rename the VC for usability. For example:

ALTER TABLE json_data RENAME COLUMN SYS$_NC0003 TO index_on_name_key;

But 12.2 disallows throws this error when that is attempted:

ORA-54052: System-generated functional index virtual column cannot be renamed
","",104141711631427678301443068561438947596,"","","",05-JUN-24 12.48.45.652468000 PM,"PUBLIC","JSON Index",4,"","EW9QYEW1D6Z20YSJEM59TM389",3439864,13,,,"","","","","","","","","","","","","","",,"",06-MAR-18 07.34.39.069977000 PM,30-APR-17 01.43.33.772082000 AM,"","APPROVED",15-JUN-18 01.34.36.977563000 AM,20-JUN-18 01.52.59.190068000 PM,"sharon.kennedy@oracle.com","","",53,""
105350389892046706433385462621482432511,11-MAY-17 02.53.52.688140000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Find -20NNN Codes Used in EXCEPTION_INIT","FIND -20NNN CODES USED IN EXCEPTION_INIT","This script uses regular expressions to find all EXCEPTION_INIT pragmas that reference an error code between -20999 and -20000. It queries from DBA_SOURCE, so you will need to change it to USER_SOURCE if you do not have access to DBA views. Written by Niels Hecker and shared with permission. ","",105347041425435836256477814237747134266,"","","",04-APR-24 06.31.15.605921000 AM,"PUBLIC","-20000,exception",1,"","EY7DDGWP7J0U9M77PXT9WNNU5",3674038,4,,,"","","","","","","","","","","","","","",,"",25-APR-18 02.00.18.150103000 PM,11-MAY-17 02.53.52.709074000 PM,"","",,,"","","",20,""
106108940852192178070965582600874906844,18-MAY-17 09.33.44.436054000 PM,"",,"MKUTZ1492@GMAIL.COM","Test NOT NULL function returns","TEST NOT NULL FUNCTION RETURNS","verifies if a table.column%TYPE on a Functions inherits the NOT NULL constraint. (no)","",106108797525577390921938353423735493751,"","","",01-JUL-24 12.08.44.120470000 AM,"PUBLIC","",15,"","E0E5NEIXHH84JWKCWHMU3K7QM",3816220,11,,,"","","","","","","","","","","","","","",,"",14-MAR-23 06.07.35.105689000 PM,18-MAY-17 09.33.44.443411000 PM,"","APPROVED",15-JUN-18 01.34.36.981176000 AM,15-JUN-18 04.40.42.221833000 PM,"sharon.kennedy@oracle.com","","",117,""
105349143038284116528732787082095416031,11-MAY-17 02.37.28.421939000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Elapsed Time Calculator","ELAPSED TIME CALCULATOR","This simple package uses DBMS_UTILITY.GET_CPU_TIME to calculate the elapsed time, down to the hundredth of a second, of code execution. Very useful for comparing performance of different implementations. ","",105347041425435836256477814237747134266,"","","",03-APR-24 02.13.40.019069000 PM,"PUBLIC","timer,elapsed time",30,"","EY7AR6Z9B0DTV2SHJP1EUUANL",34205106,4,,,"","","","","","","","","","","","","","",,"",19-SEP-23 01.35.02.369806000 PM,09-OCT-19 07.23.19.911248000 PM,"","APPROVED",09-OCT-19 07.23.19.906783000 PM,,"Auto Approved","","",82,""
105349143038444903662741532762331337439,11-MAY-17 02.39.26.862387000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Calculate PGA and UGA Memory Consumption","CALCULATE PGA AND UGA MEMORY CONSUMPTION","Calculate and show UGA and PGA memory consumption by the current session, using DBMS_SESSION and v$ views. Note: this package will *not* compile in LiveSQL.","",105347041425435836256477814237747134266,"","","",04-APR-24 05.57.36.486980000 AM,"PUBLIC","memory,pga,uga",7,"","EY7AR6Z94PWZE2RA2LV1NNBZL",3673797,4,,,"","","","","","","","","","","","","","",,"",15-FEB-21 02.56.41.487755000 AM,11-MAY-17 02.39.26.875111000 PM,"","",,,"","","",28,""
105349143038580303354538371229898429151,11-MAY-17 02.43.55.681472000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Magic Values Table and Package Generator","MAGIC VALUES TABLE AND PACKAGE GENERATOR","Rather than hard-code your ""magic values"", store them in a table. You can even then generate a package with constants for each value. Note: this package offers the option to save the generated package to a file with UTL_FILE, so it does not compile in LiveSQL.","",105347041425435836256477814237747134266,"","","",15-APR-24 12.34.19.212361000 PM,"PUBLIC","hardcode,magic value,generate",8,"","EY7AR60AC75BP1EYHJBSEULPT",3673843,4,,,"","","","","","","","","","","","","","",,"",17-JUN-22 07.01.02.110983000 PM,11-MAY-17 02.43.55.707808000 PM,"","",,,"","","",42,""
105349143038811208186084765402267308767,11-MAY-17 02.47.39.737500000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Delimited String Parsing Package","DELIMITED STRING PARSING PACKAGE","A delimited string parsing package that handles three types of lists: simple delimited, nested delimited (lists within lists) and named, nested delimited strings. ","",105347041425435836256477814237747134266,"","","",04-APR-24 06.21.36.837400000 AM,"PUBLIC","parse,delimited",2,"","EY7AR60A58L7EKMB4S79QML31",3673906,4,,,"","","","","","","","","","","","","","",,"",10-MAY-19 07.56.40.752826000 AM,11-MAY-17 02.47.39.789303000 PM,"","",,,"","","",19,""
105349143038992547059026959778473235167,11-MAY-17 02.51.33.693665000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Show Result Cache Dependencies","SHOW RESULT CACHE DEPENDENCIES","This procedure displays all the dependencies for the result cache of the 
specified program unit (name_like_in). You can also provide an optional
""action"" that is included in the header of the output.

For this procedure to compile you will need SELECT privileges on the following
v$ views:

grant select on sys.v_$result_cache_objects to test_user;
grant select on sys.v_$result_cache_dependency to test_user;

The original version of this utility was provided by Valentin Nikotin. Shared with permission.","",105347041425435836256477814237747134266,"","","",14-MAY-24 04.29.12.275137000 AM,"PUBLIC","result cache,dependency",5,"","EY7AR60BS0VOXNF8922U9HNQP",3673978,4,,,"","","","","","","","","","","","","","",,"",04-FEB-23 03.05.18.296658000 PM,11-MAY-17 02.51.33.695885000 PM,"","",,,"","","",55,""
105349143040809562565907747428056617695,11-MAY-17 02.55.59.764620000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Call Stack Parsing Utility","CALL STACK PARSING UTILITY","Overview: Extract the last program in the call stack
             (the entry at the top of the stack) and return
              either a record of all the individual elements
              from the call stack, or simply the program name and type.","",105347041425435836256477814237747134266,"","","",08-MAY-24 10.45.08.811647000 PM,"PUBLIC","call stack",5,"","EY7AR60H5BW5GQMAXENMAKKMP",3674089,4,,,"","","","","","","","","","","","","","",,"",19-FEB-21 03.20.36.059894000 PM,11-MAY-17 02.56.29.739077000 PM,"","",,,"","","",16,""
105349143040993319290489171062611956447,11-MAY-17 02.58.19.617642000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Optimization of Deterministic Function in PL/SQL Block","OPTIMIZATION OF DETERMINISTIC FUNCTION IN PL/SQL BLOCK","This script tests whether in Oracle Database 11g and higher,
   use of the DETERMINISTIC keyword will result in caching of IN and
   RETURN values, leading to optimization that avoids unnecessary
   execution of the function - but only if the IN value is static
   at the time of compilation. If the argument value is an expression,
   then the optimization does not occur.
   
   _Nikotin has also confirmed through analysis of trace files that 
   for the n function below, when called with a compile-time static value, 
   the loop itself is optimized right out of the compiled code.

   Note: we believe, however, that the optimization that occurs is a
   by product of loop/invariant optimization rather than optimizaiton
   of the deterministic function.","",105347041425435836256477814237747134266,"","","",02-MAY-24 01.32.38.220753000 PM,"PUBLIC","deterministic",1,"","EY7AR60ISE4C5COR62J2CELBL",3674111,4,,,"","","","","","","","","","","","","","",,"",08-MAR-18 09.53.42.238110000 AM,11-MAY-17 02.58.19.648006000 PM,"","",,,"","","",30,""
105385131163257378052279953695359821388,11-MAY-17 11.28.08.443127000 PM,"",,"KATSUMI.INOUE@ORACLE.COM","Running Total(累積合計)","RUNNING TOTAL(累積合計)","Oracle Code Tokyo セッションで予定していた内容
https://blog.jooq.org/2014/04/29/nosql-no-sql-how-to-calculate-running-totals/
","",105385109275620454305686294977166577846,"","","",20-APR-24 01.25.41.940178000 AM,"PUBLIC","running total excel window ",6,"","E2HVM5GVL05OWWN1IPW0RS2JB",3679623,7,,,"","","","","","","","","","","","","","",,"",03-AUG-21 05.10.02.324684000 AM,11-MAY-17 11.28.08.490716000 PM,"","",,,"","","",39,""
104694238343330011505276438840865357094,05-MAY-17 10.21.50.189204000 AM,"",,"DANIEL.NELLE@MERLIN-ZWO.DE","Generate Values","GENERATE VALUES","Generate a series of Values with an SQL statement and without real data.","",104700785814674115595146221835271155942,"","","",27-APR-24 02.51.23.793227000 PM,"PUBLIC","generate values, generate series",1,"","EX5HVU5FF6RJVA8MXGXXLG50O",3551684,3,,,"","","","","","","","","","","","","","",,"",05-MAY-17 10.22.31.522578000 AM,05-MAY-17 10.21.50.201751000 AM,"","APPROVED",15-JUN-18 01.34.36.984577000 AM,19-JUN-18 04.23.58.282871000 PM,"sharon.kennedy@oracle.com","","",10,""
107211627242822997696393397103269435433,29-MAY-17 11.32.20.875703000 AM,"",,"ARTJOMS.BROVKINS@GMAIL.COM","accessed_by_pipelined_error","ACCESSED_BY_PIPELINED_ERROR","Small demo on issue with pipelined functions in packages with ACCESSIBLE BY clause.","",107207674012651561340681028714449476844,"","","",04-APR-24 10.56.48.649611000 AM,"PUBLIC","accessible_by, pipelined",1,"","E16S1I95PEL5XJBNM2LKM797V",4031001,14,,,"","","","","","","","","","","","","","",,"",10-JUN-17 12.12.11.963978000 PM,29-MAY-17 11.32.20.974812000 AM,"","APPROVED",15-JUN-18 01.34.36.991514000 AM,19-JUN-18 06.47.12.892018000 PM,"sharon.kennedy@oracle.com","","",35,""
107638860416499714864808069536154276674,02-JUN-17 01.34.17.206747000 PM,"",,"DUKE.GANOTE@GMAIL.COM","Compare CROSS APPLY with Analytic Function-based Ranking and Join","COMPARE CROSS APPLY WITH ANALYTIC FUNCTION-BASED RANKING AND JOIN","CROSS APPLY demonstrated for a ""nearest"" JOIN issue. Specifically, an exactly join between two tables on column PK1, but a ""closest match"" for column PK2.","",107638860416301451030391270351502463810,"","","",08-MAY-24 03.25.57.889237000 AM,"PUBLIC","CROSS APPLY",4,"","E2VGT4YF1TKMLZNBBTMVYP4LW",4113377,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",15-DEC-22 12.31.10.924650000 PM,02-JUN-17 01.34.17.215174000 PM,"","APPROVED",15-JUN-18 01.34.36.994945000 AM,19-JUN-18 04.28.23.259217000 PM,"sharon.kennedy@oracle.com","","",41,""
105970448630059053722198992013887209400,17-MAY-17 02.10.00.022142000 PM,"",,"ORACLE@ORCHESTRAPIT.CO.UK","add nullable column with default value","ADD NULLABLE COLUMN WITH DEFAULT VALUE","Test case in response to http://stackoverflow.com/questions/44005270/add-column-in-oracle-with-default-value-and-nullable-column-type?noredirect=1#comment75080427_44005270","",105962110932403348038168375486298340606,"","","",20-FEB-24 11.48.30.918292000 PM,"PUBLIC","default value, nullable column",9,"","GU6SSLFUSWYGLTWLUNO0XUCC0",13678629,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",06-MAY-20 07.22.09.949587000 PM,20-JUN-18 08.49.33.855732000 PM,"","APPROVED",20-JUN-18 08.49.33.719197000 PM,21-JUN-18 01.16.21.095954000 PM,"sharon.kennedy@oracle.com","Public scripts should be generally usable, this does not seem to be.  If this needs to be accessed by others, please use Unlisted.","",61,""
106556132953844900061449192426976192501,23-MAY-17 04.55.52.431170000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","partitioning_composite","PARTITIONING_COMPOSITE","SQL from the KISS (Keep It Simply SQL) Partitioning video series by Developer Advocate Connor McDonald. This script demonstrates a composite partitioned table.","",106556132953727634256946573397029693429,"","","",09-MAY-24 12.51.56.444707000 PM,"PUBLIC"," kiss, partitioning, developer advocates, range",4,"","E04YW3K8RS3LRY8A9DUJUU3BB",3894060,8,,,"","","","","","","","","","","","","","",,"",09-MAY-24 12.51.56.444567000 PM,23-MAY-17 04.55.52.469317000 AM,"","",,,"","","",28,""
116717574568967711676652286029857488439,28-AUG-17 11.31.38.100648000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Use TABLE Operator with Associative Arrays in Oracle Database 12c (for blog post)","USE TABLE OPERATOR WITH ASSOCIATIVE ARRAYS IN ORACLE DATABASE 12C (FOR BLOG POST)","This script ""backs up"" the post written by Steven Feuerstein demonstrating the use of TABLE with associative arrays. It also includes the block submitted by a reader ""Will this work?"" (Volker).","",4811457339817,"","","",06-MAY-24 10.14.19.361283000 PM,"PUBLIC","12c,12.1,collection,table",23,"","FHFM1C2UJS3O55JIAE7RMK0HG",5785265,4,,,"","","","","","","","","","","","","","",,"",12-JUL-22 01.54.59.745570000 PM,28-AUG-17 11.32.11.162225000 AM,"","",,,"","","",64,""
117027695390692496273352561116446364063,31-AUG-17 10.06.02.733177000 AM,"",,"ABINASH.BEHERA1@OUTLOOK.COM","ROW_NUMBER(), RANK(), DENSE_RANK() WITH EXAMPLE","ROW_NUMBER(), RANK(), DENSE_RANK() WITH EXAMPLE","ROW_NUMBER(), RANK(), DENSE_RANK() WITH EXAMPLE","",117025948474234665653627624206172327606,"","","",22-AUG-24 07.20.08.978515000 AM,"PUBLIC","",539,"","FHXBAJ4LIC7DHZFXP332HAH4O",5873624,1,,,"","","","","","","","","","","","","","",,"",16-AUG-24 07.42.15.838151000 PM,31-AUG-17 10.21.47.672864000 AM,"","APPROVED",15-JUN-18 01.34.37.586781000 AM,19-JUN-18 06.28.22.955571000 PM,"sharon.kennedy@oracle.com","","",1341,""
118541684303215214859026173420404113794,14-SEP-17 11.01.07.868211000 PM,"",,"DRIBEIRO@UTE.COM.UY","Collate columns","COLLATE COLUMNS","Creation of table with COLLATE BINARY_CI and BINARY_AI columns (available in version 12.2).","",118541684302743733789376468042268705154,"","","",16-APR-24 08.22.43.083667000 AM,"PUBLIC","COLLATE BINARY_CI BINARY_AI",7,"","FKC0TDXLVP4KF5XAC5DT1FRQ1",6213542,14,,,"","","","","","","","","","","","","","",,"",12-JUL-23 10.10.36.615605000 AM,14-SEP-17 11.01.07.904203000 PM,"","APPROVED",15-JUN-18 01.34.37.596604000 AM,15-JUN-18 04.00.49.373110000 PM,"sharon.kennedy@oracle.com","","",30,""
118637814830480426815057253258270231010,15-SEP-17 08.40.03.264140000 PM,"",,"DRIBEIRO@UTE.COM.UY","ALTER SESSION SET NLS_COMP AND NLS_SORT","ALTER SESSION SET NLS_COMP AND NLS_SORT","Setting NLS_COMP and NLS_SORT parameters at the session level","",118634476556654302112131012088369435489,"","","",04-APR-24 10.47.52.803567000 AM,"PUBLIC","ALTER SESSION NLS_COMP NLS_SORT",15,"","GU6SSLFUR5L47ZS7JOKEMEWPG",6237883,333804701807972275005933417866206051852,,,"","","","","","","","","","","","","","",,"",25-MAY-23 04.24.27.170024000 AM,15-SEP-17 08.40.03.279024000 PM,"","APPROVED",20-JUN-18 07.12.03.991839000 PM,21-JUN-18 01.15.53.175651000 PM,"sharon.kennedy@oracle.com","Can you please remove the statements that end in error.","",64,""
118502516575920636579276621773361821362,14-SEP-17 02.56.01.237777000 PM,"",,"PAUL.MARINO@TIA.COM.EC","Multicolumn Range bug","MULTICOLUMN RANGE BUG","Multicolumn Range Bug","",118502865647031180420197876688099142576,"","","",12-JUN-24 09.49.15.027879000 PM,"PUBLIC","",2,"","FKAWUT4RY6FMPJ8S6Y6C43EHE",6205724,8,,,"","","","","","","","","","","","","","",,"",21-SEP-22 01.39.30.862614000 PM,14-SEP-17 02.56.01.242249000 PM,"","APPROVED",15-JUN-18 01.34.37.617592000 AM,19-JUN-18 05.02.22.309105000 PM,"sharon.kennedy@oracle.com","","",16,""
118596239008342898986894292314390960648,15-SEP-17 11.56.46.190729000 AM,"",,"GAMUANDANJI@YAHOO.DE","Rechnungen.pkb","RECHNUNGEN.PKB","This is the package Body that generates Invoices for our customers.","",29021850401868,"","","",30-APR-24 09.51.39.079174000 AM,"PUBLIC","",12,"","FKFS98FEZUB7AXM61JNWX1RHQ",,6,,,"","","","","","","","","","","","","","",,"",20-FEB-21 09.37.27.833382000 AM,15-SEP-17 11.56.46.363831000 AM,"","APPROVED",15-JUN-18 01.34.37.622561000 AM,19-JUN-18 03.59.25.415714000 PM,"sharon.kennedy@oracle.com","","",41,""
118185749977928717566473291007909346838,11-SEP-17 12.08.15.708529000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Using CONTINUE-WHEN for easy-to-read loop logic","USING CONTINUE-WHEN FOR EASY-TO-READ LOOP LOGIC","The CONTINUE WHEN statement exits the current iteration of a loop when the condition in its WHEN clause is true, and transfers control to the next iteration of either the current loop or an enclosing labeled loop.

Each time control reaches the CONTINUE WHEN statement, the condition in its WHEN clause is evaluated. If the condition is not true, the CONTINUE WHEN statement does nothing.","",109686504183041,"","","",01-AUG-24 06.22.15.495214000 AM,"PUBLIC","continue, loop,goto",17,"","FJR9DDLGB2A1OFWQYI1I5OXWO",6107530,4,,,"","","","","","","","","","","","","","",,"",01-AUG-24 06.11.47.514849000 AM,11-SEP-17 12.11.39.823334000 PM,"","",,,"","","",63,""
117587099489741461053981853285440181442,05-SEP-17 06.52.27.332567000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Using Dynamic SQL for Multi-row Queries","USING DYNAMIC SQL FOR MULTI-ROW QUERIES","This script contains the code for my Oracle Magazine article of the same name.","",4995965590273,"","","",17-JUN-24 03.43.13.579204000 PM,"PUBLIC","dynamic sql",59,"","FJZ27Y8LX1TGDQCNXE3IM8TLB",5983467,4,,,"","","","","","","","","","","","","","",,"",17-JUN-24 03.43.13.579094000 PM,05-SEP-17 08.26.26.454137000 PM,"","",,,"","","",162,""
120013174134411253970408292635896350937,29-SEP-17 01.11.52.315267000 AM,"",,"RBEERS@BLACKHAWKENTERPRISE.COM","regexp_replace json values","REGEXP_REPLACE JSON VALUES","replacing json value if it contains list of words","",120014915648668002080950228343109382944,"","","",09-JUN-24 04.51.55.283256000 PM,"PUBLIC","",5,"","FMPQRXNJKJKJ3TTHN9WAUD9GR",6579703,1,,,"","","","","","","","","","","","","","",,"",28-FEB-22 07.45.36.558251000 AM,29-SEP-17 01.11.52.402962000 AM,"","APPROVED",15-JUN-18 01.34.37.721949000 AM,19-JUN-18 04.03.25.817012000 PM,"sharon.kennedy@oracle.com","","",25,""
126571763758554475735364500186922117425,30-NOV-17 07.52.05.858362000 PM,"",,"JBHARDWAJ_BE16@THAPAR.EDU","Local Procedure","LOCAL PROCEDURE","Local procedure to return multiple values i.e. addition, subtraction, multiplication and division of two numbers","",126573909403638460791057524356507419420,"","","",31-JUL-24 04.07.58.028847000 AM,"PUBLIC","Local procedure",101,"","FW8BK3LFDYX5CDDBLA12VA3J3",8480803,6,,,"","","","","","","","","","","","","","",,"",28-JUL-24 11.37.42.657860000 AM,30-NOV-17 07.52.06.098300000 PM,"","APPROVED",15-JUN-18 01.34.38.950875000 AM,15-JUN-18 05.48.23.164953000 PM,"sharon.kennedy@oracle.com","","",390,""
126986463440892410606651080176759907630,04-DEC-17 07.23.26.547593000 PM,"",,"TYSON.JOUGLET@GMAIL.COM","replace inside a string","REPLACE INSIDE A STRING","demonstrates how to insert a string at a specific location of another string.","",126985379735583061165256349759352481207,"","","",07-MAY-24 04.57.17.258846000 AM,"PUBLIC","regexp string",4,"","FXV9B3BNRZHDBMC532V2M86TC",8580739,1,,,"","","","","","","","","","","","","","",,"",26-OCT-22 08.50.15.353753000 AM,04-DEC-17 07.23.26.595074000 PM,"","APPROVED",15-JUN-18 01.34.38.963729000 AM,20-JUN-18 06.00.37.868501000 PM,"sharon.kennedy@oracle.com","","",45,""
126664201633752104892780838121273705908,01-DEC-17 04.30.29.402899000 PM,"",,"GERD@KOCK-IT-SERVICE.DE","Ostern_und_Feiertage.sql","OSTERN_UND_FEIERTAGE.SQL","English Description (German description below; Deutsche Beschreibung ist unten)
--------------------
This script contains two functions:
1.)
wannistostern(p_date in date) return date

For the given year it calculates the Easter sunday.

2.)
Ist_Feiertag(p_date in date) return varchar2

The given date is checked against a list of holidays and it gets checked if it is Easter sunday, easter monday or good friday.
If so, the Name of the Holiday ist returned, otherwise null is returned.
--------------------------------------------------------
Dieses Skript enthält zwei Funktionen:
1.)
wannistostern(p_date in date) return date

Zu dem Jahr des übergebenen Datums wird der Ostersonntag berechnet.

2.)
Ist_Feiertag(p_date in date) return varchar2

Das übergebene Datum wird mit einer Liste fester Feiertage sowie mit den jeweiligen Osterfeiertagen verglichen.
Ist das übergebene Datum ein Feiertag, wird sein Name zurückgegeben, andernenfalls wird null zurückgegeben.","",126660710902881113984376525859513319417,"","","",16-MAY-24 05.01.21.854624000 AM,"PUBLIC","date function easter sunday holiday ostersonntag feiertage",4,"","FXDNN71FW9JK9XR2E9EBW835I",8500869,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",01-FEB-24 12.03.40.928720000 PM,01-DEC-17 04.30.29.753509000 PM,"","APPROVED",15-JUN-18 01.34.38.977821000 AM,19-JUN-18 04.00.45.186986000 PM,"sharon.kennedy@oracle.com","","",33,""
127063692389074492668762893901774904580,05-DEC-17 01.40.01.735655000 PM,"",,"EDDYCAEL@HOTMAIL.COM","A - Dynamic Query","A - DYNAMIC QUERY","Dynamic Query","",127065868663474420479578252559013051137,"","","",09-MAY-24 03.34.42.273678000 PM,"PUBLIC","",17,"","FX0PTGLUI9BAWS8G7J740J29Y",8605582,1,,,"","","","","","","","","","","","","","",,"",09-MAY-24 03.34.42.273282000 PM,05-DEC-17 01.40.01.856855000 PM,"","APPROVED",15-JUN-18 01.34.38.987561000 AM,15-JUN-18 05.08.03.935317000 PM,"sharon.kennedy@oracle.com","","",53,""
126686539931312173585842272778951780262,01-DEC-17 09.24.31.714590000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Logic Truth Table","LOGIC TRUTH TABLE","x and y, x or y, not x - do you know what those expressions yield for all combinations of true, false and null? This script implements the Logic Truth Table you can find in the doc set here: https://docs.oracle.com/database/122/LNPLS/plsql-language-fundamentals.htm#LNPLS251","",102852124628322,"","","",03-APR-24 02.35.15.403078000 PM,"PUBLIC","boolean,logic,truth,table",13,"","FXEX3BA5SSDBQOIAUY66TE404",8506549,4,,,"","","","","","","","","","","","","","",,"",30-MAR-22 01.53.14.072024000 PM,01-DEC-17 09.25.00.476646000 PM,"","",,,"","","",38,""
126968223127312745349460112140244021908,04-DEC-17 03.00.21.314616000 PM,"",,"EDDYCAEL@HOTMAIL.COM","A - Counting Executions","A - COUNTING EXECUTIONS","count the number of executions","",126968141673710516415800538946305917507,"","","",24-APR-24 02.08.59.799087000 PM,"PUBLIC","",59,"","FXU7FKB1VCBLWWZKPZXQ6JYF6",8572223,1,,,"","","","","","","","","","","","","","",,"",16-MAY-22 06.09.20.642325000 AM,04-DEC-17 03.00.21.389721000 PM,"","APPROVED",15-JUN-18 01.34.39.033326000 AM,15-JUN-18 05.08.13.818467000 PM,"sharon.kennedy@oracle.com","","",83,""
126648558720409146347027990026222501885,01-DEC-17 01.23.15.837139000 PM,"",,"EDDYCAEL@HOTMAIL.COM","A - Hard Parse","A - HARD PARSE","A hard parse execution","",126646883870507400131981295519204543065,"","","",04-APR-24 11.34.11.605107000 AM,"PUBLIC","",36,"","FXCQ5Z3X1RB6778F9LEN05MY3",8496045,1,,,"","","","","","","","","","","","","","",,"",01-DEC-22 03.53.28.183981000 AM,01-DEC-17 01.23.15.915684000 PM,"","APPROVED",15-JUN-18 01.34.39.040078000 AM,15-JUN-18 05.07.55.104605000 PM,"sharon.kennedy@oracle.com","","",20,""
127063693275477161717877815494572702387,05-DEC-17 12.00.12.223372000 PM,"",,"ROGEL@WEB.DE","ctx_preference_values error","CTX_PREFERENCE_VALUES ERROR","answer to https://twitter.com/xtner/status/938007264463638529","",127062919544050839921169785412496559511,"","","",28-JUL-21 11.16.16.084622000 AM,"PUBLIC","",2,"","FX0PTIZSA30NQH9CPT2K92GQT",8602666,1,,,"","","","","","","","","","","","","","",,"",30-AUG-20 12.34.49.627784000 PM,05-DEC-17 12.00.13.058946000 PM,"","APPROVED",15-JUN-18 01.34.39.047610000 AM,18-JUN-18 05.54.36.009478000 PM,"sharon.kennedy@oracle.com","","",2,""
126278243481422054989779501887563387242,27-NOV-17 11.35.40.831543000 PM,"",,"SHARON.KENNEDY@ORACLE.COM","How to add days to a date column","HOW TO ADD DAYS TO A DATE COLUMN","Adding days to a date column is very simple within Oracle, you just add the number to the date and Oracle handles spanning the months (and years).  Note this is for date columns, not timestamps.","",126278243480711206607846099932836155754,"","","",20-JUL-24 09.45.50.262227000 PM,"PUBLIC","",46,"","FWRDNB4KCR5BB6XW6DOHVAAC8",8385563,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",07-MAR-24 04.11.30.877637000 PM,27-NOV-17 11.38.06.473979000 PM,"","",,,"","","",228,""
125688962761979776951403028119118553702,22-NOV-17 08.26.49.790618000 AM,"",,"ALPERT@MINERVA.COM.TR","Dynamic Cursor","DYNAMIC CURSOR","Dynamic Cursor","",7087230918432,"","","",03-APR-24 02.50.02.557471000 PM,"PUBLIC","",9,"","FVTC3769TA7BE1MP7PJV0IQJ8",8243172,6,,,"","","","","","","","","","","","","","",,"",11-DEC-22 06.00.43.346408000 PM,22-NOV-17 08.30.35.318719000 AM,"","APPROVED",15-JUN-18 01.34.39.075692000 AM,19-JUN-18 04.01.24.952520000 PM,"sharon.kennedy@oracle.com","","",56,""
126253414348846592960505819249517413008,27-NOV-17 06.06.52.600995000 PM,"",,"NICOLAS.CHARRIER1975@LAPOSTE.NET","Improvement of re-raised exception backtrace in 12c","IMPROVEMENT OF RE-RAISED EXCEPTION BACKTRACE IN 12C","In Oracle 12c, the backtrace of a re-raised exception displays all the code line number where the exception was raised or re-raised.
Up to Oracle 11g, the backtrace would only display the last code line number where the exception was re-raised.","",126250589616824005682311221576160955984,"","","",04-APR-24 06.00.40.763724000 AM,"PUBLIC","",6,"","FWPX1WSEKWX3LIM47CYYPQDCY",11982743,4,,,"","","","","","","","","","","","","","",,"",23-APR-18 11.37.08.859177000 AM,23-APR-18 11.38.30.723807000 AM,"","APPROVED",15-JUN-18 01.34.39.083890000 AM,19-JUN-18 04.27.43.193163000 PM,"sharon.kennedy@oracle.com","","",14,""
127382055757114872035565018363388894178,08-DEC-17 01.28.23.140673000 PM,"",,"MARTIN.WILDE@EXEVENTU.COM","Partinion by name access bug","PARTINION BY NAME ACCESS BUG","Given a table partitioned by range and subpartitioned by hash. If we join partitions of this table accessing the partitions or subpartitions by partition_name and do the join only by the subpartition key, then defining an explicit value for the partition key of one of the tables in the where clause leads to an empty result set. ","",127377913541187767956861166921649417879,"","","",12-JUN-24 09.51.13.074514000 PM,"PUBLIC","bug partitioning nodata",3,"","FYI3DOZ5IOBEGGSTHWF12HUUS",8694432,8,,,"","","","","","","","","","","","","","",,"",23-JAN-24 01.01.22.551840000 PM,08-DEC-17 01.28.23.243437000 PM,"","APPROVED",15-JUN-18 01.34.39.129354000 AM,20-JUN-18 02.03.06.105243000 PM,"sharon.kennedy@oracle.com","","",34,""
125666308445181797184263093536235854333,22-NOV-17 03.29.10.512261000 AM,"",,"JEFFREY.KEMP@JK64.COM","Cross Join is not the same as ,","CROSS JOIN IS NOT THE SAME AS ,","Oracle SQL allows tables to be joined using a combination of the old comma-separated (,) syntax along with the newer ANSI joins (such as CROSS JOIN).

In some ways, the "","" operator can be considered as a variation on a CROSS JOIN; however, the Oracle SQL syntax does not treat these exactly the same. Instead, the "","" operator separates the FROM clause into separate parts, and each ON clause can only see columns from the tables involved in its part.","",125666308444365772256023218843309185533,"","","",13-JUL-24 06.46.07.819956000 AM,"PUBLIC","ANSI, CROSS JOIN",6,"","FVR11HUX9SQYPRR0B374S5JE3",8234838,3,,,"","","","","","","","","","","","","","",,"",06-JUN-22 04.11.43.499854000 PM,22-NOV-17 03.29.10.523754000 AM,"","APPROVED",15-JUN-18 01.34.39.155216000 AM,20-JUN-18 01.52.35.383789000 PM,"sharon.kennedy@oracle.com","","",77,""
125785118378575700780439554312328898631,23-NOV-17 06.47.02.387670000 AM,"",,"KUMARARJUN510@GMAIL.COM","Armstrong","ARMSTRONG","Armstrong number =153 or not","",125784614403487564969307754094184274788,"","","",05-APR-23 06.19.07.691478000 AM,"PUBLIC","",2,"","FVYWXGV8IWADVGUUYIDZBAD3D",8271605,1,,,"","","","","","","","","","","","","","",,"",21-SEP-22 05.02.48.099045000 PM,23-NOV-17 06.47.02.400197000 AM,"","APPROVED",15-JUN-18 01.34.39.158858000 AM,19-JUN-18 04.17.39.543670000 PM,"sharon.kennedy@oracle.com","","",17,""
126968141675001649191148962904892113475,04-DEC-17 02.36.00.418684000 PM,"",,"EDDYCAEL@HOTMAIL.COM","A - Soft Parse","A - SOFT PARSE","Sof parse example","",126968141673710516415800538946305917507,"","","",21-JUN-23 01.16.34.579052000 PM,"PUBLIC","",15,"","FXU69GY4BHMZ4FYIOIY8WECID",8571382,1,,,"","","","","","","","","","","","","","",,"",23-MAR-22 08.19.15.163013000 PM,04-DEC-17 02.36.00.514791000 PM,"","APPROVED",15-JUN-18 01.34.39.194918000 AM,15-JUN-18 05.07.45.701133000 PM,"sharon.kennedy@oracle.com","","",7,""
131529082916920692998230403586472938464,17-JAN-18 06.10.41.920999000 AM,"",,"SIDJAIN2485@GMAIL.COM","Comma separated string to list of values","COMMA SEPARATED STRING TO LIST OF VALUES","This script change comma separated values to list of values","",131517042006603021909252651013550817542,"","","",11-AUG-22 02.49.04.726972000 PM,"PUBLIC","Comma separated string to table",2,"","F5HXFLHTW0VSBECIVR920WRX5",9478005,3,,,"","","","","","","","","","","","","","",,"",06-FEB-18 02.23.01.429942000 PM,17-JAN-18 06.10.42.289101000 AM,"","APPROVED",15-JUN-18 01.34.39.511496000 AM,19-JUN-18 04.01.50.173489000 PM,"sharon.kennedy@oracle.com","","",8,""
132658674243438657290188275392218542134,28-JAN-18 04.12.57.823788000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","PL/SQL the Block Structured Language","PL/SQL THE BLOCK STRUCTURED LANGUAGE","This script demonstrates some basic aspects of the PL/SQL block. A PL/SQL block is defined by the keywords DECLARE, BEGIN, EXCEPTION, and END. These keywords divide the block into a declarative part, an executable part, and an exception-handling part. Only the executable part is required. A block can also have a label, essentially giving a name to an otherwise ""anonymous"" block.","",6732681110975,"","","",08-AUG-24 12.50.54.265429000 AM,"PUBLIC","block",27,"","F6ZN8QFHUEJ8QQMUUPG8XU3J8",9842067,4,,,"","","","","","","","","","","","","","",,"",02-JUN-24 06.31.29.382555000 AM,05-FEB-18 08.59.46.841476000 PM,"","",,,"","","",142,""
146080830976316440726546087161270948321,05-JUN-18 01.45.55.443758000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Use Conditional Compilation to Test Private Subprograms","USE CONDITIONAL COMPILATION TO TEST PRIVATE SUBPROGRAMS","There is no way to unit test subprograms defined in the package body. But if you really want to, you could use conditional compilation to add them to the package spec - only when you want to test...using $$ flags!","",15258477103598,"","","",04-APR-24 06.14.55.771089000 AM,"PUBLIC","conditional compilation,test",3,"","GSIFLW6R0EE37PUV8QQ0YIS73",14441618,4,,,"","","","","","","","","","","","","","",,"",12-DEC-20 09.30.18.823270000 PM,20-JUL-18 02.12.46.360263000 PM,"","APPROVED",20-JUL-18 02.12.46.341730000 PM,,"Auto Approved","","",13,""
146342785400915890344093153490836961252,08-JUN-18 02.13.42.917311000 AM,"",,"DARRYL.HURLEY@MCKESSON.COM","Path Expression Item Methods","PATH EXPRESSION ITEM METHODS","Path Expression Item Methods
Demonstrate the type, string, number, boolean, stringOnly, numberOnly and booleanOnly item methods in JSON path expressions using the JSON_VALUE SQL function.
","",146337039020469825136603473588884629685,"","","",15-FEB-24 11.43.02.761171000 AM,"PUBLIC","JSON SQL Path Expression",5,"","GSXJYANPAW71F5JJ5YOXJHXTI",13261236,13,,,"","","","","","","","","","","","","","",,"",19-AUG-21 06.00.34.104115000 AM,08-JUN-18 02.13.42.929688000 AM,"","APPROVED",15-JUN-18 01.34.43.128536000 AM,18-JUN-18 02.59.19.291230000 PM,"sharon.kennedy@oracle.com","","",22,""
147788688718756027974847250382273173187,21-JUN-18 10.29.18.334496000 PM,"",,"DON.SIMPSON@GOLDBLATTSYSTEMS.COM","Bulk collect into an existing collection","BULK COLLECT INTO AN EXISTING COLLECTION","How do you bulk add data to a collection that already has data?","",147788688718664149612556538564995503811,"","","",18-APR-24 03.48.42.344023000 PM,"PUBLIC","",3,"","GVC2YBVS8YW06T9G0QVZFAZ75",13721501,4,,,"","","","","","","","","","","","","","",,"",02-AUG-21 10.47.39.295853000 AM,21-JUN-18 10.29.18.383989000 PM,"","APPROVED",21-JUN-18 10.29.18.331435000 PM,22-JUN-18 02.14.15.177117000 PM,"sharon.kennedy@oracle.com","","",54,""
146954931943557308202537786224327577571,13-JUN-18 10.38.30.309992000 PM,"",,"DRIBEIRO@UTE.COM.UY","Perform accent insensitive fulltext search","PERFORM ACCENT INSENSITIVE FULLTEXT SEARCH","Create a domain index in a way it is not sensitive to the accents","",146950383491863238485681822904733163546,"","","",08-JUL-24 09.48.07.444549000 PM,"PUBLIC","CTX_DDL CREATE_PREFERENCE SET_ATTRIBUTE INDEX CONTEXT CONTAINS",13,"","GVUL6U3TM97WR9KD7NRCL52ZW",13741837,893254896586036118486907198353590179,,,"","","","","","","","","","","","","","",,"",30-MAY-23 05.37.47.686405000 AM,22-JUN-18 04.06.29.765762000 PM,"","APPROVED",22-JUN-18 03.59.29.301612000 PM,25-JUN-18 12.02.05.234257000 PM,"sharon.kennedy@oracle.com","Can you please remove the statements that end in error.","",64,""
147095141918041147657247921343273137721,15-JUN-18 06.51.13.171680000 AM,"",,"JOHNSON27081996@GMAIL.COM","EasyShopRetailApplication","EASYSHOPRETAILAPPLICATION","This is the sql executing query for EasyShop Retail Application
","",147088634806132208326774388922795191365,"","","",22-AUG-24 09.37.32.183820000 AM,"PUBLIC","sql query",83,"","GUO4KDRCF4SS1CBZET1OXR974",13528258,11,,,"","","","","","","","","","","","","","",,"",20-MAY-24 12.33.53.825835000 PM,15-JUN-18 06.51.13.432091000 AM,"","APPROVED",15-JUN-18 06.51.13.144635000 AM,18-JUN-18 02.56.29.152212000 PM,"sharon.kennedy@oracle.com","","",253,""
147696651092940961313487279671946827293,21-JUN-18 01.58.08.505993000 AM,"",,"IJHY18@GMAIL.COM","INNER JOIN with CASE Statement","INNER JOIN WITH CASE STATEMENT","INNER JOIN with CASE Statement","",147694942826245729265063567804987133824,"","","",19-AUG-24 03.02.45.208619000 PM,"PUBLIC","",38,"","GU6SL047DAOXGT8PDVXBH92G1",13684541,3,,,"","","","","","","","","","","","","","",,"",12-APR-24 11.04.24.004647000 PM,21-JUN-18 02.06.55.635973000 AM,"","APPROVED",21-JUN-18 01.58.08.491350000 AM,21-JUN-18 01.16.40.419392000 PM,"sharon.kennedy@oracle.com","","",346,""
147802838169269783594806292699423749965,22-JUN-18 02.45.03.888074000 AM,"",,"FERNANDO.PONTE@STELLARCONSULTING.CO.NZ","Query Table with JSON Data Type","QUERY TABLE WITH JSON DATA TYPE","This script created a table with a CLOB attribute to save JSON documents.
A query shows how to Query the collection and extract different nodes.","",147802838169102951831699473873314297677,"","","",01-NOV-23 05.31.58.732766000 PM,"PUBLIC","Select JSON contents from a Collection",11,"","GVULRUUDSYVJ2VFYSINYS7778",13798217,13,,,"","","","","","","","","","","","","","",,"",20-AUG-18 09.38.08.041522000 PM,25-JUN-18 09.32.26.417010000 AM,"","APPROVED",25-JUN-18 09.33.40.966423000 AM,25-JUN-18 12.04.17.073134000 PM,"sharon.kennedy@oracle.com","Can you please run this and re-save.  The results are not displayed.","",26,""
146818881711408821518779170033746345935,12-JUN-18 03.26.33.175153000 PM,"",,"DUKE.GANOTE@GMAIL.COM","Star Cross Dimensions from EMP","STAR CROSS DIMENSIONS FROM EMP","Example of a simple dimension for employee, split into 2 related dimension: one for employee, the other for salary. They share a relationship, but it's not a snowflake.","",146810143635819592404454231571042159663,"","","",15-JUL-24 06.49.28.140837000 PM,"PUBLIC","Romeo and Juliet",17,"","GTO099NADUIMHVH6UM1XIHDGH",13362286,337949986681008890389062074985729416032,,,"","","","","","","","","","","","","","",,"",11-MAY-24 02.41.31.438951000 PM,12-JUN-18 03.26.33.202987000 PM,"","APPROVED",15-JUN-18 01.34.43.324501000 AM,18-JUN-18 02.46.41.374809000 PM,"sharon.kennedy@oracle.com","","",146,""
147428149084590807755220755252108910799,18-JUN-18 11.15.22.678170000 AM,"",,"ROBIN@MOFFATT.ME","JSON dot-notation syntax exploration","JSON DOT-NOTATION SYNTAX EXPLORATION","JSON dot-notation syntax exploration. 
Ref: https://docs.oracle.com/database/121/ADXDB/json.htm#GUID-7249417B-A337-4854-8040-192D5CEFD576","",147423855071203218934322655940370538413,"","","",13-JUL-24 01.32.15.459688000 AM,"PUBLIC","json,dot-notation,nested,table alias",1,"","GUO4JIM8MTF1AW0MHBUJHJ6CD",13607953,13,,,"","","","","","","","","","","","","","",,"",02-JUN-23 02.18.17.009322000 AM,18-JUN-18 11.15.22.774326000 AM,"","APPROVED",18-JUN-18 11.15.22.591441000 AM,18-JUN-18 02.55.29.752748000 PM,"sharon.kennedy@oracle.com","","",60,""
138346905646275412880327636872896247824,23-MAR-18 01.04.45.074040000 PM,"",,"EDGARCORONA2013@GMAIL.COM","dlib_to_csv","DLIB_TO_CSV","Lib. para escritura desde un query archivos .csv","",118138587396515,"","","",24-JUL-24 02.03.31.500625000 AM,"PUBLIC","to csv  ",6,"","GGMSQMC0A0L6KID2OCRDQLS2S",,4,,,"","","","","","","","","","","","","","",,"",10-OCT-22 06.09.51.556238000 PM,23-MAR-18 01.04.45.076755000 PM,"","APPROVED",15-JUN-18 01.34.41.363536000 AM,18-JUN-18 03.46.30.401325000 PM,"sharon.kennedy@oracle.com","","",40,""
139775914952312971902742924934393935455,06-APR-18 05.12.28.491745000 AM,"",,"W3RESOURCE2011@GMAIL.COM","Example: ABS() function using positive value","EXAMPLE: ABS() FUNCTION USING POSITIVE VALUE","Oracle abs() function example 1.
","",139775914952117125919965355008091534943,"","","",31-OCT-23 08.54.48.729476000 AM,"PUBLIC","",3,"","GIEHXNMKJTPJXTPKNHF7OD21T",11351199,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",07-AUG-19 03.38.42.049785000 AM,06-APR-18 05.12.28.506973000 AM,"","APPROVED",15-JUN-18 01.34.41.486217000 AM,18-JUN-18 04.38.30.912888000 PM,"sharon.kennedy@oracle.com","","",18,""
139715688427841850722103552164760435471,05-APR-18 03.09.58.832979000 PM,"",,"ZHILKEVICH@GMAIL.COM","Uneven Duplication SQL Puzzle","UNEVEN DUPLICATION SQL PUZZLE","Duplicate each row number of times equal to a column value","",139713004659911981920134207194643874420,"","","",20-DEC-23 08.22.03.854546000 AM,"PUBLIC","",1,"","GIA0R7KK4E3TFYJB3PDACH165",11334563,3,,,"","","","","","","","","","","","","","",,"",12-DEC-22 02.34.29.503039000 PM,05-APR-18 03.09.58.849462000 PM,"","APPROVED",15-JUN-18 01.34.41.529105000 AM,15-JUN-18 05.14.55.866199000 PM,"sharon.kennedy@oracle.com","","",21,""
138359399039004257923108411952604137486,23-MAR-18 04.07.50.540985000 PM,"",,"JLCHIAPPA@GMAIL.COM","MAX_ANO","MAX_ANO","Teste de Ordenação por MAX (ano)","",138359399035494746268767143458432108558,"","","",12-AUG-24 09.45.29.821257000 AM,"PUBLIC","",,"","GF4QEGKLR5QB8YLI1K39YDQCG",10991486,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",,23-MAR-18 04.07.50.556454000 PM,"","APPROVED",15-JUN-18 01.34.41.533178000 AM,15-JUN-18 04.47.11.362153000 PM,"sharon.kennedy@oracle.com","","",26,""
140528667121236736062365716559380089430,13-APR-18 10.10.27.839327000 AM,"",,"LIPAREKSHITIJ@GMAIL.COM","First & Last Work Day of Month in Year","FIRST & LAST WORK DAY OF MONTH IN YEAR","fetches first & last day of a month
fetches business days by skipping weekends
case statement to identify the day of week when the first and last days of a month are falling subsequently add or subtract days to get the nearest working day of that same month","",140528667120704808701735279722509371990,"","","",14-JUL-24 03.05.32.345248000 PM,"PUBLIC","date",16,"","GJLX5SION3UDILJI6XOUY4HYG",11616936,1,,,"","","","","","","","","","","","","","",,"",25-APR-24 06.42.10.245369000 AM,13-APR-18 10.10.27.846530000 AM,"","APPROVED",15-JUN-18 01.34.41.578985000 AM,18-JUN-18 04.11.05.011303000 PM,"sharon.kennedy@oracle.com","","",77,""
141008455850100748801817895282840231096,18-APR-18 01.09.41.009493000 AM,"",,"MARCOS.AVC@GMAIL.COM","create_dw_sample","CREATE_DW_SAMPLE","Criação de tabelas de dimensões e fato para uma locadora hipotética","",141008455849034476228917792350749383864,"","","",15-AUG-24 12.47.37.149573000 PM,"PUBLIC","dataware-house",125,"","GKDM5ZJ60Z61LQASAG6MG18NE",11761440,62122448011653412474874015481137348051,,,"","","","","","","","","","","","","","",,"",05-AUG-24 04.53.55.833653000 AM,18-APR-18 01.09.41.070783000 AM,"","APPROVED",15-JUN-18 01.34.41.704189000 AM,18-JUN-18 04.19.59.361950000 PM,"sharon.kennedy@oracle.com","","",809,""
140835822708583700038391477116307549815,16-APR-18 08.31.40.973039000 AM,"",,"GARSON@TISCALI.IT","merge_with_dbms_errlog","MERGE_WITH_DBMS_ERRLOG","test of merge behaviour in case of unstable source rowset and dml error logging","",140833371528733721928114929645336179533,"","","",04-APR-24 10.56.44.721032000 AM,"PUBLIC","merge dbms_errlog ORA-30926",3,"","GJ3OFK8O6G8VPVCFUH98QTS6X",11687583,14,,,"","","","","","","","","","","","","","",,"",13-JUN-20 08.56.04.935610000 AM,16-APR-18 08.36.30.126221000 AM,"","APPROVED",15-JUN-18 01.34.41.733373000 AM,15-JUN-18 04.52.02.360262000 PM,"sharon.kennedy@oracle.com","","",63,""
140336926782217385624071249512469656255,11-APR-18 01.49.43.909146000 PM,"",,"ESKO.S.RANTA@GMAIL.COM","N and prime factorization of N","N AND PRIME FACTORIZATION OF N","The query returns a list of values of N from 2 to 100, along with each N factorized to its prime number factors. Multiplicity of the same factor is collapsed to an exponentiated form.","",140334181723363586941813242263574969128,"","","",24-JAN-24 07.23.41.005960000 AM,"PUBLIC","prime numbers, primes, composite numbers, factorization, SQL exercise, DUAL only, no PL/SQL",13,"","GJAVP0LSF0UPWKBBE3XSGE41T",11535904,3,,,"","","","","","","","","","","","","","",,"",21-APR-23 09.15.00.772339000 AM,11-APR-18 01.49.44.002162000 PM,"","APPROVED",15-JUN-18 01.34.41.796120000 AM,18-JUN-18 04.33.38.719221000 PM,"sharon.kennedy@oracle.com","","",55,""
84682859226769572085398793540434800242,25-OCT-16 06.13.11.808338000 PM,"",,"FELIPE.B.ZORZO@GMAIL.COM","NEXT_DAY function in SQL and PL/SQL are different","NEXT_DAY FUNCTION IN SQL AND PL/SQL ARE DIFFERENT","A little reminder that some functions behave differently in SQL and PL/SQL contexts.","",84682859226295673164109858903949979250,"","","",31-JUL-24 04.13.31.532378000 AM,"PUBLIC","next_day, date",4,"","D12D1XC7WBQXTR6BDZNKYNSO0",695037,4,,,"","","","","","","","","","","","","","",,"",14-DEC-22 06.21.03.103068000 PM,25-OCT-16 06.16.14.283086000 PM,"","APPROVED",15-JUN-18 01.34.35.616240000 AM,18-JUN-18 04.13.11.740635000 PM,"sharon.kennedy@oracle.com","","",23,""
78994530251673837043375698350145408030,01-SEP-16 07.05.35.873473000 AM,"",,"ERIC.BUDDELMEIJER@GMAIL.COM","Generate 100 rows","GENERATE 100 ROWS","Simple script to fill a table with 100 rows","",78994530251656912081901093541699521566,"","","",08-FEB-24 03.53.34.933958000 AM,"PUBLIC","",7,"","DSX1NIEQZTNWKTFFKT7QJP6X8",396696,1,,,"","","","","","","","","","","","","","",,"",31-AUG-23 04.38.43.659392000 PM,01-SEP-16 07.05.35.907726000 AM,"","APPROVED",15-JUN-18 01.34.35.622515000 AM,18-JUN-18 06.49.11.401333000 PM,"sharon.kennedy@oracle.com","","",49,""
90102727323814162683349851483262327907,16-DEC-16 03.24.16.006634000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Do Comments Throw Off Error Backtrace? No!","DO COMMENTS THROW OFF ERROR BACKTRACE? NO!","My answer to this email question: ""’ve just started using DBMS_UTILITY.FORMAT_ERROR_BACKTRACE and it’s a great utility when the code contains no comments, but unless I’m missing something it’s not terribly useful with regard to pinpointing the exact line number when the code contains comments."" Um, no. Comments make no difference. Check it out!","",103369820927587,"","","",07-AUG-24 03.14.26.669897000 AM,"PUBLIC","backtrace,error,comments",3,"","EAQ8K8BPFBFD09LMQQ54HBRHX",1205148,4,,,"","","","","","","","","","","","","","",,"",28-MAR-22 07.52.30.011811000 AM,16-DEC-16 03.27.08.501761000 PM,"","",,,"","","",23,""
88426201450835132592511345684369818428,30-NOV-16 02.14.51.056997000 PM,"",,"RAJESH.BHATIYA@ORACLE.COM","Linguistic Collations","LINGUISTIC COLLATIONS","This script queries language specific data from a table using a binary collation, a monolingual collation, and a UCA collation.","",88422448739482885585576799556141214355,"","","",04-APR-24 10.47.57.398213000 AM,"PUBLIC","",7,"","D86W0O3TY6E77K68X5XYDPFB8",1019479,333804701807972275005933417866206051852,,,"","","","","","","","","","","","","","",89228407118258940401927755221195957442,"linguistic-collations",19-MAR-18 10.34.27.379950000 AM,30-NOV-16 02.52.30.537621000 PM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/linguistic-sorting-and-matching.html#GUID-B84E044F-C147-483B-957B-12EBDB368D3F","",,,"","","",14,""
90439782203335089506847067488196893350,19-DEC-16 09.32.01.280057000 PM,"",,"ANTIKYTE@GMAIL.COM","post_truth_plsql","POST_TRUTH_PLSQL","A demonstration of PL/SQL's capabilities as a standalone 3GL...with it's own built-in Oracle Database :-)
Here, we are using PL/SQL to decode messages encrypted using one or more of 
- a Caesar Cipher
- a Vigenere Cipher
- Hexadecimal
- Octal
- Morse Code

Persisting the required meta-data in database tables, we can derypt the messages using PL/SQL packaged functions.
In this case, the messages are in fact questions in an Oracle-themed Movie Quiz.","",90439782199246502384910391619340606118,"","","",14-MAY-24 12.23.42.110669000 PM,"PUBLIC","",13,"","EBENTVETPN4GPWD5F4AHESOJ4",1233951,4,,,"","","","","","","","","","","","","","",,"",28-SEP-21 05.25.20.976314000 PM,19-DEC-16 09.32.01.451498000 PM,"","APPROVED",15-JUN-18 01.34.35.663659000 AM,15-JUN-18 04.54.26.715491000 PM,"sharon.kennedy@oracle.com","","",98,""
86358111715610295481944256232980918273,10-NOV-16 07.41.21.717877000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Is It a Reserved Word?","IS IT A RESERVED WORD?","This script provides a procedure that either queries from v$reserved_words if available or executes a dynamic PL/SQL block to determine if the word you pass it is reserved in PL/SQL.","",14392553197017,"","","",04-APR-24 06.21.24.330305000 AM,"PUBLIC","reserved word,keyword,dynamic pl/sql",2,"","D4Q71PAOE7IN1OIKHOF3ES8TE",818112,4,,,"","","","","","","","","","","","","","",,"",11-APR-22 07.07.49.457568000 AM,10-NOV-16 08.02.51.370184000 PM,"","",,,"","","",16,""
86861281219750503139342859749645010985,15-NOV-16 02.51.40.248685000 PM,"",,"MIKE_PRINCE@CARGILL.COM","Last/Next with NULLs","LAST/NEXT WITH NULLS","Script to show how to find the last and next values ignoring NULLs","",86856796421592418458242791422101727600,"","","",14-DEC-22 09.32.32.757715000 AM,"PUBLIC","",1,"","D5J4T1PLIOCZGO0ZBOVMUY5IZ",859092,7,,,"","","","","","","","","","","","","","",,"",05-APR-20 11.14.05.362590000 PM,15-NOV-16 02.51.40.307021000 PM,"","APPROVED",15-JUN-18 01.34.35.709976000 AM,19-JUN-18 03.47.58.007029000 PM,"sharon.kennedy@oracle.com","","",11,""
87052836666870123483605686194029646063,17-NOV-16 10.41.00.581521000 AM,"",,"ANELIYA.VLAYKOVA@GMAIL.COM","Java2Days Oracle workshop","JAVA2DAYS ORACLE WORKSHOP","Tiny database suitable for demonstration purposes. Contains three tables and three sequences - author, book, promotion. 

Practice by trying to solve these queries:
1. Select the full names of the authors (as one column), for which both email and phone number are empty.

2. Select all books that were published at least 10 years ago and which are ebooks. Order by price, from most expensive to cheapest.

3. Select the author names and book titles of books that have 'fantasy' anywhere in the description of the book, regardless of case. Order by title.

4. What is the price of the most expensive book, the price of the cheapest book and how many books are in the DB?

5. Select the book title, its price and its reduced price for each book for the currently active promotion (the current date is between start and end date).
   Reduced price = price – (price*(discount/100))

6. Select the number of books, grouped by currencies, for the USD and BGN currencies

7. Select the authors, who have at least one ebook published

8. Select the number of books written by each author, together with the author names. Order by book count descending.
","",87052286840673565322731943211330874135,"","","",16-AUG-24 07.59.57.896454000 PM,"PUBLIC","",63,"","D5U6VZOW47PVMAJ09ADQ4KT4H",879158,1,,,"","","","","","","","","","","","","","",,"",04-APR-24 02.52.25.033942000 AM,17-NOV-16 10.41.00.594136000 AM,"","APPROVED",15-JUN-18 01.34.35.730152000 AM,15-JUN-18 04.16.47.886108000 PM,"sharon.kennedy@oracle.com","","",260,""
89399084777556250368601703795705672609,09-DEC-16 09.52.25.183442000 PM,"",,"RANDY.URBANO@ORACLE.COM","Creating, Replacing, and Dropping a View","CREATING, REPLACING, AND DROPPING A VIEW","A view is a logical representation of a table or combination of tables. In essence, a view is a stored query. This script creates a simple view, replaces the view with a modified view, and drops the view. It also queries the view after it is created and replaced.","",89399084777548996813684016020657435553,"","","",22-JUL-24 09.23.22.103277000 AM,"PUBLIC","",40,"","D9MMEWJ4Z91OPJFXX56G328Y7",14441020,1,,,"","","","","","","","","","","","","","",89804348383263086678543613883071520930,"create-modify",22-JUL-24 09.23.22.103166000 AM,20-JUL-18 01.38.06.946367000 PM,"","APPROVED",20-JUL-18 01.38.06.935561000 PM,,"Auto Approved","","",137,""
88546377386742482361458300188965363272,01-DEC-16 06.16.36.228493000 PM,"",,"CARLOS.HEITOR@OUTLOOK.COM","Criando e inserindo dados","CRIANDO E INSERINDO DADOS","Método para criação e inserção de dados em uma tabela.","",88545050620655164959200121084504062257,"","","",12-MAY-24 02.34.15.405405000 AM,"PUBLIC","CREATE TABLE ",32,"","D79EG987TRCADCOOEQDJBFLQY",1035421,1,,,"","","","","","","","","","","","","","",,"",11-MAR-24 10.01.27.261346000 PM,01-DEC-16 06.16.36.377660000 PM,"","APPROVED",15-JUN-18 01.34.35.739470000 AM,19-JUN-18 06.45.15.004310000 PM,"sharon.kennedy@oracle.com","","",85,""
87645174624532749154054791680666255835,23-NOV-16 03.13.28.349179000 AM,"",,"SCOTT.WESLEY@SAGECOMPUTING.COM.AU","LNNVL - The 'anything but' expression","LNNVL - THE 'ANYTHING BUT' EXPRESSION","LNNVL is nifty but probably underutilised. See how you can handle nulls with this 'anything but' style expression.","",87645174624362290613489128967032685019,"","","",06-FEB-24 07.15.26.978183000 PM,"PUBLIC","lnnvl, nvl, nulls",17,"","D6TDRS2DWX39S98QZ5JKS8AX5",937136,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",06-FEB-24 07.15.26.978082000 PM,23-NOV-16 03.13.28.363106000 AM,"","APPROVED",15-JUN-18 01.34.35.746445000 AM,20-JUN-18 06.00.19.631912000 PM,"sharon.kennedy@oracle.com","","",27,""
88670703882431880994279143215607756841,02-DEC-16 10.22.07.261104000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Using Conditional Compilation to Deprecate Entities in Some Database Releases","USING CONDITIONAL COMPILATION TO DEPRECATE ENTITIES IN SOME DATABASE RELEASES","This example shows the deprecation of procedure proc1 if the database release version is greater than 11.","",88668253903173193746227144425892121062,"","","",03-APR-24 02.35.08.335859000 PM,"PUBLIC","LNPLS 12.2.0.1 DEPRECATE PRAGMA",13,"","EHTKYAJ299ZO42TY4V3TPCGEI",1725472,4,,,"","","","","","","","","","","","","","",94520911473630755178612439282428285352,"conditional-deprecation-in-a-release",26-OCT-23 07.54.38.209538000 PM,27-JAN-17 11.08.34.114146000 PM,"http://docs.oracle.com/database/122/LNPLS/DEPRECATE-pragma.htm#GUID-D2DAD89D-C537-4666-A8A7-2836EB77A0E5__EXAMPLES-58564D6E","",,,"","","",14,""
89090196101437187089203014684761561223,06-DEC-16 10.58.49.623940000 PM,"",,"GARY.MYERS@CONSULTANT.COM","compress_partitions","COMPRESS_PARTITIONS","Changing default compression for partitions","",89090196101299369545766946958845057159,"","","",22-JUL-24 04.31.17.634164000 PM,"PUBLIC","",28,"","D84SJGGDXHINZV3UZ2Y3K2O7D",1090853,9,,,"","","","","","","","","","","","","","",,"",08-FEB-22 09.09.40.259259000 AM,06-DEC-16 10.58.49.648132000 PM,"","APPROVED",15-JUN-18 01.34.35.764800000 AM,20-JUN-18 02.32.39.704160000 PM,"sharon.kennedy@oracle.com","","",157,""
86229830820478432034049379633061327734,09-NOV-16 01.42.50.986218000 PM,"",,"PETER.SORGER@BRZ.GV.AT","monitor_executions.sql","MONITOR_EXECUTIONS.SQL","Script for monitoring executions of statements based on Schema Name.","",86228456343653265181859250459653046614,"","","",16-AUG-24 01.08.53.957391000 AM,"PUBLIC","Execution, Monitor",6,"","D4JOOAMAFJP0OVM5VQ04TK1JC",804600,1,,,"","","","","","","","","","","","","","",,"",18-MAR-24 08.35.33.529570000 AM,09-NOV-16 01.42.51.004917000 PM,"","APPROVED",15-JUN-18 01.34.35.803360000 AM,19-JUN-18 03.47.29.092132000 PM,"sharon.kennedy@oracle.com","","",26,""
86229830820913645329110646135955551094,09-NOV-16 01.51.46.820930000 PM,"",,"PETER.SORGER@BRZ.GV.AT","stdby_gap.sql","STDBY_GAP.SQL","Monitor gaps between primary and standby","",86228456343653265181859250459653046614,"","","",28-JUN-24 04.26.07.189734000 AM,"PUBLIC","standby primary",3,"","D4JOOAMBX8CSC2FRTZ9ROGCNC",804677,1,,,"","","","","","","","","","","","","","",,"",20-FEB-23 01.38.18.185221000 AM,09-NOV-16 01.51.46.825821000 PM,"","APPROVED",15-JUN-18 01.34.35.808872000 AM,19-JUN-18 03.47.47.056302000 PM,"sharon.kennedy@oracle.com","","",18,""
90611378192028607902262535511557710126,21-DEC-16 12.33.54.128294000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","12.2: Use DEPRECATE Pragma to Document Deprecated Units","12.2: USE DEPRECATE PRAGMA TO DOCUMENT DEPRECATED UNITS","New to 12.2, you can now use the DEPRECATE pragma to document that a program unit (e.g., entire package) or subprogram (e.g., single procedure in a package) is deprecated and should not be used. You can then take advantage of compile-time warnings to help identify all places that deprecated code is used, and even render such code invalid for execution! Related blog post: http://stevenfeuersteinonplsql.blogspot.com/2016/10/122-helps-you-manage-persistent-code.html","",105491187781005,"","","",03-APR-24 02.26.03.750872000 PM,"PUBLIC","deprecate,plw",17,"","EBK4Q2HA999LKEBM291RN1LKQ",1256223,4,,,"","","","","","","","","","","","","","",,"",25-MAY-20 06.04.39.325710000 AM,21-DEC-16 02.24.53.402103000 PM,"","",,,"","","",33,""
88328597311482803866898940344914343337,29-NOV-16 03.59.03.670566000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","BULK COLLECT Never Appends to Your Collection","BULK COLLECT NEVER APPENDS TO YOUR COLLECTION","BULK COLLECT always replaces the current contents of a collection before the fetch is executed. It never appends. I demonstrate this aspect of bulk fetching with a set of blocks. Ask yourself: which of the anonymous blocks in the steps below will display ""Count=8"" after execution?

The code below is taken from a PL/SQL Challenge quiz: 
https://plsqlchallenge.oracle.com/pls/apex/f?p=10000:659:::NO:659:P659_COMP_EVENT_ID,P659_QUESTION_ID,P659_QUIZ_ID:1263706,19866,&cs=11B1EF99C5ADFDA921B9D23DA640AE407","",16133022056507,"","","",03-APR-24 02.17.05.301912000 PM,"PUBLIC","bulk collect, collection",24,"","D7WTXIP7V3ZZW03BBC4XXE1G7",14570004,4,,,"","","","","","","","","","","","","","",,"",18-AUG-22 01.21.01.490830000 PM,26-JUL-18 03.49.07.916327000 PM,"","APPROVED",26-JUL-18 03.49.07.906610000 PM,,"Auto Approved","","",69,""
89301732280545837562456037729304731551,08-DEC-16 11.23.19.659018000 PM,"",,"BALAKRISHNA.SAPPA@HOTMAIL.COM","Use Case for SQL Cross Joins","USE CASE FOR SQL CROSS JOINS","https://pivotronics.com/
Here is the SQL script demonstrating the applications of Cross Joins in SQL.","",89295094258359886849570285380405222283,"","","",07-AUG-24 08.49.29.573085000 AM,"PUBLIC","SQL, Cross, Joins, Use, Case, Applications, Oracle",32,"","D9GZ34JN4CCQ11SOCJRX66VJL",1118542,3,,,"","","","","","","","","","","","","","",,"",31-JAN-24 10.46.23.037335000 PM,23-FEB-20 04.45.13.837243000 PM,"","APPROVED",15-JUN-18 01.34.35.829255000 AM,19-JUN-18 06.49.04.499836000 PM,"sharon.kennedy@oracle.com","","",206,""
89911381149353596186837584626483639977,14-DEC-16 07.45.44.797755000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Some Tips for Working with JSON in Oracle Database","SOME TIPS FOR WORKING WITH JSON IN ORACLE DATABASE","As of 12.1, Oracle SQL offers some great functionality for working with JSON data. But there are a few things to keep in mind: (1) JSON names should not contain spaces. You can deal with it, but you're better off not having to. (2) JSON values cannot contain new lines / carriage returns. (3) Use the IS JSON check constraint on columns containing JSON to ensure that bad JSON doesn't get in. Related blog post: http://stevenfeuersteinonplsql.blogspot.com/2016/12/some-beginner-tips-for-working-with.html ","",108796431315118,"","","",09-JUN-24 04.46.09.615891000 PM,"PUBLIC","",16,"","EAGCD9L94SSJSFRD6D7HHG61O",1183970,13,,,"","","","","","","","","","","","","","",,"",03-JUN-23 08.57.12.771002000 AM,14-DEC-16 08.03.12.202023000 PM,"","",,,"","","",64,""
87937648466158927092627763182831301384,25-NOV-16 10.08.30.726776000 PM,"",,"A.PASQUALOTTO@CAMPUS.UNIMIB.IT","JSON 4000 chars","JSON 4000 CHARS","Parse strings longer then 4000 chars","",87937648466038034510666300265360683784,"","","",21-FEB-23 01.47.15.023181000 PM,"PUBLIC","JSON",9,"","D699JADNE8JIE57GBHIY93IQI",969595,13,,,"","","","","","","","","","","","","","",,"",21-DEC-20 01.02.34.479583000 PM,25-NOV-16 10.08.30.808191000 PM,"","APPROVED",15-JUN-18 01.34.35.863690000 AM,19-JUN-18 03.48.20.630055000 PM,"sharon.kennedy@oracle.com","","",16,""
88430115911183535871806846894158269518,30-NOV-16 03.11.09.161680000 PM,"",,"RAJESH.BHATIYA@ORACLE.COM","Case-insensitive and Accent-insensitive Collations","CASE-INSENSITIVE AND ACCENT-INSENSITIVE COLLATIONS","This script uses the NLS_SORT session parameter to specify a case-insensitive collation and an accent-insensitive collation.","",88429053766084488105054307106673032208,"","","",04-APR-24 10.47.54.880480000 AM,"PUBLIC","",11,"","D86W0O3T5J3HFS6ZIC0RF3VMW",1019809,333804701807972275005933417866206051852,,,"","","","","","","","","","","","","","",89228407118258940401927755221195957442,"case-accent-insensitive-collations",19-MAR-18 10.31.01.914765000 AM,30-NOV-16 03.15.29.970506000 PM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/linguistic-sorting-and-matching.html#GUID-D918D6AE-220B-41F0-98D8-62502B9B1DBB","",,,"","","",19,""
87758167649968524618576749221368169368,24-NOV-16 05.04.43.723638000 AM,"",,"SCOTT.WESLEY@SAGECOMPUTING.COM.AU","Generate data with dual - how many working days in a year?","GENERATE DATA WITH DUAL - HOW MANY WORKING DAYS IN A YEAR?","Very easy to generate data using the dual table. With this we can create 365 rows to represent each day, then count how many are Sat/Sun.","",87757742695882639294499891449451660354,"","","",30-JUN-24 09.19.19.115067000 AM,"PUBLIC","dual connect",67,"","D6ZWKMK4O7ZQPN2YC4JAN7OKQ",953148,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",30-JUN-24 09.19.19.114962000 AM,24-NOV-16 05.04.43.738857000 AM,"","APPROVED",15-JUN-18 01.34.35.885909000 AM,18-JUN-18 04.13.18.596963000 PM,"sharon.kennedy@oracle.com","","",151,""
88237211609267902183073702138153146209,28-NOV-16 06.56.55.771808000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Use V Format to Display -Power of N- Numeric Values","USE V FORMAT TO DISPLAY -POWER OF N- NUMERIC VALUES","Use the V format model to return a value multiplied by 10n (and if necessary, round it up), where n is the number of 9's after the V. 

In this LiveSQL script, ask yourself: which of the choices will display ""-100"" after execution? This will show you the use case for V.

Doc link: https://docs.oracle.com/cd/B19306_01/server.102/b14200/sql_elements004.htm","",113878477638674,"","","",04-APR-24 06.28.38.470368000 AM,"PUBLIC","Number format,v",1,"","D7RJ03V1S59GMT1RZOG9U5HPV",14570009,4,,,"","","","","","","","","","","","","","",,"",26-JUL-18 03.49.25.456937000 PM,26-JUL-18 03.49.29.851416000 PM,"","APPROVED",26-JUL-18 03.49.29.842150000 PM,,"Auto Approved","","",19,""
88391266213389241377937284286177253496,30-NOV-16 06.16.58.580669000 AM,"",,"BIPINVERMA_UNIQUE@YAHOO.CO.IN","Performance.sql","PERFORMANCE.SQL","Performance comparison of two PLSQL block in the script.
Execution of First PLSQL Block Having (Execute Immediate) is taking huge time and the same work by the second PLSQL block execution is fraction of seconds.","",102772199759156,"","","",11-AUG-24 09.52.22.436555000 AM,"PUBLIC","",23,"","D70IFT3UZ3VMNZQP5BZBG23BC",,4,,,"","","","","","","","","","","","","","",,"",30-NOV-22 08.13.51.118503000 PM,30-NOV-16 06.16.58.582906000 AM,"","APPROVED",15-JUN-18 01.34.35.900487000 AM,19-JUN-18 03.48.55.807221000 PM,"sharon.kennedy@oracle.com","","",82,""
102251800959137234053260007310680016301,11-APR-17 10.58.25.831733000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","RECORD Type Definition and Variable Declaration","RECORD TYPE DEFINITION AND VARIABLE DECLARATION","This defines a RECORD type named DeptRecTyp, specifying an initial value for each field. Then it declares a variable of that type named dept_rec and prints its fields.","",102249433007365123298887597129386833010,"","","",19-MAY-24 09.40.03.829321000 AM,"PUBLIC","LNPLS",18,"","ET8DJ1TEUANOSVVFGDUYCH31W",3100919,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"tdlnplscomposites76",03-APR-24 09.46.08.908882000 AM,11-APR-17 10.58.25.849545000 PM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-7DC81088-1265-4C46-A04D-E3AD10BCC04F__CIHHBIDA","",,,"","","",76,""
102255036684443430378622664452770258710,12-APR-17 12.04.25.113337000 AM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","%ROWTYPE Variable Represents Full Database Table Row","%ROWTYPE VARIABLE REPRESENTS FULL DATABASE TABLE ROW","This declares a record variable that represents a row of the table departments, assigns values to its fields, and prints them.","",102255036684421669713869601127625547542,"","","",05-AUG-24 11.57.23.943886000 PM,"PUBLIC","LNPLS",32,"","ET8O682VEXQV8LSKPEUHNHYF8",3101639,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"tdlnplscomposites80",05-AUG-24 11.57.18.910323000 PM,12-APR-17 12.04.25.120398000 AM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-9D20CCCC-E34B-473B-8499-4787D17C1980__CIHJDGEJ","",,,"","","",121,""
102255036684534099815093761640873221910,12-APR-17 12.32.58.547057000 AM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","%ROWTYPE Variable Represents Join Row","%ROWTYPE VARIABLE REPRESENTS JOIN ROW","This example defines an explicit cursor whose query is a join and then declares a record variable that has a field for each column that the cursor selects. ","",102254466385820741512168358722038034533,"","","",25-JUL-24 04.41.53.475893000 PM,"PUBLIC","LNPLS",22,"","ET8TPXDZ37O0WVDJHH7YNT2M9",3101823,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"tdlnplscomposites82",06-MAR-24 07.05.30.745176000 AM,12-APR-17 12.32.58.560562000 AM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-064DACC4-4F40-43CA-9518-09F0BE5923EB__CIHIFJHG","",,,"","","",71,""
103671786711698235841129718297991477718,25-APR-17 02.07.49.547738000 PM,"",,"DUKE.GANOTE@GMAIL.COM","REGEXP_REPLACE to remove SQL Comments","REGEXP_REPLACE TO REMOVE SQL COMMENTS","Use of REGEXP_REPLACE and LISTAGG to remove comments from short query.","",103674535583519165536281093903347275186,"","","",22-AUG-24 05.26.31.332083000 AM,"PUBLIC","REGEXP_REPLACE, LISTAGG",18,"","EWIG7YMJ53AFOE01AEJ3TDMX0",3344216,1,,,"","","","","","","","","","","","","","",,"",25-JUN-24 10.04.59.634720000 PM,25-APR-17 02.07.49.572405000 PM,"","APPROVED",15-JUN-18 01.34.36.688262000 AM,19-JUN-18 03.55.48.458762000 PM,"sharon.kennedy@oracle.com","","",76,""
103808684376367223108937867706638178538,26-APR-17 09.00.29.098535000 PM,"",,"TRENT.SCHAFER@GMAIL.COM","Regex Array Example","REGEX ARRAY EXAMPLE","Return an array of all matches with plsql that can be eaisly iterated over.","",103808684376349089221643648269017585898,"","","",03-APR-24 02.22.57.398224000 PM,"PUBLIC","",19,"","HLO2EUM43AQ76X1L1GC155ZRQ",19529483,6,,,"","","","","","","","","","","","","","",,"",06-MAR-22 05.02.03.735922000 PM,26-NOV-18 07.49.16.700831000 PM,"","APPROVED",24-NOV-18 01.49.40.809450000 AM,26-NOV-18 07.48.34.945825000 PM,"sharon.kennedy@oracle.com","Can you please run this and re-save.  The results are not displayed.  Can you also provide a description as well as the link","",47,""
96023963491741394824760863535665959467,11-FEB-17 08.03.05.177604000 AM,"",,"MANOJSHUKLA.RI@GMAIL.COM","PL/SQL case statement","PL/SQL CASE STATEMENT","PL/SQL case statement","",96018109164631584646083175808049523030,"","","",22-AUG-24 10.11.24.534088000 AM,"PUBLIC","PL/SQL case statement",449,"","EJ80Y1NF2WXNSU2BWL81NKR61",1940378,4,,,"","","","","","","","","","","","","","",,"",22-AUG-24 10.11.24.533981000 AM,11-FEB-17 08.03.05.312004000 AM,"","APPROVED",15-JUN-18 01.34.36.746156000 AM,19-JUN-18 05.32.21.554463000 PM,"sharon.kennedy@oracle.com","","",1485,""
95721751430179362901344738698003618037,08-FEB-17 10.51.08.887418000 AM,"",,"ROGEL@WEB.DE","USER != USER","USER != USER","Not Quoting identifiers is more than just let them implicitly be uppercased","",95721751430127379091101309643491252469,"","","",20-AUG-24 02.35.28.589826000 AM,"PUBLIC","",9,"","EJRKY2B5ZZAJF1PHBC3E7E5ON",1896249,1,,,"","","","","","","","","","","","","","",,"",20-AUG-24 02.35.28.589726000 AM,08-FEB-17 10.54.31.228043000 AM,"","APPROVED",15-JUN-18 01.34.36.751152000 AM,18-JUN-18 05.54.28.977427000 PM,"sharon.kennedy@oracle.com","","",67,""
99502585658301778872670999559344398017,16-MAR-17 03.35.47.025325000 PM,"",,"CHRIS.SAXON@ORACLE.COM","AskTom: unnesting nested tables","ASKTOM: UNNESTING NESTED TABLES","An example of using the table() operator to access nested table elements. For AskTom question https://asktom.oracle.com/pls/apex/f?p=100:11:0::::P11_QUESTION_ID:9534048200346306399","",99502585658167588106693775720952012481,"","","",21-JUL-24 09.03.25.387997000 AM,"PUBLIC","nested tables",47,"","EPTQSDPS1USF661AESEYCKOFF",2578858,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",04-APR-24 06.05.47.352238000 AM,16-MAR-17 03.35.47.032141000 PM,"","",,,"","","",132,""
96858948968117937288362719702992726046,19-FEB-17 07.50.32.487127000 AM,"",,"YSKUTGRU@GMAIL.COM","Cloud ID","CLOUD ID","Select ID for connection clouds - Cisco CDP and etc...))","",96853204293402728495224611481439619784,"","","",13-AUG-24 09.42.08.239649000 AM,"PUBLIC","",10,"","ELK72W2DXAUC1FW4XQ6B312EO",2053071,3,,,"","","","","","","","","","","","","","",,"",23-APR-24 01.16.01.991692000 AM,19-FEB-17 07.50.32.608382000 AM,"","APPROVED",15-JUN-18 01.34.36.778664000 AM,19-JUN-18 05.40.28.538813000 PM,"sharon.kennedy@oracle.com","","",92,""
96251560234854277144326111960685529126,13-FEB-17 12.21.03.477546000 PM,"",,"AKASHL@INTELLIFYSOLUTIONS.COM","IncomeStatus_Function","INCOMESTATUS_FUNCTION","Use of Nested If in a User Defined Function","",96243944806322333329256098975254748507,"","","",12-SEP-23 09.21.19.503707000 PM,"PUBLIC","",2,"","EKL5W6F4J5GA8COD6XMT1F23S",1968555,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",21-JAN-20 05.13.01.954281000 PM,13-FEB-17 12.21.04.023477000 PM,"","APPROVED",15-JUN-18 01.34.36.813416000 AM,18-JUN-18 08.15.27.558434000 PM,"sharon.kennedy@oracle.com","","",29,""
100468443217854825508900555513270033892,25-MAR-17 09.14.03.533330000 PM,"",,"PLSQL@IMPLESTRAT.COM","Intro To JSON_ARRAY","INTRO TO JSON_ARRAY","An introduction to the JSON_ARRAY SQL function introduced in Oracle 12.2.","",100461774007529523422330175952838638192,"","","",04-APR-24 11.48.24.327406000 AM,"PUBLIC","JSON SQL JSON_ARRAY",23,"","EREMM1KNQBO2XC2MHVGA0ENKY",2775080,13,,,"","","","","","","","","","","","","","",,"",16-NOV-22 07.03.56.584642000 PM,25-MAR-17 09.14.03.752609000 PM,"","APPROVED",15-JUN-18 01.34.36.836920000 AM,20-JUN-18 06.03.36.428895000 PM,"sharon.kennedy@oracle.com","","",51,""
100215358648812944988160091910337905956,23-MAR-17 11.09.30.414498000 AM,"",,"JOHN.KEYMER@WEGOBEYOND.CO.UK","Analytic View Demo","ANALYTIC VIEW DEMO","Analytic view demo based on my blog post here: 
http://www.wegobeyond.co.uk/blog/entry/an-introduction-to-analytic-views-in-oracle-12-2.html","",100215358648465983277930693337197233444,"","","",16-AUG-24 08.31.09.670125000 AM,"PUBLIC","Analytic,Views,AV",92,"","EQYYQB3BJE9XLD5HKS52LS7SM",2732949,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",16-MAY-24 07.44.02.601905000 PM,23-MAR-17 11.09.30.542879000 AM,"","APPROVED",15-JUN-18 01.34.36.841504000 AM,20-JUN-18 04.00.40.864312000 PM,"sharon.kennedy@oracle.com","","",220,""
96254538885379129488896793710091236527,13-FEB-17 01.32.05.909475000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","12.2: Use PL/Scope to Find All SQL Statements with Hints","12.2: USE PL/SCOPE TO FIND ALL SQL STATEMENTS WITH HINTS","As of 12.2, PL/Scope now analyzes the static SQL statements that appear in your PL/SQL program units. It allows you to answer with ease questions like ""Where do I use hints in my SQL statements?"" Doc: http://docs.oracle.com/database/122/ADFNS/plscope.htm#ADFNS022","",3402637314200,"","","",15-JUL-24 04.08.32.375920000 PM,"PUBLIC","hint,plscope",13,"","EKMFJ1VAZWD67Y601KDUZIQTM",1969195,4,,,"","","","","","","","","","","","","","",,"",26-OCT-23 12.23.37.722075000 AM,13-FEB-17 01.34.18.957892000 PM,"","",,,"","","",73,""
95600380970992131754654987653827160976,07-FEB-17 07.42.22.108820000 AM,"",,"CHAUNCEYZHONG@OUTLOOK.COM","Loop-Recurrence","LOOP-RECURRENCE","loop-exit demo","",95604283289330380838280576135856793837,"","","",01-AUG-24 06.08.55.279476000 AM,"PUBLIC","LOOP",5,"","EJKKRJJS0TTFW3LTARG300R9U",1875956,4,,,"","","","","","","","","","","","","","",,"",01-AUG-24 06.05.42.559108000 AM,07-FEB-17 07.42.22.164910000 AM,"","APPROVED",15-JUN-18 01.34.36.854656000 AM,19-JUN-18 04.27.00.485506000 PM,"sharon.kennedy@oracle.com","","",32,""
97115076889038260512655313025247088865,21-FEB-17 07.14.37.908818000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Use DBMS_SCHEDULER.evaluate_calendar_string to generate recurring dates","USE DBMS_SCHEDULER.EVALUATE_CALENDAR_STRING TO GENERATE RECURRING DATES","Implementing regularly scheduled classes in the Oracle Dev Gym (eg, ""PL/SQL Office Hours on the first Monday of each month, at 10 AM""), I avoided writing lots of code myself. Instead, I let DBMS_SCHEDULER.evaluate_calendar_string do all the heavy lifting. This script gives you an idea of what is possible. NOTE: this script will not execute on LiveSQL, as DBMS_SCHEDULER is not available. But you can certainly download it and try it out yourself. Doc: http://docs.oracle.com/database/121/ARPLS/d_sched.htm#ARPLS72366","",116018304991669,"","","",18-AUG-24 07.48.47.619438000 AM,"PUBLIC","recurring,schedule,dbms_scheduler",18,"","ELZ0BE6FZU3WYNC9QVKAT34FN",14569989,4,,,"","","","","","","","","","","","","","",,"",24-APR-24 06.07.28.361603000 AM,26-JUL-18 03.48.02.432422000 PM,"","APPROVED",26-JUL-18 03.48.02.424732000 PM,,"Auto Approved","","",99,""
105524423918181927926598982065097181736,13-MAY-17 06.52.30.029434000 AM,"",,"KATSUMI.INOUE@ORACLE.COM","Excel Copy&Paste data as rows","EXCEL COPY&PASTE DATA AS ROWS","Tab seperated data as table. Works with Copy&Paste data from Excel.","",105522402375305599993942888281786740148,"","","",11-JUL-24 10.44.29.316396000 AM,"PUBLIC","Excel CTE regexp tab loader",27,"","EZHE0NX8AZM2XXRAA14ET2X0Q",3699968,1,,,"","","","","","","","","","","","","","",,"",15-JAN-24 05.13.23.795841000 AM,13-MAY-17 06.52.30.050519000 AM,"","",,,"","","",189,""
104533661769543872953407622975681389090,03-MAY-17 07.13.26.961427000 PM,"",,"MBIERLY@IQMS.COM","AfterError Trigger","AFTERERROR TRIGGER","Capturing the failed login via a trigger","",104527963732424161559107592867522709878,"","","",24-JUL-24 10.50.50.524660000 PM,"PUBLIC","",14,"","EXV77EDHAEPZUV1MYELZZNKI8",3517331,5,,,"","","","","","","","","","","","","","",,"",11-APR-23 05.38.32.126332000 PM,03-MAY-17 07.13.27.046944000 PM,"","APPROVED",15-JUN-18 01.34.36.867225000 AM,15-JUN-18 05.24.21.706148000 PM,"sharon.kennedy@oracle.com","","",88,""
110058676423070863164746634829002062910,25-JUN-17 04.48.06.188356000 PM,"",,"EDUARDOSOARESALVES@GMAIL.COM","FUNCTION UNPIVOT - Eduardo Alves","FUNCTION UNPIVOT - EDUARDO ALVES","Exemplificando a utilização da função UNPIVOT, neste caso, foi realizado um sub-select para criar uma tabela utilizando a função PIVOT, para depois utilizar a UNPIVOT para ""Desfazer"" o Agrupamento.","",110052879632627248786397453659950160730,"","","",19-JUL-24 12.42.03.581794000 PM,"PUBLIC","UNPIVOT",6,"","E6Q48JIYWKRH66HM9L2XG5H98",4628620,1,,,"","","","","","","","","","","","","","",,"",12-NOV-22 05.45.54.429959000 PM,25-JUN-17 04.48.06.423018000 PM,"","APPROVED",15-JUN-18 01.34.37.269607000 AM,19-JUN-18 04.20.00.128437000 PM,"sharon.kennedy@oracle.com","","",37,""
110064921437147133727664794786970921477,25-JUN-17 06.10.37.865619000 PM,"",,"EDUARDOSOARESALVES@GMAIL.COM","Function LAG- Eduardo Alves","FUNCTION LAG- EDUARDO ALVES","Exemplificando a utilização da função LAG, onde, basicamente irá retornar o salário e a função irá mostrar o qual é o próximo salário Maior que este, ordenando do Maior para o Menor referente ao campo usado na função e também pela informação do order by. ","",110052879632627248786397453659950160730,"","","",27-OCT-21 05.23.15.730940000 PM,"PUBLIC","LAG",4,"","E6RH7PY20UO0JGLD56FGYH8PJ",4629364,1,,,"","","","","","","","","","","","","","",,"",04-MAY-20 05.26.37.801526000 PM,25-JUN-17 06.10.37.934191000 PM,"","APPROVED",15-JUN-18 01.34.37.287995000 AM,19-JUN-18 04.28.44.226118000 PM,"sharon.kennedy@oracle.com","","",7,""
113639357306398678684358620978191450164,30-JUL-17 12.15.18.047988000 AM,"",,"TAI.ADENIJI@GMAIL.COM","ListTopNRecordsUsingFetchFirstNRows","LISTTOPNRECORDSUSINGFETCHFIRSTNROWS","List Top N Records using Fetch First N Rows","",113635734481897730071020887680578410515,"","","",14-JUL-24 03.05.37.719130000 PM,"PUBLIC","",4,"","FCHTXBB3WY7TOH77HTDY91KNA",5246428,3,,,"","","","","","","","","","","","","","",,"",30-APR-20 09.41.04.966038000 PM,30-JUL-17 12.18.37.555258000 AM,"","APPROVED",15-JUN-18 01.34.37.291431000 AM,19-JUN-18 04.18.56.419839000 PM,"sharon.kennedy@oracle.com","","",17,""
113876581527476936982491361990979280389,01-AUG-17 06.33.24.540025000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","partitioning - limits on interval partitions.","PARTITIONING - LIMITS ON INTERVAL PARTITIONS.","This script demonstrates the MAXVALUE clause, and the limit on the number of partitions a table can have, and its relevance to interval partitioned tables.

","",113877828677045287472158795858140861341,"","","",31-JUL-24 05.29.11.304283000 PM,"PUBLIC","interval, maxvalue, range, partition limits",5,"","FCVLGYLC8M8RX86L5XZZD7SXB",5283103,8,,,"","","","","","","","","","","","","","",,"",28-OCT-23 07.28.53.484259000 AM,01-AUG-17 06.33.24.564412000 AM,"","APPROVED",27-JUL-18 01.21.05.205025000 PM,,"Auto Approved","","",49,""
113472189799400443272107126242090312474,28-JUL-17 09.39.40.460117000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Impact of Index Column Order on Queries","IMPACT OF INDEX COLUMN ORDER ON QUERIES","Examples of what impact different indexes have on queries","",113472189798607387934439929503483061018,"","","",08-JUL-24 10.28.23.711928000 AM,"PUBLIC","index",44,"","FEFNXNKC7CMULQ1ZA7YRKBWBU",5450685,1,,,"","","","","","","","","","","","","","",,"",16-DEC-21 07.01.48.938206000 AM,10-AUG-17 03.10.56.193914000 PM,"","",,,"","","",94,""
113153457425277834653037000262966508253,25-JUL-17 08.28.14.822266000 AM,"",,"ORACLE@ORCHESTRAPIT.CO.UK","overwrite_first_rows_in_t1_with_t2_rows","OVERWRITE_FIRST_ROWS_IN_T1_WITH_T2_ROWS","Supporting script for https://stackoverflow.com/questions/45290252/how-to-update-value-in-one-table-by-coping-it-from-another-table-in-plsql?noredirect=1#comment77555957_45290252","",113152649915917757526549580864761296522,"","","",10-APR-24 08.59.33.407044000 AM,"PUBLIC","",3,"","FBPR7YCLF1DKAE2NZ0MPZI9TB",5167681,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",08-SEP-20 02.48.53.298548000 AM,25-JUL-17 10.04.15.422046000 AM,"","APPROVED",15-JUN-18 01.34.37.314325000 AM,20-JUN-18 05.15.49.830715000 PM,"sharon.kennedy@oracle.com","","",7,""
115715694596888302550351270044479671344,18-AUG-17 10.00.23.272184000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Using nested tables and table functions to return data","USING NESTED TABLES AND TABLE FUNCTIONS TO RETURN DATA","Answering a StackOverflow question with some code! https://stackoverflow.com/questions/45743046/store-data-of-each-iteration-of-a-loop-and-return-all-of-them-on-a-ref-cursor","",117474486046688,"","","",15-MAY-24 10.47.18.638284000 PM,"PUBLIC","",15,"","FFTRURCNPRBZDGIJJAV0BEC4R",14569954,4,,,"","","","","","","","","","","","","","",,"",12-JUL-21 04.11.58.895906000 AM,26-JUL-18 03.46.30.286797000 PM,"","APPROVED",26-JUL-18 03.44.38.676880000 PM,,"Auto Approved","","",82,""
114511467617299564628270934486382472084,07-AUG-17 08.42.44.632955000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Unique and Function-based Indexes","UNIQUE AND FUNCTION-BASED INDEXES","Examples of how to create and use function-based and unique indexes ","",114511467617092838313116832897507715988,"","","",16-MAY-24 08.22.46.037404000 PM,"PUBLIC","index, function-based index, unique",13,"","FEFGYASPIQOSL89S8T40Z8E27",5449286,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",09-SEP-22 01.38.51.780285000 PM,10-AUG-17 01.15.48.644992000 PM,"","",,,"","","",88,""
110472255138223978796009230244923477818,29-JUN-17 04.31.24.305464000 PM,"",,"MARK.DRAKE@ORACLE.COM","SO_44820316","SO_44820316","Solution to https://stackoverflow.com/questions/44820316/extracting-values-from-clob-in-oracle-db-separated-by-a-delimiter/44830517#44830517","",110474961351247802365307120325709413023,"","","",11-MAY-24 10.54.53.336018000 AM,"PUBLIC","",,"","E7E0NODM0ASOZ2PLZUGZ6WTK8",4709339,12,,,"","","","","","","","","","","","","","",,"",,29-JUN-17 04.31.24.311993000 PM,"","",,,"","","",36,""
123865360013188063297103650144681377707,04-NOV-17 09.54.44.831762000 PM,"",,"FLPSDMS@GMAIL.COM","Palindrome","PALINDROME","Find possible combination of palindrome in a string","",123865360013053872531126426306288992171,"","","",23-JAN-24 05.12.41.105180000 PM,"PUBLIC","palindrome",4,"","FSV3NJKQFC170U6WH7MGJOOCD",7610034,1,,,"","","","","","","","","","","","","","",,"",18-APR-22 06.59.00.580083000 AM,04-NOV-17 09.54.45.114422000 PM,"","APPROVED",15-JUN-18 01.34.38.703426000 AM,19-JUN-18 04.02.59.072763000 PM,"sharon.kennedy@oracle.com","","",22,""
123725785043320539444501683071233989384,03-NOV-17 01.36.29.126810000 PM,"",,"ZHILKEVICH@GMAIL.COM","bool type","BOOL TYPE","bool type - supports put_line as well as conversions from and to integer and varchar2 types","",123724534830930118521842803932379351109,"","","",04-APR-24 06.18.29.043839000 AM,"PUBLIC","",2,"","FSN1L57WVW8U5V3Z2CVWGTUHM",7581810,4,,,"","","","","","","","","","","","","","",,"",08-MAR-22 03.34.01.786923000 AM,03-NOV-17 01.36.29.340212000 PM,"","APPROVED",15-JUN-18 01.34.38.721936000 AM,20-JUN-18 05.15.59.191762000 PM,"sharon.kennedy@oracle.com","","",13,""
123874214556099280505175701114439007061,04-NOV-17 11.30.23.609912000 PM,"",,"FLPSDMS@GMAIL.COM","perfect-logger","PERFECT-LOGGER","A simple idea for management of logs with Oracle Database","",123874214555888927412562755638040132437,"","","",04-APR-24 03.04.07.493283000 AM,"PUBLIC","logger, log",13,"","FSWL1XQUICQ6S7MNCY6VDA6QV",7610854,4,,,"","","","","","","","","","","","","","",,"",08-JUL-20 11.24.08.066117000 AM,04-NOV-17 11.30.23.821567000 PM,"","APPROVED",15-JUN-18 01.34.38.758476000 AM,20-JUN-18 04.19.09.161291000 PM,"sharon.kennedy@oracle.com","","",42,""
125074025745600626484332566633312297632,16-NOV-17 11.01.06.511978000 AM,"",,"DEBARGHYA.DASSHARMA@COGNIZANT.COM","HashValueComparison","HASHVALUECOMPARISON","HashValueComparison","",125065101301234111267012929280046445721,"","","",04-APR-24 06.31.11.235934000 AM,"PUBLIC","",1,"","FUTU9TAUFX5OEFTQVGUUIA1N2",7997453,6,,,"","","","","","","","","","","","","","",,"",24-OCT-22 07.54.41.340519000 AM,16-NOV-17 11.01.06.634093000 AM,"","APPROVED",15-JUN-18 01.34.38.785143000 AM,19-JUN-18 06.53.46.081963000 PM,"sharon.kennedy@oracle.com","","",33,""
124981346929191735833544494872045193073,15-NOV-17 01.34.56.908937000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Automatic Invalidation and Recompilation of PL/SQL Program Units","AUTOMATIC INVALIDATION AND RECOMPILATION OF PL/SQL PROGRAM UNITS","There are many wonderful aspects to using a database programming language (a language like PL/SQL, that is, that runs within the database, whose code is stored in the database). This script focus on how the database will automatically keep track of dependencies;  invalidate any program units with a dependent object that has changed; and then automatically recompile that unit when it is next used. ","",7243455569536,"","","",04-APR-24 05.54.08.858515000 AM,"PUBLIC","dependency, invalidation,recompilation",8,"","FUOH1N3FJSAOHEEQVVIHH1PFC",7951230,6,,,"","","","","","","","","","","","","","",,"",16-SEP-20 03.07.28.052438000 PM,15-NOV-17 01.38.22.908579000 PM,"","",,,"","","",30,""
125046713614876006372216608106408997372,16-NOV-17 05.04.29.360149000 AM,"",,"JEFFREY.KEMP@JK64.COM","Uniqueness Constraint with Soft Delete","UNIQUENESS CONSTRAINT WITH SOFT DELETE","Simple example of a uniqueness constraint on a table which allows soft deletes - i.e. uniqueness should not be enforced for records marked as ""deleted""; since a normal unique constraint cannot do this, we create a unique, function-based index using the NVL2 function for conciseness.","",125047857563413894329807399804312637142,"","","",01-MAY-24 08.31.02.921882000 PM,"PUBLIC","unique constraint, function-based index, soft delete",16,"","FUSAIMZ1EBQGQ6E027OV6NYXA",7976923,337949986681008890389062074985729416032,,,"","","","","","","","","","","","","","",,"",14-NOV-22 07.29.00.480535000 AM,16-NOV-17 05.04.29.383508000 AM,"","APPROVED",15-JUN-18 01.34.38.853096000 AM,20-JUN-18 05.16.25.899483000 PM,"sharon.kennedy@oracle.com","","",101,""
124042092095057845135744766209168171827,06-NOV-17 01.51.27.410149000 PM,"",,"ZHILKEVICH@GMAIL.COM","put package","PUT PACKAGE","the package with overloaded line procedure to allow overloading for dbms_output.put_line that does not support Boolean arguments","",124042582037199730875222612749509630728,"","","",14-AUG-24 09.35.51.467685000 PM,"PUBLIC","put_line, boolean, overloading",1,"","FS6AWKQ17CH9OKG0UALRJTGHX",7653579,4,,,"","","","","","","","","","","","","","",,"",28-NOV-20 03.26.17.790889000 AM,06-NOV-17 01.51.27.439802000 PM,"","APPROVED",15-JUN-18 01.34.38.858682000 AM,19-JUN-18 04.57.56.013083000 PM,"sharon.kennedy@oracle.com","","",28,""
125177386301788421680586193922570249703,17-NOV-17 10.45.31.712276000 AM,"",,"DEBARGHYA.DASSHARMA@COGNIZANT.COM","HashValue_2","HASHVALUE_2","Row Comparison by Hash Value","",125175541646316599814886027088555054692,"","","",04-APR-24 06.31.09.525590000 AM,"PUBLIC","",1,"","FUZT11L9SUZU8780PK75VW4ZD",8060578,6,,,"","","","","","","","","","","","","","",,"",07-MAR-24 06.25.43.655117000 AM,17-NOV-17 10.45.31.901360000 AM,"","APPROVED",15-JUN-18 01.34.38.863704000 AM,19-JUN-18 06.53.37.950917000 PM,"sharon.kennedy@oracle.com","","",19,""
124438885494951691728192512318142860453,10-NOV-17 09.14.52.009882000 AM,"",,"ANDREAS.SCHEIFLER@DEXIA.DE","missing line in union","MISSING LINE IN UNION","Union all, but a missing line in the result","",124438885494640997792551552620243373221,"","","",21-NOV-23 02.56.03.452506000 PM,"PUBLIC","""union all"" missing",6,"","FTS7F02JDQE7O37HDEQJ5KVF7",7790028,3,,,"","","","","","","","","","","","","","",,"",15-NOV-17 07.35.19.736730000 AM,10-NOV-17 09.56.01.260819000 AM,"","APPROVED",15-JUN-18 01.34.38.868493000 AM,19-JUN-18 04.47.23.752736000 PM,"sharon.kennedy@oracle.com","","",21,""
125584044882950713223863538536489319739,21-NOV-17 08.05.48.297571000 AM,"",,"DEBARGHYA.DASSHARMA@COGNIZANT.COM","hashValue4","HASHVALUE4","Row Comparison by Hash Value","",125584044882733106576332905285042208059,"","","",04-APR-24 06.31.24.424903000 AM,"PUBLIC","",,"","FVNA3HUVCDGIYVEVJ73IB1W3H",8204216,6,,,"","","","","","","","","","","","","","",,"",,21-NOV-17 08.05.48.354640000 AM,"","APPROVED",15-JUN-18 01.34.38.899623000 AM,19-JUN-18 06.54.04.003196000 PM,"sharon.kennedy@oracle.com","","",21,""
127715607747875752534440813623811667627,11-DEC-17 06.20.24.456982000 PM,"",,"TYSON.JOUGLET@GMAIL.COM","How to use Common Table Expression ( WITH clause ).","HOW TO USE COMMON TABLE EXPRESSION ( WITH CLAUSE ).","How to use Common Table Expression(CTE) in a sql statement.","",127716233324897362005614418903708620909,"","","",14-JUL-24 02.27.13.965760000 PM,"PUBLIC","",32,"","FY2CH5VQ15N5QRKZXILKGFB49",8776743,1,,,"","","","","","","","","","","","","","",,"",03-MAY-24 06.56.56.270282000 AM,02-NOV-18 03.39.41.889603000 PM,"","APPROVED",15-JUN-18 01.34.38.912198000 AM,19-JUN-18 04.20.09.405030000 PM,"sharon.kennedy@oracle.com","","",154,""
127659177585487491938013287846706345986,11-DEC-17 05.24.05.416709000 AM,"",,"AISHAH@DATAWIZ.COM.MY","Virtual Column","VIRTUAL COLUMN","how to","",127659177585313406619988781245548656642,"","","",19-JAN-22 02.49.58.143423000 PM,"PUBLIC","",2,"","FYY28PS5N32HOM1GAPVZHE6OK",8745689,1,,,"","","","","","","","","","","","","","",,"",02-DEC-19 10.18.02.414583000 AM,11-DEC-17 05.24.05.529012000 AM,"","APPROVED",15-JUN-18 01.34.38.924157000 AM,19-JUN-18 06.28.49.322679000 PM,"sharon.kennedy@oracle.com","","",19,""
131032362140294663364631369353920179594,12-JAN-18 12.39.53.714072000 PM,"",,"RINODRUMMER@YAHOO.IT","PL/SQL block placeholdering","PL/SQL BLOCK PLACEHOLDERING","Execution of a PL/SQL block using EXECUTE IMMEDIATE.

IMPORTANT NOTE: It's suggested to avoid the use of this way to do due to the nature of the EXECUTE IMMEDIATE binding.","",131032362136132331767698201105406815626,"","","",15-JUL-24 03.08.05.833136000 PM,"PUBLIC","dynamic, block, execute, placeholder",7,"","F4DSQ08ZMOD2CG6CNB8U0L2HO",9391289,4,,,"","","","","","","","","","","","","","",,"",05-APR-23 02.29.43.317305000 AM,12-JAN-18 12.39.53.751169000 PM,"","APPROVED",15-JUN-18 01.34.39.476249000 AM,20-JUN-18 02.03.43.559981000 PM,"sharon.kennedy@oracle.com","","",39,""
131368075489543569444469183517465168833,15-JAN-18 05.43.39.119649000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","JSON and PL/SQL in Oracle Database 12.2","JSON AND PL/SQL IN ORACLE DATABASE 12.2","Oracle Database 12c Release 1 ushered in a new Age of JSON inside Oracle Database, through wide-ranging and very smart support of JSON documents in SQL. You can use SQL to join JSON data with relational data. You can ""project"" JSON data relationally, extracting content from within the JSON document, thereby making it available for relational processes and tools. You can even query, right from within the database, JSON data that is stored outside Oracle Database in an external table.
 
Oracle Database 12c Release 2, several pre-defined object types were added to PL/SQL to allow fine-grained programmatic construction and manipulation of in-memory JSON data. You can introspect it, modify it, and serialize it back to textual JSON data.

This script contains all the code appearing in my Oracle Magazine article (scheduled for publication later in 2018).","",103425332067639,"","","",16-JUL-24 10.16.46.080725000 AM,"PUBLIC","json,12.2",34,"","F4W6C6VR384BGC390O9H09R9F",9448988,4,,,"","","","","","","","","","","","","","",,"",01-AUG-22 07.55.03.391236000 PM,15-JAN-18 05.45.28.795017000 PM,"","",,,"","","",158,""
137194496192492529497212346683089540615,12-MAR-18 11.59.49.810495000 AM,"",,"EMIN@NULL.NET","MULTIPLY TABLE","MULTIPLY TABLE","USING TWO VARIABLES AND MULTIPLY THEM WITH INNER AND OUTER WITH FOR STATEMENT","",137188707781718708486177283931009476840,"","","",03-APR-24 02.35.13.625436000 PM,"PUBLIC","MULTIPLY, ADD, MULT, TABLE",13,"","GD9HP0OCTIUXUVQWMA08CF485",10589908,4,,,"","","","","","","","","","","","","","",,"",14-APR-23 02.26.31.231156000 PM,12-MAR-18 11.59.49.827048000 AM,"","APPROVED",15-JUN-18 01.34.40.391681000 AM,18-JUN-18 04.08.47.780765000 PM,"sharon.kennedy@oracle.com","","",40,""
137409630297745919395414149177952497168,14-MAR-18 01.41.01.157696000 PM,"",,"SULEMAN.SHAIK1836@GMAIL.COM","Top Products-","TOP PRODUCTS-","Top Products-","",137409630291048470354749103550080282128,"","","",25-JUL-24 03.36.12.159256000 PM,"PUBLIC","",11,"","GELWRUCB8OEDVTLUL6QL5NGYQ",10658045,7,,,"","","","","","","","","","","","","","",,"",25-JUL-24 03.36.12.159132000 PM,14-MAR-18 01.41.01.211024000 PM,"","APPROVED",15-JUN-18 01.34.40.482019000 AM,18-JUN-18 04.34.36.356121000 PM,"sharon.kennedy@oracle.com","","",57,""
137451177151578976795196771174213003188,14-MAR-18 11.04.32.796640000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","18c Assigning Values to Associative Array Type Variables Using Qualified Expressions","18C ASSIGNING VALUES TO ASSOCIATIVE ARRAY TYPE VARIABLES USING QUALIFIED EXPRESSIONS","This example uses a function to display the values of a table of BOOLEAN. ","",204353232939,"","","",11-AUG-24 09.46.42.907550000 AM,"PUBLIC","18c",29,"","GEOA3V6NKIMQBEOBEFEYQ7LMU",10671584,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"aa-agg",26-JAN-24 06.33.22.272980000 AM,14-MAR-18 11.14.59.246926000 PM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/lnpls/plsql-collections-and-records.html#GUID-4B379569-4068-4DB1-9D69-E706F4AC5758","",,,"","","",78,""
137451177152370823207044353283645548468,14-MAR-18 11.07.09.666451000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","18c Assigning Values to RECORD Type Variables Using Qualified Expressions","18C ASSIGNING VALUES TO RECORD TYPE VARIABLES USING QUALIFIED EXPRESSIONS","This example shows the declaration, initialization, and definition of RECORD type variables.","",204353232939,"","","",19-JUN-24 01.34.51.643405000 PM,"PUBLIC","18c",16,"","GEOA3V6OL1BYAWJCGMQ6T6VRA",10671726,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"rec-agg",19-JUN-24 01.34.51.643283000 PM,14-MAR-18 11.21.10.960913000 PM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/lnpls/plsql-collections-and-records.html#GUID-4B379569-4068-4DB1-9D69-E706F4AC5758","",,,"","","",60,""
137545662284716893833896225804437471849,15-MAR-18 08.55.22.504347000 PM,"",,"KITKATHTC14@GMAIL.COM","calendar","CALENDAR","Yet another calendar generator","",137542542632586084954592549689919030310,"","","",02-NOV-23 07.50.56.264482000 AM,"PUBLIC","calendar",15,"","GETRF53AOHYI34EZ44A9O2FAZ",10702650,1,,,"","","","","","","","","","","","","","",,"",21-NOV-22 09.52.49.404894000 AM,15-MAR-18 08.55.22.505954000 PM,"","APPROVED",15-JUN-18 01.34.40.570200000 AM,18-JUN-18 03.42.15.804537000 PM,"sharon.kennedy@oracle.com","","",37,""
137722897933008724194562696533410317039,17-MAR-18 01.18.30.506389000 PM,"",,"JEFF.D.SMITH@ORACLE.COM","Convert clobs to varchar2","CONVERT CLOBS TO VARCHAR2","getting more than 4k into a varchar2() from a clob using code from Tom","",137717201066728032934186975331934273946,"","","",27-JUL-24 04.50.29.998756000 PM,"PUBLIC","clob, varchar2, extended, string, 32k, 12c",5,"","GE3ZQVE6XZVUDHHGZQW0BS1FL",10738629,1,,,"","","","","","","","","","","","","","",,"",26-DEC-23 02.45.10.311444000 AM,17-MAR-18 01.18.30.512088000 PM,"","",,,"","","",47,""
135462538509888884311393022132047618157,23-FEB-18 09.54.33.237952000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","18c Row_num Polymorphic Table Function Example","18C ROW_NUM POLYMORPHIC TABLE FUNCTION EXAMPLE","The row_num PTF example appends a sequence column to a table.","",17367239570693,"","","",04-APR-24 05.57.38.631694000 AM,"PUBLIC","18c ARPLS",7,"","GC51C2IW1EBCODW5SDYVC7CBQ",10220160,4,,,"","","","","","","","","","","","","","",135355278221899347711766874504565651066,"ptfrwnmx",29-SEP-22 10.41.36.458044000 AM,23-FEB-18 10.26.13.578192000 PM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/arpls/DBMS_TF.html#GUID-C318D8C8-E80C-4671-B515-F3B22E073547","",,,"","","",22,""
137950175531782719380807959394309134501,19-MAR-18 05.29.40.661982000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","A To JSON Conversion Package (starting point)","A TO JSON CONVERSION PACKAGE (STARTING POINT)","I wrote this package for an upcoming Oracle Magazine article on JSON and PL/SQL. I didn't want to have to fuss with the concatenating delimiters to create JSON objects from keys and values. Plus I wanted to demonstrate moving data from an associative array to a JSON array object type instance. I encourage visitors to explore extending the package to support other collection types, plus the full range of scalars (like date and timestamp). When you get it working, please post your enhanced version on LiveSQL!","",107881830910509,"","","",09-JUN-24 04.58.43.870891000 PM,"PUBLIC","json,12.2,plsql,array",24,"","GFG304QBK2S5727AVGRD8OZ6V",10795697,4,,,"","","","","","","","","","","","","","",,"",14-JUN-23 08.07.15.217392000 PM,19-MAR-18 05.30.18.438233000 PM,"","",,,"","","",83,""
135467595619070605071743071282726182574,24-FEB-18 12.03.52.826204000 AM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","18c Rand_col Polymorphic Table Function Example","18C RAND_COL POLYMORPHIC TABLE FUNCTION EXAMPLE","The rand_col PTF appends specified number of random-valued columns to the output.","",102597333541963,"","","",04-APR-24 06.18.23.775835000 AM,"PUBLIC","18c ARPLS",3,"","GC51C2IWRTSYT1XJX3CNRLNVQ",10221391,4,,,"","","","","","","","","","","","","","",135355278221899347711766874504565651066,"ptfrdncol",24-MAR-22 04.01.43.092285000 PM,24-FEB-18 12.25.56.833248000 AM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/arpls/DBMS_TF.html#GUID-5C861282-03EE-420F-90D6-B01EB18A744D","",,,"","","",22,""
135674278295886297324362402915775420014,25-FEB-18 10.41.28.599704000 PM,"",,"ANDREJ.PASHCHENKO@TRIVADIS.COM","18c polymorphic table function TAB2KEYVAL","18C POLYMORPHIC TABLE FUNCTION TAB2KEYVAL","An example of using a polymorphic table function (PTF) to transpose columns to rows","",135672482094912073472260909603725513859,"","","",10-JUN-24 07.01.12.005073000 AM,"PUBLIC","18c, PTF, UNPIVOT",23,"","GBTQO1S132Q3T22SSRB58V3Q4",10251391,1,,,"","","","","","","","","","","","","","",,"",13-JAN-24 03.15.03.126914000 AM,25-FEB-18 10.41.28.652735000 PM,"","APPROVED",15-JUN-18 01.34.40.719919000 AM,15-JUN-18 05.03.56.291184000 PM,"sharon.kennedy@oracle.com","","",112,""
136770125830818282318388391883741855770,08-MAR-18 10.20.18.830244000 AM,"",,"MAARCSAB@GMAIL.COM","production of number 2","PRODUCTION OF NUMBER 2","production of numbers with self defined aggregation function","",136765212318297842221091872557190922177,"","","",07-MAR-22 07.02.44.511001000 PM,"PUBLIC","",5,"","GDKZVKT9X8QPAPQ2Y3C3F18P4",10501214,1,,,"","","","","","","","","","","","","","",,"",09-NOV-20 07.43.16.866876000 AM,08-MAR-18 10.20.18.839674000 AM,"","APPROVED",15-JUN-18 01.34.40.755730000 AM,18-JUN-18 03.58.19.059018000 PM,"sharon.kennedy@oracle.com","","",13,""
136959924682588990886841432859246109321,10-MAR-18 06.43.51.734042000 AM,"",,"ANAND.GHODKI@GMAIL.COM","Date and Timestamp as per local culture","DATE AND TIMESTAMP AS PER LOCAL CULTURE","This script gives time stamp in Indian style DD-MON-YYYY. Microsoft's default format is MM-DD-YYYY.  Indian Standard Time is GMT + 5.30 which is used in this script. Same can be replaced with local time of any other country. Similarly time format can be set as 12 hours or 24 hours as per choice.","",136959924681668998338114700057294709385,"","","",19-JUL-24 02.59.59.898109000 PM,"PUBLIC","date, time, local time, india, timestamp, sql ",27,"","GVULRUUDRQ4NGQHQAYGKPCBZC",10544409,3,,,"","","","","","","","","","","","","","",,"",27-APR-24 11.12.51.210204000 AM,10-MAR-18 06.43.51.749642000 AM,"","APPROVED",24-JUN-18 03.27.07.961327000 AM,25-JUN-18 12.02.19.889388000 PM,"sharon.kennedy@oracle.com","Can you please improve the script name and description.","",231,""
137524821430196448091123984852587386464,15-MAR-18 04.05.41.609511000 PM,"",,"NICOLAS.CHARRIER1975@LAPOSTE.NET","PL/SQL output test","PL/SQL OUTPUT TEST","Used to debug the display of PL/SQL error messages in Oracle Live SQL.","",137512008019006610268097952942402624536,"","","",05-JUL-24 08.44.36.506053000 PM,"PUBLIC","",20,"","GESJ43K2T5RRRUB4DN46E9BSI",10696027,4,,,"","","","","","","","","","","","","","",,"",12-APR-24 04.47.12.110455000 AM,15-MAR-18 04.19.40.362073000 PM,"","APPROVED",15-JUN-18 01.34.41.017536000 AM,15-JUN-18 04.40.11.416681000 PM,"sharon.kennedy@oracle.com","","",67,""
135798533333236980521867085323506059794,27-FEB-18 03.38.42.838084000 AM,"",,"MAHANTESHIMATH@GMAIL.COM","Triangle Numbers Puzzle","TRIANGLE NUMBERS PUZZLE","Triangle Numbers Puzzle","",135798533332692963903040502194888280594,"","","",05-MAR-24 04.55.01.206242000 AM,"PUBLIC","",,"","GB0WWC1V2PPLF4W5RGUUR2R2S",10283113,1,,,"","","","","","","","","","","","","","",,"",,27-FEB-18 03.38.42.852077000 AM,"","APPROVED",15-JUN-18 01.34.41.031958000 AM,15-JUN-18 05.14.44.312862000 PM,"sharon.kennedy@oracle.com","","",22,""
137484413368563573805655763985562879657,15-MAR-18 06.38.50.004200000 AM,"",,"MDP@VWD.COM","all timezones can be used in timestamp at time zone 'x' expression","ALL TIMEZONES CAN BE USED IN TIMESTAMP AT TIME ZONE 'X' EXPRESSION","falsify Stefan Knecht's claim at Oracle-L","",137484413368223865650344053187470444201,"","","",06-MAY-24 11.48.06.943881000 AM,"PUBLIC","",1,"","GEP758MSTV2G4YJW1STXXL2IJ",10678828,1,,,"","","","","","","","","","","","","","",,"",12-JAN-22 04.33.27.680129000 PM,15-MAR-18 06.38.50.027040000 AM,"","APPROVED",15-JUN-18 01.34.41.096690000 AM,19-JUN-18 04.02.01.068638000 PM,"sharon.kennedy@oracle.com","","",18,""
137484413369333659552750282769850713769,15-MAR-18 06.44.54.624606000 AM,"",,"ROGEL@WEB.DE","all time zones are valid","ALL TIME ZONES ARE VALID","falsify Stefan Knecht's assertion on Oracle-L","",137484413368674794981060309869635847849,"","","",04-MAY-22 11.18.51.615978000 PM,"PUBLIC","",3,"","GEP758MVINGC3NRXV36IR09OB",10679023,1,,,"","","","","","","","","","","","","","",,"",09-FEB-22 05.28.43.266709000 PM,15-MAR-18 06.44.54.635084000 AM,"","APPROVED",15-JUN-18 01.34.41.101549000 AM,18-JUN-18 03.53.43.553398000 PM,"sharon.kennedy@oracle.com","","",15,""
136760386633565431309941908498574801956,08-MAR-18 08.10.24.345669000 AM,"",,"THOMAS.TESKE@ORACLE.COM","Primary Key - options to choose","PRIMARY KEY - OPTIONS TO CHOOSE","Explains what it means to decide on the PK design:
- single column vs. multiple columns
- data-types used","",136760386633311556887822836371886504996,"","","",22-AUG-24 08.45.38.176010000 PM,"PUBLIC","modelling primary key ",59,"","GDKUJ2VJ8X4RHAZEOOMPQ8IY7",10497237,337949986681008890389062074985729416032,,,"","","","","","","","","","","","","","",,"",11-AUG-24 04.45.35.701951000 AM,08-MAR-18 08.10.24.348901000 AM,"","",,,"","","",429,""
135660614595426719576124941044481274175,25-FEB-18 07.23.39.374462000 PM,"",,"RAEESGILLANI@GMAIL.COM","What Customer ID buys the most?","WHAT CUSTOMER ID BUYS THE MOST?","What Customer ID buys the most? - Query returns the top 10 Customer ID's that order the most","",135656623045280079596228972365757604198,"","","",03-JUL-24 11.30.35.429562000 PM,"PUBLIC","",7,"","GBSYAV3E4TR6RRXB12CMIEZL9",10247526,3,,,"","","","","","","","","","","","","","",,"",18-NOV-23 02.05.41.158382000 PM,25-FEB-18 07.23.39.402370000 PM,"","APPROVED",15-JUN-18 01.34.41.135948000 AM,19-JUN-18 04.17.28.627928000 PM,"sharon.kennedy@oracle.com","","",51,""
136274357534060185864691542543785809757,03-MAR-18 04.35.07.873136000 PM,"",,"SAIONA.STOIAN@GMAIL.COM","Analytic function syntax example","ANALYTIC FUNCTION SYNTAX EXAMPLE","The purpose is to understand the analytic function syntax by gradually adding each component.

Analytic function general syntax:
analytic_function(arguments) OVER ([analytic clause]) 

Analytic clause can contain:
- PARTITION BY [query_partition_clause]
- ORDER BY [order_by_clause]
- [windowing_clause]: ROWS|RANGE, BETWEEN ... AND, CURRENT ROW etc.","",136274357533946546837647767401363429213,"","","",17-JUL-24 11.14.40.636162000 AM,"PUBLIC","analytic functions",69,"","GCSDNY72C45U55IY7M7154GRZ",10385875,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",17-JUL-24 11.14.40.636006000 AM,03-MAR-18 04.35.07.884566000 PM,"","APPROVED",15-JUN-18 01.34.41.158522000 AM,19-JUN-18 05.32.34.220111000 PM,"sharon.kennedy@oracle.com","","",265,""
137644847600640477622225578497684600077,16-MAR-18 07.54.37.832914000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Traversing a JSON Array with PL/SQL","TRAVERSING A JSON ARRAY WITH PL/SQL","Demonstration of working with 12.2 PL/SQL JSON object types, such as JSON_ARRAY_T to traverse an array recursively.","",106016560315348,"","","",29-JUL-24 08.26.24.307510000 PM,"PUBLIC","json,array",40,"","GFGX5R8NJPMX8JQ15PGYQLJ0Z",10795280,4,,,"","","","","","","","","","","","","","",,"",17-MAY-23 08.28.44.555719000 PM,19-MAR-18 05.12.01.121231000 PM,"","",,,"","","",101,""
137924548248231575341775033601526373543,19-MAR-18 12.01.34.080580000 PM,"",,"BRYN.LLEWELLYN@ORACLE.COM","Reserved words, keywords, and the ends of labeled blocks","RESERVED WORDS, KEYWORDS, AND THE ENDS OF LABELED BLOCKS","This code accompanies a blog post by Bryn Llewellyn, PL/SQL Product Manager, with these three key takeaways: Unless you use terms of art correctly and with precision you’ll never be able to reason soundly.
Never, ever, ask anyone—and especially yourself—about the behavior of some PL/SQL code before compiling it with warnings turned on. You learn so much about your errors in thinking when you do.
Never try reason about a program whose whole effect is “null”.  The optimizer might subvert the intention in your head because you told it “I do not care what this program does.”","",100765904841473,"","","",30-APR-24 10.28.24.890863000 AM,"PUBLIC","warning,reserved word,keyword",9,"","GFFMRZV55C7ABD62I81ZUU38P",10801204,4,,,"","","","","","","","","","","","","","",,"",10-MAY-22 07.09.15.218259000 AM,19-MAR-18 09.08.27.824324000 PM,"","",,,"","","",31,""
137494031587418562810509601109634210812,15-MAR-18 08.46.30.789237000 AM,"",,"PATRICKJOLLIFFE@LIFUNG.COM","Hybrid Histogram/Unpadded NCHAR","HYBRID HISTOGRAM/UNPADDED NCHAR","Demonstrates wrong cardinality estimates if NCHAR is unpadded","",137494031587142927723637465657801202684,"","","",10-APR-23 03.24.13.332000000 PM,"PUBLIC","bugs",2,"","GEQR5RGIPO95IJNVVD7YOYOH6",10681904,1,,,"","","","","","","","","","","","","","",,"",28-MAR-23 04.15.44.615309000 PM,15-MAR-18 08.46.30.794212000 AM,"","APPROVED",15-JUN-18 01.34.41.205129000 AM,20-JUN-18 04.56.24.761085000 PM,"sharon.kennedy@oracle.com","","",17,""
136116390358362758728591630003556073724,02-MAR-18 05.07.25.401736000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - the Tabitosan method","ANALYTICS - THE TABITOSAN METHOD","Example of the tabitosan method at the granularity of minutes rather than days.","",136116390358067780828605660484927766780,"","","",02-MAY-24 12.05.59.495903000 PM,"PUBLIC","analytics, row_number, contiguous ranges, gaps",14,"","GCI9EPTFTWRUHNE89FBRUHY0U",10362392,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",11-MAR-23 02.46.10.771671000 AM,02-MAR-18 05.07.25.414451000 AM,"","",,,"","","",44,""
136146652002472205280783658063445653717,02-MAR-18 11.41.33.295601000 AM,"",,"STEW.ASHTON@GMAIL.COM","Double Range Join vs. MATCH_RECOGNIZE","DOUBLE RANGE JOIN VS. MATCH_RECOGNIZE","First, double range join: key A must be in range B, key B must be in range A.
Next, MATCH_RECOGNIZE alternative if inequality joins are scaling badly.","",136146652002225584413582273711805593813,"","","",07-JAN-24 03.40.58.076375000 PM,"PUBLIC","range join, pattern matching",9,"","GCK0AJGAIIOZWALWIHJOO4BQF",10534754,1,,,"","","","","","","","","","","","","","",,"",07-JAN-24 03.40.58.076233000 PM,09-MAR-18 04.51.10.274793000 PM,"","APPROVED",15-JUN-18 01.34.41.216701000 AM,20-JUN-18 05.13.43.306672000 PM,"sharon.kennedy@oracle.com","","",45,""
137410866603825161531369527025947438474,14-MAR-18 01.39.43.150774000 PM,"",,"KALYAN.COOL007@GMAIL.COM","print even numbers","PRINT EVEN NUMBERS","Print even numbers till 100.","",137410866598626780507026621574710881674,"","","",28-JUL-24 11.44.55.897124000 AM,"PUBLIC","logical progeamming",48,"","GELZCBT6ZGEJRTHMB4FZ9OGE0",10658029,6,,,"","","","","","","","","","","","","","",,"",21-MAR-24 11.00.51.120602000 PM,14-MAR-18 01.39.43.155595000 PM,"","APPROVED",15-JUN-18 01.34.41.231116000 AM,18-JUN-18 03.54.01.990615000 PM,"sharon.kennedy@oracle.com","","",215,""
332086545253556314516129046008548731489,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Interval Partitioning","INTERVAL PARTITIONING","Example of interval partitioning by date","",332086071460582863959888518407409770276,"","","",02-AUG-24 12.19.00.737066000 AM,"PUBLIC","",185,"","332086545253569612700144806929470499425332086545253570821625964421558645205601",28465,8,,,"","","","","","","","","","","","","","",,"",13-JUN-24 07.49.18.646521000 PM,19-FEB-16 04.51.39.643052000 AM,"","",,,"","","",335,""
333689245444410439396959603427677749819,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Associative Array Example","ASSOCIATIVE ARRAY EXAMPLE","Demonstrates how to declare an associative array type, populate that array non-sequentially, and iterate through the elements using methods.","",333677252293389946503128885578301055996,"","","",14-MAY-24 08.59.46.768242000 PM,"PUBLIC","ASSOCIATIVE ARRAY SPARSE METHODS",68,"","O5BNMWLZVDK2LZS4QH9T1CMOD",40138,4,,,"","","","","","","","","","","","","","",,"",04-JUL-23 07.54.41.668669000 AM,14-MAR-16 05.29.50.310763000 AM,"","",,,"","","",172,""
333458182667767698971416648672717974517,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Inline View","INLINE VIEW","use a select statement inline in a query column list","",333458182667699999125518229438934428661,"","","",04-APR-24 11.45.23.239448000 AM,"PUBLIC","",27,"","O4YBHHFTDA1WUZJTJZU5TEA2F",14441802,1,,,"","","","","","","","","","","","","","",,"",14-MAR-23 03.22.13.469772000 AM,20-JUL-18 02.24.21.092968000 PM,"","APPROVED",20-JUL-18 02.24.21.068320000 PM,,"Auto Approved","","",77,""
333689245444386260880567310844183626299,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Simple CONTINUE Example","SIMPLE CONTINUE EXAMPLE","CONTINUED was added in 11.1 to support a wider variety of behavior within loops, especially nested loops.","",333677252293389946503128885578301055996,"","","",20-AUG-24 06.54.13.318459000 PM,"PUBLIC","LOOP, continue, pl/sql",68,"","O5BNMWLZSB7S2NFJILRCRMV15",40126,4,,,"","","","","","","","","","","","","","",,"",22-MAY-24 10.34.10.470700000 AM,16-OCT-15 02.17.32.455489000 AM,"","",,,"","","",139,""
333689245444401976916222301023454806587,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Nested Table Example","NESTED TABLE EXAMPLE","Demonstrates how to declare a schema-level nested table type, extend to make room for news and populate them, use MULTISET operators to perform set level operations, and finally use the TABLE operator to fetch elements from the nested table as though it were a relational table. Fun stuff!","",333677252293389946503128885578301055996,"","","",15-JUN-24 03.44.28.117196000 AM,"PUBLIC","NESTED TABLE",41,"","O5BNMWLZUBA02MG6A43C6X7YL",40134,4,,,"","","","","","","","","","","","","","",,"",27-FEB-23 03.08.19.649796000 PM,30-NOV-15 06.31.27.707166000 AM,"","",,,"","","",222,""
334281852032828253591950094172466898339,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Sub Query Factoring","SUB QUERY FACTORING","Example The following statement creates the query names dept_costs and avg_cost for the initial query block containing a join, and then uses the query names in the body of the main query.","",334281852025138276453381437992160912803,"","","",31-JUL-24 04.13.10.133590000 AM,"PUBLIC","subquery, with",25,"","O59U2TFM6SM5R4EUPJP17R2ET",45138,1,,,"","","","","","","","","","","","","","",,"",21-SEP-23 03.03.26.251030000 AM,29-OCT-15 03.50.32.343076000 PM,"","",,,"","","",233,""
334281852033294898958321341033903482275,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Sub Query in FROM Clause","SUB QUERY IN FROM CLAUSE","The following statement selects from subqueries in the FROM clause and for each department returns the total employees and salaries as a decimal value of all the departments","",334281852025138276453381437992160912803,"","","",09-AUG-24 01.44.39.019596000 PM,"PUBLIC","",62,"","O59U2TFOTFGDF9AP8VMPW91BP",45453,1,,,"","","","","","","","","","","","","","",,"",15-FEB-24 06.02.45.185351000 PM,11-FEB-16 09.10.25.932576000 AM,"","",,,"","","",327,""
334281852033316659623074404359048193443,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Using the GROUP BY CUBE Clause","USING THE GROUP BY CUBE CLAUSE","To return the number of employees and their average yearly salary across all possible combinations of department and job category, issue the following query on the sample tables hr.employees and hr.departments","",334281852025138276453381437992160912803,"","","",20-AUG-24 01.17.14.428610000 PM,"PUBLIC","GROUPING, cube, analystics",221,"","O59U2TFOV5VWT2FRCD3CN0SVP",45463,1,7,,"","","","","","","","","","","","","","",,"",20-AUG-24 01.17.14.428493000 PM,08-MAR-16 09.57.28.204648000 AM,"","",,,"","","",723,""
334281852033349300620203999346765260195,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Hierarchical Queries","HIERARCHICAL QUERIES","Using connect by and connect by prior to perform hierarchical queries using a self referencing foreign key.","",334281852025138276453381437992160912803,"","","",14-AUG-24 07.27.50.888589000 AM,"PUBLIC","connect by, hierarchical query",242,"","O59U2TFOZ9I7WR5AZNSAR4X7P",45484,1,,,"","","","","","","","","","","","","","",,"",19-JUN-24 04.47.54.212310000 PM,15-MAR-16 03.32.55.256162000 PM,"","",,,"","","",626,""
334281852033360180952580531009337615779,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Using the HAVING Condition","USING THE HAVING CONDITION","Restricting aggregate query results using the SQL HAVING clause.","",334281852025138276453381437992160912803,"","","",31-JUL-24 09.19.09.365515000 AM,"PUBLIC","HAVING",50,"","O59U2TFO1MQZLOPTJE0L5IBZP",45488,1,,,"","","","","","","","","","","","","","",,"",11-MAR-24 06.58.43.847452000 PM,07-DEC-15 04.27.20.634945000 PM,"","",,,"","","",171,""
334281852033394030875529740626229388707,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","SQL Joins","SQL JOINS","SQL Join query examples, used to select rows from multiple tables using a join key.  ","",334281852025138276453381437992160912803,"","","",22-AUG-24 10.45.32.021608000 PM,"PUBLIC","SELF JOIN, OUTER JOIN, LEFT OUTER JOIN, RIGHT OUTER JOIN",4984,"","O59U2TFO5VU5Q51M8VQHI3YUT",45508,1,,,"","","","","","","","","","","","","","",,"",18-AUG-24 07.14.32.478931000 AM,11-FEB-16 09.59.56.304186000 AM,"","",,,"","","",15377,""
45314864668514071593756464140704683996,14-OCT-15 08.39.36.913145000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Create Local Table from Other Schema","CREATE LOCAL TABLE FROM OTHER SCHEMA","Use this script as the starting point in creating tables in your schema from another LiveSQL schema (such as HR or SH or WORLD). Just change the name of the schema and table as needed.

This is of particular importance if you want to reference one of these pre-defined schema tables in your PL/SQL code. The role-based privileges that allow you to SELECT from them (outside of PL/SQL) will not help you when compiling PL/SQL code. ","",129674533397185,"","","",16-AUG-24 12.17.29.740703000 AM,"PUBLIC","",39,"","CAXYZTVIT7LIQBIKNLU9TWDBI",14495086,4,,,"","","","","","","","","","","","","","",,"",29-DEC-23 04.14.19.991448000 PM,23-JUL-18 01.58.09.234369000 PM,"","APPROVED",23-JUL-18 01.58.09.231908000 PM,,"Auto Approved","","",226,""
45314864668699037244157502404434728924,14-OCT-15 08.51.15.001895000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Template Block and Utility Package to Calculate Elapsed Time","TEMPLATE BLOCK AND UTILITY PACKAGE TO CALCULATE ELAPSED TIME","Use this script as a template to allow you to easily compute how much time a chunk of your PL/SQL code took to execute","",129674533397185,"","","",30-JUN-24 07.55.54.322007000 PM,"PUBLIC","performance",20,"","CA7HBOPDZUAN7547MLYSN7LR8",14495092,4,,,"","","","","","","","","","","","","","",,"",04-DEC-19 11.41.27.084595000 AM,23-JUL-18 01.58.26.814461000 PM,"","APPROVED",23-JUL-18 01.58.26.810412000 PM,,"Auto Approved","","",34,""
338192746785651358244951934454249172535,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Analyst Relations Data Model","ANALYST RELATIONS DATA MODEL","Track interactions with industry analysts","",16932630511559,"","","",15-JUL-24 06.49.37.505462000 PM,"PUBLIC","",52,"","PCJLYB76R2QQJTBV93CWEKD6H",112244,337949986681008890389062074985729416032,,,"","","","","","","","","","","","","","",,"",27-DEC-23 02.36.38.740416000 AM,17-MAR-16 01.37.50.598766000 PM,"","",,,"","","",148,""
4127143912590968216742846653855836130,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","LAG analytic function example","LAG ANALYTIC FUNCTION EXAMPLE","LAG is an analytic function. It provides access to more than one row of a table at the same time without a self join. Given a series of rows returned from a query and a position of the cursor, LAG provides access to a row at a given physical offset prior to that position.","",4127143912577670032727085732934068194,"","","",16-JUL-24 12.21.06.732696000 PM,"PUBLIC","lag",157,"","GWII1O4KUMDIXCG4XBNBNGXG",66146,7,,,"","","","","","","","","","","","","","",,"",22-DEC-23 06.38.46.489339000 AM,16-FEB-16 06.25.16.201394000 PM,"","",,,"","","",271,""
4165838578281636477306656429580119274,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","EXPLAIN PLAN","EXPLAIN PLAN","Use the EXPLAIN PLAN statement to determine the execution plan Oracle Database follows to execute a specified SQL statement. This statement inserts a row describing each step of the execution plan into a specified table. It should be noted that Explain Plan has been deprecated and it is recommended that dbms_xplan be used.","",4165838578141401082231359445314202858,"","","",08-AUG-24 11.23.04.596051000 PM,"PUBLIC","EXPLAIN PLAN, performance, access path",261,"","GYQXQAW9HM33DRA105L4F0AK",135001,1,,,"","","","","","","","","","","","","","",,"",18-JUL-24 07.36.53.300565000 PM,11-APR-16 12.54.03.836222000 PM,"","",,,"","","",607,""
2889940178979873051402006668369377120,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","range-partition tables TEST","RANGE-PARTITION TABLES TEST","This example creates and modifies a range-partitioned table.  One partition is created for each quarter of the sales year.","",2872877121890608789971030767584305388,"","","",11-AUG-24 03.13.47.915689000 AM,"PUBLIC","range partition",16,"","EW3LV93OQQKM8WBYGESIXBSI",65537,8,,,"","","","","","","","","","","","","","",,"",09-OCT-23 03.59.13.181823000 PM,03-FEB-16 09.35.02.103146000 AM,"","",,,"","","",71,""
2891117340787392454455651447568267862,05-OCT-15 05.52.25.000000000 PM,"",,"ERIC.BELDEN@ORACLE.COM","Creating a Range Partitioned Table","CREATING A RANGE PARTITIONED TABLE","Administering range partitioning","",2885410749916590007078559345067881154,"","","",15-AUG-24 11.44.18.750031000 PM,"PUBLIC","",155,"","EW51YHTOM91LPAHSX87OVKRS",65545,8,,,"","","","","","","","","","","","","","",64303337948810339592179290520196671450,"range-partitioning-example",15-AUG-24 11.44.18.749928000 PM,25-FEB-16 01.54.36.978968000 PM,"https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-F0BCECA4-A485-4DA2-863A-6DB7C064059C","APPROVED",17-JUL-18 04.01.47.537331000 PM,,"Auto Approved","","",408,""
2889940179201106476391483807340607328,05-OCT-15 05.52.25.000000000 PM,"",,"ERIC.BELDEN@ORACLE.COM","Creating a Composite Range-List Partitioned Table","CREATING A COMPOSITE RANGE-LIST PARTITIONED TABLE","Administering composite range-list partitioning","",2885410749916590007078559345067881154,"","","",09-AUG-24 01.58.35.085986000 PM,"PUBLIC","",105,"","EW3LV94GJGJPM5G353VQTFXU",65550,8,,,"","","","","","","","","","","","","","",64303337948810339592179290520196671450,"composite-range-list-partitioning-example",31-JUL-24 08.42.39.369229000 PM,14-MAR-16 10.28.04.161343000 AM,"https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-50581F67-E90A-49E4-A445-2332910D8608","APPROVED",25-JUL-18 08.26.46.195531000 PM,,"Auto Approved","","",144,""
2889940179237374250979922682581792608,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","List-Partition Tables","LIST-PARTITION TABLES","This example creates and modifies a list-partitioned table.  The partitions are created as groups of states.","",2872877121890608789971030767584305388,"","","",31-JUL-24 05.24.44.477886000 PM,"PUBLIC","partitioning, list-partition, list-partitioned",50,"","EW3LV94K3IF0NPUX0VLND1U6",65556,8,,,"","","","","","","","","","","","","","",,"",13-FEB-24 09.01.29.271598000 PM,29-DEC-15 11.43.19.093582000 AM,"","",,,"","","",138,""
45284471456191351232471679591313472078,14-OCT-15 01.43.24.136936000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","FORALL with INDICES OF","FORALL WITH INDICES OF","FORALL offers bulk execution of non-query DML statements, avoiding the performance hit of row by row processing. The INDICES OF clause allows you use sparsely-filled bind arrays in FORALL.","",100567836060317,"","","",03-AUG-24 02.55.42.476396000 PM,"PUBLIC","FORALL,iNDICES-OF,plsql,performance",59,"","CAXWF6AQ7EE7RX3QE3AQ7X6DC",45918417,4,,,"","","","","","","","","","","","","","",,"",18-APR-23 04.20.37.970891000 AM,06-APR-20 08.15.40.451714000 PM,"","APPROVED",20-JUL-18 02.11.47.765827000 PM,,"Auto Approved","","",203,""
2885410750006050517730041903996138178,05-OCT-15 05.52.25.000000000 PM,"",,"ERIC.BELDEN@ORACLE.COM","Creating a List Partitioned Table","CREATING A LIST PARTITIONED TABLE","Administering list partitioning","",2885410749916590007078559345067881154,"","","",14-JUL-24 02.56.48.190468000 PM,"PUBLIC","",35,"","EWT612PK4K9MRQPG5T8FJ8J4",65548,8,,,"","","","","","","","","","","","","","",64303337948810339592179290520196671450,"list-partitioning-example",09-JUL-24 12.12.30.670214000 AM,15-FEB-16 01.05.36.567722000 PM,"https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-D3E92FD8-5FE4-4CEA-9CB8-CC9277A74429","APPROVED",25-JUL-18 08.55.22.465352000 PM,,"Auto Approved","","",106,""
78900986834087340833910750767121864,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","XML with EMP and DEPT","XML WITH EMP AND DEPT","Basic XML casting example on the standard EMP and DEPT tables","",56741988769080818981751274737418133,"","","",14-AUG-24 08.42.12.964760000 AM,"PUBLIC","XML, XMLForest",799,"","ET8QJAQFOUU6QFCHCS74AJE",81514,12,,,"","","","","","","","","","","","","","",,"",14-AUG-24 08.42.12.964637000 AM,15-MAR-16 09.56.50.174409000 PM,"","",,,"","","",1500,""
893254896401070468085868934623545251,05-OCT-15 05.52.25.000000000 PM,"",,"VLADISLAV.UVAROV@ORACLE.COM","Oracle Text example","ORACLE TEXT EXAMPLE","A basic example of Oracle Text index with stemming and stoplist queries. Also compares against functionality offered by ""like"" operator.","",900963126750393214127234538892098198,"","","",07-JUL-24 04.38.53.209655000 AM,"PUBLIC","text, contains, stemming, stoplist",83,"","BPUG62TF9SHA9DEWA3Q0PJQT",64910,893254896586036118486907198353590179,,,"","","","","","","","","","","","","","",,"",06-MAR-24 07.04.17.286909000 AM,11-MAR-16 11.18.13.894316000 AM,"","",,,"","","",175,""
893254896489322052917736864377096099,05-OCT-15 05.52.25.000000000 PM,"",,"JOEL.KALLMAN@ORACLE.COM","Oracle Text Demo","ORACLE TEXT DEMO","Basic introduction to Oracle Text.","",893254896120599677935274966091712419,"","","",16-AUG-24 08.20.57.116169000 AM,"PUBLIC","text",269,"","BPUG62S34BE5VU10O1TXUK9X",64919,893254896586036118486907198353590179,,,"","","","","","","","","","","","","","",,"",15-JUL-24 12.36.50.946515000 PM,24-FEB-16 12.25.39.827913000 PM,"","",,,"","","",803,"N"
2859632934822663026389136590913591280,05-OCT-15 05.52.25.000000000 PM,"",,"PADMAJA.POTINENI@ORACLE.COM","GROUP BY ROLLUP Example","GROUP BY ROLLUP EXAMPLE","This example calculates multiple levels of subtotals across three dimensions and a grant total.","",2859632934812991619832219557515941872,"","","",13-AUG-24 10.07.57.092464000 AM,"PUBLIC","",141,"","EVCMNT826LOWU66ASMJZHGF2",65521,7,,,"","","","","","","","","","","","","","",80500193110113978985931202241841742454,"rollup",08-AUG-24 04.02.56.893488000 PM,07-JAN-16 11.45.22.349188000 AM,"https://docs.oracle.com/database/121/DWHSG/sql-aggregation-data-warehouses.htm#GUID-9E931694-4AA8-464A-B8E7-19E568C5BFC8","",,,"","","",463,""
3526417262829684019726448881211943740,05-OCT-15 05.52.25.000000000 PM,"",,"RANDY.URBANO@ORACLE.COM","Creating and Modifying Tables","CREATING AND MODIFYING TABLES","This example creates the admin_emp table in the current schema and modifies the table in various ways. It is based on examples in the Oracle Database Administrator's Guide.","",3526417262815176909891073331115469628,"","","",21-AUG-24 05.48.38.795043000 AM,"PUBLIC","",120,"","FX3PHRV67P5VG1BES28GL7L0",14441006,1,,,"","","","","","","","","","","","","","",73748114932457720992396278467249496574,"create-modify",18-AUG-24 03.27.10.509278000 PM,20-JUL-18 01.37.01.896709000 PM,"","APPROVED",20-JUL-18 01.37.01.880652000 PM,,"Auto Approved","","",351,""
3628545395128677476208787419183070264,05-OCT-15 05.52.25.000000000 PM,"",,"RANDY.URBANO@ORACLE.COM","Creating Indexes","CREATING INDEXES","Indexes are optional structures associated with tables and clusters that allow SQL queries to execute more quickly against a table. This example illustrates how to create various types of indexes.","",3628545395114170366373411869086596152,"","","",29-JUL-24 03.31.20.932215000 PM,"PUBLIC","index, table, alter",196,"","F33V8D07CQR53J9P1YNC7LM1",14441014,1,,,"","","","","","","","","","","","","","",73748114932456512066576663838074790398,"create",19-JUL-24 06.37.36.937824000 AM,20-JUL-18 01.37.34.928320000 PM,"","APPROVED",20-JUL-18 01.37.34.919458000 PM,,"Auto Approved","","",600,""
4376295094424733659966429201408077263,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Generating a Default Value from a SEQUENCE","GENERATING A DEFAULT VALUE FROM A SEQUENCE","Referencing a sequence as a column default value in a create table statement.  New with database 12c.","",4376295094410226550131053651311603151,"","","",12-JUL-24 06.25.08.150509000 AM,"PUBLIC","default, on null, default on null, sequences",42,"","HAV9MQ5I9NMY4G9LY9N0NC5T",1167,14,,,"","","","","","","","","","","","","","",,"",30-MAY-24 09.48.59.998648000 AM,02-NOV-15 06.53.58.301581000 AM,"","",,,"","","",220,""
45946534613066522592803663230878243503,20-OCT-15 09.32.42.730709000 PM,"",,"LUCAS.JELLEMA@AMIS.NL","Match_Recognize - who is afraid of red, yellow and blue","MATCH_RECOGNIZE - WHO IS AFRAID OF RED, YELLOW AND BLUE","This example demonstrates the use of MATCH_RECOGNIZE for pattern matching, in this case finding a very simple pattern of three subsequent rows with the colors red, yellow and blue.

A more elaborate explanation is provided in this blog article: https://technology.amis.nl/2013/06/27/oracle-database-12c-pattern-matching-through-match_recognize-in-sql/ ","",45944288811517367115378568929145974792,"","","",31-JUL-24 04.13.55.300919000 AM,"PUBLIC","match_recognize,pattern matching,regular expressions,12c",42,"","CBYFLZ72WYXYQ2B7YO9Y8X1B1",6388,14,,,"","","","","","","","","","","","","","",,"",27-JUL-23 02.56.50.414309000 PM,12-DEC-15 08.12.37.977059000 AM,"","APPROVED",15-JUN-18 01.34.34.693215000 AM,15-JUN-18 01.20.30.463312000 PM,"sharon.kennedy@oracle.com","","",106,""
4377920793803621341943132406535593790,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Defaulting timestamp and primary key values","DEFAULTING TIMESTAMP AND PRIMARY KEY VALUES","Using default and default on null to reduce the need to code triggers and sequences.  Avoid need to create sequences by using identity datatype, avoid need to default creation dates via a trigger by using the default on null.","",4376295094410226550131053651311603151,"","","",11-AUG-24 05.44.21.197514000 AM,"PUBLIC","default, default primary key",41,"","HAZM8XBAX8I06ZRFVSLPCRL8",1177,14,,,"","","","","","","","","","","","","","",,"",11-NOV-22 04.31.04.482870000 PM,16-MAR-16 05.34.18.771929000 PM,"","",,,"","","",355,""
5319335737634982704064621434802703454,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Materialized View","MATERIALIZED VIEW","Example of creating a materialized view refreshed on commit.","",5319335737592670300378109413687987294,"","","",15-AUG-24 11.18.59.806497000 AM,"PUBLIC","",105,"","ITBWXJJFJZ6JDIH899DSS2A4",1836,1,,,"","","","","","","","","","","","","","",,"",09-JAN-24 06.42.19.049373000 AM,02-FEB-16 01.16.48.170403000 PM,"","",,,"","","",346,""
4374381847999999647925137394404871806,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","32K VARCHAR2 columns","32K VARCHAR2 COLUMNS","New with Oracle database 12c you can create tables that have VARCHAR2(32767), which is longer then the 11g maximum of 4000.","",4374381847987910389728991102657810046,"","","",05-AUG-24 07.07.48.443734000 AM,"PUBLIC","longer varchar2s, new with 12c",81,"","HASAH6ULM0LZYSYBRMIROBGW",112274,14,,,"","","","","","","","","","","","","","",,"",30-MAY-24 04.41.09.843895000 PM,17-MAR-16 01.37.12.450724000 PM,"","",,,"","","",211,""
45823586015278392806047560982032186925,19-OCT-15 05.20.22.243703000 PM,"",,"CHARLIE.BERGER@ORACLE.COM","RFM - Recency, Frequency, Monetary SQL Script","RFM - RECENCY, FREQUENCY, MONETARY SQL SCRIPT","Creates RFM index of SH.Customers based on SH.Sales using clever SQL script/logic.","",45822463564917420106047476790823889376,"","","",11-AUG-24 03.13.40.628946000 AM,"PUBLIC","RFM, SQL Analytics, Data Mining, Predictive Analtyics",48,"","CBRB4FCNMGEURPZIRMI91TDI3",5758,7,,,"","","","","","","","","","","","","","",,"",03-MAR-24 06.55.57.512335000 PM,19-OCT-15 05.27.12.584993000 PM,"","",,,"","","",92,""
45449591968487305403586116465329887213,16-OCT-15 03.25.38.533761000 AM,"",,"HKCHITAL@SINGNET.COM.SG","Department_with_Max_Total_Salary","DEPARTMENT_WITH_MAX_TOTAL_SALARY","Reporting only the department with the greatest total salary.
Use a subquery to group the departments and compute total salary in each department.
Use the main query to report only the first row in the ordered resultset from the subquery","",45448635176737055641715290782067984996,"","","",18-AUG-24 11.15.59.956423000 AM,"PUBLIC","",123,"","CA5QYJYYVBG2UJQAVJ90IGWVZ",3621,3,,,"","","","","","","","","","","","","","",,"",04-MAR-23 05.18.45.524306000 AM,31-DEC-15 05.27.02.704670000 AM,"","APPROVED",15-JUN-18 01.34.34.705147000 AM,15-JUN-18 01.20.53.023591000 PM,"sharon.kennedy@oracle.com","","",318,""
4882612203994549517418905406232245634,05-OCT-15 05.52.25.000000000 PM,"",,"ERIC.BELDEN@ORACLE.COM","Creating a Table with Temporal Validity","CREATING A TABLE WITH TEMPORAL VALIDITY","Administering temporal validity","",4882612203142256814590591838064391554,"","","",21-MAY-24 07.25.45.843109000 PM,"PUBLIC","",39,"","IMZDE4LMUX0SVL6WOZWJFN8S",1523,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",64304329864818459709079308608884853754,"temporal-validity-example",27-FEB-24 12.02.43.858038000 AM,10-DEC-15 05.29.42.655198000 AM,"https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-88C12A0B-2419-4872-A95B-163F80815CBD","APPROVED",25-JUL-18 08.47.25.047752000 PM,,"Auto Approved","","",103,""
45984336215676244494670867301940230842,21-OCT-15 06.13.57.318368000 AM,"",,"HKCHITAL@SINGNET.COM.SG","A Row Generator","A ROW GENERATOR","A simple way to generate rows, with different dataypes also generated","",45984336215665364162294335639367875258,"","","",31-JUL-24 04.15.36.445875000 AM,"PUBLIC","",65,"","CB0L5VPZD5GBEGU2G4T3K42Y0",15349755,3,,,"","","","","","","","","","","","","","",,"",09-MAY-24 09.32.02.273526000 PM,28-AUG-18 02.33.00.469243000 PM,"","APPROVED",15-JUN-18 01.34.34.711430000 AM,15-JUN-18 01.20.57.929351000 PM,"sharon.kennedy@oracle.com","","",81,"N"
5806588943124221982447684653702333751,05-OCT-15 05.52.25.000000000 PM,"",,"CARSTEN.CZARSKI@ORACLE.COM","Compute real-earth distances with SQL","COMPUTE REAL-EARTH DISTANCES WITH SQL","This SQL script shows how to use the SDO_GEOM.SDO_DISTANCE function to calculate distances between two locations.","",5806588943093998836957318924334679351,"","","",14-AUG-24 10.56.45.693245000 AM,"PUBLIC","distance,sql,locator",233,"","EVN65VQDDZMSECH8M6U8AKLOM",3248616,331612950318691907290794821632381319278,,,"","","","","","","","","","","","","","",,"",14-AUG-24 10.56.45.693083000 AM,20-APR-17 01.19.35.248586000 PM,"","",,,"","","",413,""
45946947081430564944842383955629619254,20-OCT-15 09.41.39.819791000 PM,"",,"LUCAS.JELLEMA@AMIS.NL","MATCH_RECOGNIZE - consecutive employees hired in the same job","MATCH_RECOGNIZE - CONSECUTIVE EMPLOYEES HIRED IN THE SAME JOB","No description provided","",45944288811517367115378568929145974792,"","","",31-JUL-24 04.15.32.684348000 AM,"PUBLIC","12c,match_recognize,pattern match",15,"","CBYGGU1JRYCH7XRRBHQMXFNBC",6399,3,,,"","","","","","","","","","","","","","",,"",29-SEP-23 02.21.48.884794000 PM,02-NOV-15 01.17.03.067614000 PM,"","APPROVED",15-JUN-18 01.34.34.716196000 AM,15-JUN-18 01.21.06.929024000 PM,"sharon.kennedy@oracle.com","","",51,""
46138668045510622111382491060853421493,22-OCT-15 05.55.37.622035000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","History Trigger Creation Package","HISTORY TRIGGER CREATION PACKAGE","Demonstration of a package used to generate the necessary SQL for a history table and the appropriate after update triggers.

Note that this does create the triggers; it merely generates the SQL based on the table meta data. Also, the generated trigger logs updates, but not inserts or deletions.","",46136275592361841910093508474212871403,"","","",22-JUL-24 06.25.16.964876000 PM,"PUBLIC","history",14,"","CB9IU6RZ8LP2H5JVILZGTC8O3",7484,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",21-JAN-24 08.32.30.524957000 PM,09-FEB-16 02.31.53.264645000 PM,"","",,,"","","",129,""
46163100847690766928696426066998904688,22-OCT-15 11.30.30.990338000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","SQL 101","SQL 101","Full database schema with tables, views, sequences, packages, procedures, functions, et all","",46163100847548113681981899824383575920,"","","",16-AUG-24 01.08.11.363748000 AM,"PUBLIC","",24,"","CCAXMYRATJ5X2TZ2NEGWWRS26",7559,1,,,"","","","","","","","","","","","","","",,"",04-JUL-24 02.24.24.976895000 AM,22-OCT-15 11.30.30.990356000 PM,"","",,,"","","",179,""
4364251227429191587605529794269839796,05-OCT-15 05.52.25.000000000 PM,"",,"RANDY.URBANO@ORACLE.COM","Enabling and Disabling Tables for the In-Memory Column Store","ENABLING AND DISABLING TABLES FOR THE IN-MEMORY COLUMN STORE","The In-Memory Column Store (IM column store) is an optional portion of the system global area (SGA) that stores copies of tables, table partitions, and other database objects. In the IM column store, data is populated by column rather than row as it is in other parts of the SGA, and data is optimized for rapid scans. This script enables the IM column store for a table with various options and then disables IM column store for the table. This example assumes that the IM column store is enabled for the current database.","",4364251227257524121220252451461562804,"","","",31-JUL-24 05.25.36.274115000 PM,"PUBLIC","",76,"","G968NEZQ4753LH37HQU67QRQ",14441055,1,,,"","","","","","","","","","","","","","",73748114932457720992396278467249496574,"enable-imcolstore",24-DEC-23 05.22.16.495066000 PM,20-JUL-18 01.38.34.881729000 PM,"","APPROVED",20-JUL-18 01.38.34.870983000 PM,,"Auto Approved","","",95,""
45282789007035420041923571647913810692,14-OCT-15 01.04.40.610862000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Date and Timestamp Math","DATE AND TIMESTAMP MATH","Adding Hours, Days, Weeks, Months and Years using both traditional date datatypes and timestamps.","",45282789006991898712417444997624388356,"","","",29-JUL-24 07.01.48.748740000 AM,"PUBLIC","timestamp, date, timestamp with time zone",102,"","CAV4CAWRJ8UGGGGOIGFCUFGJ6",1370,1,,,"","","","","","","","","","","","","","",,"",31-OCT-23 02.54.28.032276000 PM,04-MAR-16 05.29.32.315661000 PM,"","",,,"","","",789,""
5309963028593955171238465657683759253,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Simple query of a table with lots of columns","SIMPLE QUERY OF A TABLE WITH LOTS OF COLUMNS","query a table with lots of columns using select * syntax","",5309963025895632741858613339739574421,"","","",04-FEB-24 09.37.58.422141000 PM,"PUBLIC","",13,"","ISSFRWD1W62K5MLNMOYDK2JR",1764,1,,,"","","","","","","","","","","","","","",,"",28-NOV-21 06.32.18.522134000 AM,11-FEB-16 12.57.52.161452000 AM,"","",,,"","","",24,""
45536618608232258967954234908057706320,16-OCT-15 11.19.56.660482000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","IS JSON","IS JSON","Using the is JSON where clause predicate","",45536430970609149575122290864894401534,"","","",09-AUG-24 05.17.01.386083000 PM,"PUBLIC","JSON, IS JSON, 12c",774,"","CBARSVE1H2DXXAWMVWW3GDNFM",4662,13,,,"","","","","","","","","","","","","","",,"",08-APR-24 05.16.18.155299000 PM,08-MAR-16 05.51.31.137887000 PM,"","",,,"","","",1148,""
45397170963757254881451176481790818435,15-OCT-15 04.09.30.720548000 PM,"",,"JKSTILL@GMAIL.COM","dump.sql","DUMP.SQL","This script dumps a table to CSV and creates SQL Loader control and parameter files.  Be careful with LOBs.","",11142364384071,"","","",15-AUG-24 01.01.40.317069000 AM,"PUBLIC","dump csv ",98,"","CA2P00YMNHBBWCXTPJI4RGB9H",,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",28-JAN-24 05.32.04.611345000 AM,28-FEB-16 08.12.42.338487000 PM,"","APPROVED",15-JUN-18 01.34.34.720840000 AM,15-JUN-18 02.35.42.750989000 AM,"sharon.kennedy@oracle.com","","",355,""
45810813696492484117979663765464572424,19-OCT-15 03.15.50.152955000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Generate Calls to Trace Parameter Values","GENERATE CALLS TO TRACE PARAMETER VALUES","Oracle PL/SQL does not support automatic tracing of parameter values. This procedure will generate a trace call (you specify the procedure you use for tracing) that displays the value of each parameter (as a single concatenated string). You then add that code to your subprogram. Note 1: obviously, there is lots of room for improvement - you might want to generate a separate trace call for each parameter. More flexible! Note 2: that the open source Logger utility offers a nice API to do the same thing. https://github.com/OraOpenSource/Logger","",107516398946272,"","","",31-JUL-24 04.15.25.264099000 AM,"PUBLIC","instrumentation,tracing",20,"","CBQQHO2P2DHSHK2YQJUS1NGMC",14495094,4,,,"","","","","","","","","","","","","","",,"",17-OCT-20 01.33.47.645183000 PM,23-JUL-18 01.58.44.119929000 PM,"","APPROVED",23-JUL-18 01.58.44.114426000 PM,,"Auto Approved","","",53,""
46211059714561241854736706395672572616,23-OCT-15 10.18.01.268017000 AM,"",,"ORACLE@MATZBERGER.DE","Generate Named Exceptions","GENERATE NAMED EXCEPTIONS","Simplified example to declare named exceptions and generate code to use them easily.","",46208834433539160157415714949281020039,"","","",29-JUL-24 07.24.50.121177000 AM,"PUBLIC","named_exceptions",89,"","CCDPAOR8I21TYMGJ0OM99PEMY",7629,6,,,"","","","","","","","","","","","","","",,"",25-JUN-24 10.45.04.075429000 PM,09-DEC-15 04.03.22.925960000 PM,"","APPROVED",15-JUN-18 01.34.34.725430000 AM,15-JUN-18 02.36.31.309304000 AM,"sharon.kennedy@oracle.com","","",177,""
46638335146238904536432613847391165332,27-OCT-15 12.28.35.221117000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Explorations in CASE","EXPLORATIONS IN CASE","PL/SQL offers a CASE statement and CASE expression, which gives you a nice alternative to the traditional IF. The CASE expression is particularly nice, since you can use it inside a statement.","",113575334104014,"","","",13-JUL-24 01.26.25.169819000 PM,"PUBLIC","case",52,"","CC2C6F9ID4SWUX1MP8UNIDFZA",14495099,4,,,"","","","","","","","","","","","","","",,"",30-NOV-23 09.28.55.113759000 AM,23-JUL-18 01.59.01.943101000 PM,"","APPROVED",23-JUL-18 01.59.01.936956000 PM,,"Auto Approved","","",221,""
333440246527765217548145881766783777146,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","NLS Settings","NLS SETTINGS","using the National Language Setting (NLS) language and territory settings","",333440246527531894864960258336065485178,"","","",08-AUG-24 08.19.39.956635000 AM,"PUBLIC","NLS, language, alter session, NLS territory",63,"","O4W97PMBL55CQQJEGKSSYALM0",37426,333804701807972275005933417866206051852,,,"","","","","","","","","","","","","","",,"",03-JUN-24 07.27.04.799385000 AM,25-DEC-15 12.45.25.352209000 AM,"","",,,"","","",192,""
332026688035322883274542935829415349634,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Range Partitioning","RANGE PARTITIONING","Partition by range of values","",332026688035056919594227717410979990914,"","","",25-JUL-24 05.04.26.710120000 PM,"PUBLIC","",86,"","332029226121410477155465893934843745813332029226121411686081285508564018451989",28287,8,,,"","","","","","","","","","","","","","",,"",21-JUN-24 10.04.42.117543000 AM,15-FEB-16 09.50.04.756377000 AM,"","",,,"","","",190,""
333667445241506780258350156571847879837,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","EMP and DEPT","EMP AND DEPT","Example EMP and DEPT tables.  Classic Oracle tables with 4 departments and 14 employees.  Includes a join query example.","",333667445241447542893189039742287277213,"","","",22-AUG-24 10.53.27.764161000 PM,"PUBLIC","EMP, DEPT, JOIN, referential integrity",274326,"","O5AEB2HE1D6THHFQEMMW4RFVZ",162859608,1,337949986681008890389062074985729416032,,"","","","","","","","","","","","","","",,"",22-AUG-24 10.53.27.764058000 PM,15-SEP-22 04.56.37.363066000 PM,"","APPROVED",15-SEP-22 04.56.37.350286000 PM,,"Auto Approved","","",414021,""
333874675759957526955830946363121207590,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Top N Query","TOP N QUERY","Database 11g top N query syntax, Show top N rows of a query result","",333862357136789360074653560155771943425,"","","",22-AUG-24 06.04.40.789183000 AM,"PUBLIC","TOP-N, top",906,"","O5MCYMZZ7CB2EYPV7W82D27AW",44350,1,,,"","","","","","","","","","","","","","",,"",21-AUG-24 01.24.44.432681000 AM,14-MAR-16 05.20.30.598183000 PM,"","",,,"","","",2280,""
336614460670350040721960648245672291215,05-OCT-15 05.52.25.000000000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Max out my storage","MAX OUT MY STORAGE","Create a table and populate a large number of rows to test the storage constraints of this Live SQL application.","",336614460670140896555167317398448122767,"","","",18-AUG-24 03.21.05.410159000 PM,"PUBLIC","testing",102,"","O90H9DT4NVY1BWKD6892IE7Y5",54373,1,,,"","","","","","","","","","","","","","",,"",05-JUN-23 04.53.46.800829000 PM,22-JAN-16 10.24.24.841288000 AM,"","",,,"","","",106,""
74105922857991785358419522749339467010,16-JUL-16 11.58.16.919825000 AM,"",,"ARUN51284@GMAIL.COM","FooBar","FOOBAR","Write a anonymous block to print numbers from 1 to 100, if the number is divisible by 3 then print as 'FOO', if the number is divisible by 5 then print as 'BAR', if the number is divisible by both (3&5) then print 'FOOBAR'.","",74105922857986949655141064232640642306,"","","",04-APR-24 06.21.33.541174000 AM,"PUBLIC","FooBar, Foo, Bar",2,"","DK3U2XN4Y0K43GX7LCND8GFBO",286294,4,,,"","","","","","","","","","","","","","",,"",13-DEC-16 10.15.13.257605000 PM,16-JUL-16 11.58.16.972817000 AM,"","APPROVED",15-JUN-18 01.34.35.147274000 AM,18-JUN-18 02.35.11.144298000 PM,"sharon.kennedy@oracle.com","","",17,""
77667616549856686695310790366281234115,19-AUG-16 02.12.31.348354000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","SELECT *, Records and Invisible Columns","SELECT *, RECORDS AND INVISIBLE COLUMNS","In Oracle Database 12c and higher, you can define a table's column to be invisible. When a column is defined this way, it will not be included in rows fetched with the SELECT statement unless you explicitly include that column. Doc: http://docs.oracle.com/database/121/SQLRF/statements_7002.htm#SQLRF01402","",109975306363190,"","","",07-AUG-24 09.25.37.683070000 AM,"PUBLIC","INVISIBLE,12c",10,"","DQTGBA2N89U0VTOA2JSXLXDF5",353455,4,,,"","","","","","","","","","","","","","",,"",28-MAR-21 02.55.03.643470000 PM,19-AUG-16 02.15.40.339743000 PM,"","",,,"","","",52,""
84152694927190368326155780476583430835,20-OCT-16 04.34.01.275497000 PM,"",,"ERIC.BELDEN@ORACLE.COM","Creating a Composite Hash-Hash Partitioned Table","CREATING A COMPOSITE HASH-HASH PARTITIONED TABLE","Administering composite hash-hash partitioning","",84147881215993926633480314929229228291,"","","",29-JUL-24 09.30.42.760993000 PM,"PUBLIC","",14,"","D1DH6F7YDY2JA8PDYN6WGKALT",669990,8,,,"","","","","","","","","","","","","","",64303337948810339592179290520196671450,"composite-hash-hash-partitioning-example",17-JUL-24 04.59.19.162597000 PM,21-OCT-16 03.23.11.808256000 PM,"https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-9ECF0F94-57BB-45F8-824F-48B320F23D9C","APPROVED",25-JUL-18 08.42.23.587876000 PM,,"Auto Approved","","",46,""
75288488450816752269829496719245234851,27-JUL-16 07.30.54.571786000 PM,"",,"MIKE_PRINCE@CARGILL.COM","Ask Tom: Sample LAG query","ASK TOM: SAMPLE LAG QUERY","Ask Tom: Sample LAG query","",75283437219199913076988602147698014470,"","","",17-JUN-24 04.57.28.679818000 PM,"PUBLIC","",13,"","DMZ4GO3W9V2ZEF90SI9GG47O1",304352,7,,,"","","","","","","","","","","","","","",,"",08-SEP-21 12.12.40.066271000 PM,27-JUL-16 07.32.50.182400000 PM,"","APPROVED",15-JUN-18 01.34.35.155122000 AM,18-JUN-18 06.59.02.954678000 PM,"sharon.kennedy@oracle.com","","",32,""
83330871514677260420987564172109348592,12-OCT-16 07.50.07.820376000 PM,"",,"ROGEL@WEB.DE","is dbms_stats.gather_table_stats buggy ?","IS DBMS_STATS.GATHER_TABLE_STATS BUGGY ?","""...a stored procedure with a commit (or a rollback even) is almost always a bug"" Tom Kyte, 2007
https://twitter.com/StewAshton/status/786283562106355712","",83330871514627694462383364375946395376,"","","",16-MAY-24 10.00.06.814559000 AM,"PUBLIC","",7,"","DZWCLY7OO8NPGD5VAH9GZ1NYA",614052,4,,,"","","","","","","","","","","","","","",,"",24-NOV-19 07.10.56.827582000 PM,12-OCT-16 08.00.50.402144000 PM,"","APPROVED",15-JUN-18 01.34.35.167574000 AM,18-JUN-18 05.54.48.009827000 PM,"sharon.kennedy@oracle.com","","",47,""
80389496834960468365971974226157669262,14-SEP-16 03.48.15.366235000 PM,"",,"LRIFFEL@CROSSCOUNTRY-HOME.COM","Mode In Oracle","MODE IN ORACLE","Two ways to get the mode in Oracle.","",80388628179980879573785172567560698986,"","","",03-SEP-21 01.28.11.604603000 PM,"PUBLIC","Mode",2,"","DU6KEMYNW8RF8GKAZGQTTN74G",449891,7,,,"","","","","","","","","","","","","","",,"",22-SEP-16 02.26.14.754317000 PM,14-SEP-16 03.48.15.582088000 PM,"","APPROVED",15-JUN-18 01.34.35.198255000 AM,18-JUN-18 05.56.43.992757000 PM,"sharon.kennedy@oracle.com","","",8,""
85210328847139804456143412864477721678,30-OCT-16 07.43.07.803654000 PM,"",,"DHURLEY@IMPLESTRAT.COM","Table Functions and Ref Cursors","TABLE FUNCTIONS AND REF CURSORS","DML in a table function with a REF CURSOR as a parameter. Thats a lot going on.","",85210328846710635790180219507457029198,"","","",10-AUG-24 05.35.32.754145000 PM,"PUBLIC","Table Functions PLSQL REF Cursor PARALLEL_ENABLE",45,"","D3A7UNDMF6M3LDH527HOUST54",740545,6,,,"","","","","","","","","","","","","","",,"",09-MAY-23 06.55.57.009712000 PM,02-NOV-16 04.37.09.922415000 AM,"","APPROVED",15-JUN-18 01.34.35.216131000 AM,18-JUN-18 08.22.45.052924000 PM,"sharon.kennedy@oracle.com","","",288,""
85405696533759650963778232481569471136,01-NOV-16 04.17.46.407079000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Companion script for PL/SQL 101: Why can't I display a Boolean value with DBMS_OUTPUT.PUT_LINE?","COMPANION SCRIPT FOR PL/SQL 101: WHY CAN'T I DISPLAY A BOOLEAN VALUE WITH DBMS_OUTPUT.PUT_LINE?","Quick demonstration of ability of DBMS_OUTPUT.PUT_LINE to display strings, numbers and dates, but not Booleans. Used in: http://stevenfeuersteinonplsql.blogspot.com/2016/11/plsql-101-why-cant-i-display-boolean.html","",103547823162423,"","","",08-AUG-24 12.49.17.911907000 AM,"PUBLIC","boolean,dbms_output",16,"","D272TW1YOWTHRBJ62ZF2MYX8I",737117,4,,,"","","","","","","","","","","","","","",,"",07-NOV-22 04.55.14.653428000 PM,01-NOV-16 04.00.24.904252000 PM,"","",,,"","","",90,""
74564716664184661803605431614754715520,20-JUL-16 09.16.26.034540000 PM,"",,"BINURAJSNAIR@GMAIL.COM","Pragma SERIALLY_REUSABLE demo","PRAGMA SERIALLY_REUSABLE DEMO","Package Variables (declared outside any function or procedure) persist with in the session. Pragma SERIALLY_REUSABLE can be used to avoid this, if that is the intended functionality. 
","",74562887844658470022455750161066497118,"","","",04-APR-24 06.21.14.718762000 AM,"PUBLIC","",2,"","DLUCGJAACD1C76ASZBERKOQHE",293134,4,,,"","","","","","","","","","","","","","",,"",30-JAN-18 05.01.14.398116000 AM,20-JUL-16 09.16.26.038638000 PM,"","APPROVED",15-JUN-18 01.34.35.288067000 AM,18-JUN-18 06.56.54.722654000 PM,"sharon.kennedy@oracle.com","","",13,""
78104374020466474877355742114781762690,23-AUG-16 06.42.46.005517000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Comparing Records for Equality","COMPARING RECORDS FOR EQUALITY","PL/SQL does not provide native support for checking the equality (or inequality) of two records. Instead, you must write your own custom code to do so. Generally, you will compare the values of corresponding fields in the record, and don't forget about NULLs! PL/SQL Challenge quiz link: https://plsqlchallenge.oracle.com/pls/apex/f?p=10000:659:::NO:659:P659_COMP_EVENT_ID,P659_QUESTION_ID,P659_QUIZ_ID:985569,226,&cs=1F8A7F005655C2C8B20B4B2EB2A6BDAC0","",105164059012534,"","","",27-JUN-24 01.59.27.102396000 PM,"PUBLIC","RECORD,EQUALITY",14,"","DRINWEMSHGB3WTBK35K7VQXV4",363623,4,,,"","","","","","","","","","","","","","",,"",27-SEP-23 03.37.58.816663000 PM,23-AUG-16 06.47.15.810850000 PM,"","",,,"","","",43,""
82397842238248603377829453214664804276,03-OCT-16 09.12.36.722948000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Execution of DDL Causes Two Commits: Before and After","EXECUTION OF DDL CAUSES TWO COMMITS: BEFORE AND AFTER","Oracle Database issues a commit before a DDL statement is executed, and then afterwards as well. The script demonstrates the fact. Note that Count=0 is displayed each time.","",82397842238213544529060628968598325172,"","","",03-APR-24 02.40.58.675340000 PM,"PUBLIC","DDL,COMMIT",12,"","DYEHRL1B8SB9M078WWRM40H02",556465,4,,,"","","","","","","","","","","","","","",,"",24-AUG-22 09.43.08.468427000 AM,03-OCT-16 09.12.36.732196000 PM,"","",,,"","","",28,""
82784193781382045461289042717941853292,07-OCT-16 01.53.01.792548000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Update column value in trigger","UPDATE COLUMN VALUE IN TRIGGER","An answer to a twitter request: 

Many thanks Steven for your reply ... As u mentioned I am asking little different... I would like to update emp_id column before insert in employee table using some validation and in that validation I am passing :new.emp_id value and if my validation satisfy update the emp_id column to the new value and then insert into employee table ...

Begin 

Cursor ( passing emp_id)

Validation 

If validation satisfy

Fetching cursor value to variable

Then 

:NEW.emp_id=variable

But it seems we can't update the same column which we are passing and using old values using before insert trigger ... Plz advice me regarding this","",116862607104952,"","","",22-AUG-24 07.16.23.044806000 AM,"PUBLIC","",32,"","DY0SLXD258BSQYI9KE0ZK93GE",587897,5,,,"","","","","","","","","","","","","","",,"",18-APR-24 01.37.39.523251000 PM,07-OCT-16 03.52.01.960805000 PM,"","",,,"","","",351,""
80478799751360788857229805358431252561,15-SEP-16 12.21.19.676010000 PM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - 01 - SQL im Schnelldurchlauf","DHBW DATENBANKEN UNIT 1 - 01 - SQL IM SCHNELLDURCHLAUF","DHBW Datenbanken Unit 1","",80479528459807373180082540455314219587,"","","",04-APR-24 07.05.13.787641000 AM,"PUBLIC","DHBW, Datenbanken, Vorlesung",340,"","GUP4688EMU0YJG0NC4PWPT0WY",453555,1,,,"","","","","","","","","","","","","","",,"",17-DEC-23 08.13.09.918610000 PM,10-SEP-19 12.47.18.359307000 PM,"","APPROVED",15-JUN-18 01.34.35.327589000 AM,18-JUN-18 12.00.00.000000000 AM,"sharon.kennedy@oracle.com","","",496,""
82429449189939829472152800845804211183,04-OCT-16 04.24.29.015212000 AM,"",,"SUK@AVALOQ.COM","multi_collection_memory_performance","MULTI_COLLECTION_MEMORY_PERFORMANCE","It is not (yet) possible to execute these scripts within LiveSQL. 
I offer them to you here so that you can easily download the script and try it in your own database.

""PL/SQL Multidimensional Collection Memory Usage and Performance. ""
See details in:
http://ksun-oracle.blogspot.ch/2016/09/plsql-multidimensional-collection.html

Usage: exec test_collection_dimm_mem.run(1000000);","",82426260353698016680557251985555488983,"","","",24-JUL-24 12.37.53.017093000 AM,"PUBLIC","multi_collection_memory_performance",1,"","DYGBF2PWZYOB5IDE0EZM7BQ0H",557452,4,,,"","","","","","","","","","","","","","",,"",21-FEB-19 06.44.08.636709000 PM,04-OCT-16 04.26.29.862340000 AM,"","APPROVED",15-JUN-18 01.34.35.333549000 AM,15-JUN-18 04.49.38.819308000 PM,"sharon.kennedy@oracle.com","","",29,""
78810657812013389402017271280950770060,30-AUG-16 01.12.25.815722000 PM,"",,"TRENT.SCHAFER@GMAIL.COM","Generate XML with dbms_xmldom","GENERATE XML WITH DBMS_XMLDOM","Basic procedure on generating XML using the DBMS_XMLDOM API.","",78808688043793279132034183027409720977,"","","",11-JUL-24 01.46.03.090488000 PM,"PUBLIC","xml",92,"","GZDCV0O6XOVMZDLC94I5MAN7Z",14341091,6,,,"","","","","","","","","","","","","","",,"",27-OCT-23 07.16.27.128031000 PM,16-JUL-18 12.42.49.315109000 PM,"","APPROVED",14-JUL-18 02.02.56.689357000 AM,16-JUL-18 12.44.23.152002000 PM,"sharon.kennedy@oracle.com","Can you please run this and re-save.  The results are not displayed.","",199,""
81218625799746090222513109615187242868,22-SEP-16 02.06.58.613768000 PM,"",,"JORGE@RIMBLAS.COM","JSON MLS Concept","JSON MLS CONCEPT","Storing language information on a column in JSON.
Used in the APEX JTL Item plugin (https://github.com/rimblas/jtlitem)","",20637675263532,"","","",28-JUN-24 05.45.25.789728000 PM,"PUBLIC","JSON",55,"","DWIFCD7PQQ1EG64Z0JKBLYIN6",2087628,13,,,"","","","","","","","","","","","","","",,"",23-JAN-22 11.27.06.260289000 AM,21-FEB-17 01.52.11.016462000 AM,"","APPROVED",15-JUN-18 01.34.35.343032000 AM,20-JUN-18 02.04.31.436601000 PM,"sharon.kennedy@oracle.com","","",33,""
84567699603923714613265165454586558029,24-OCT-16 03.41.10.725464000 PM,"",,"SHARON.KENNEDY@ORACLE.COM","EXISTS example","EXISTS EXAMPLE","An EXISTS condition tests for existence of rows in a subquery.  If at least one row returns, it will evaluate as TRUE.","",84564844012288657865196351074075344249,"","","",08-AUG-24 09.55.15.206189000 AM,"PUBLIC","EXISTS",121,"","D1VQQ0ZDXTYVBWOWI6Z7BXZVJ",14571603,3,,,"","","","","","","","","","","","","","",,"",05-MAY-23 04.24.16.977439000 PM,26-JUL-18 05.40.21.932921000 PM,"","APPROVED",26-JUL-18 05.40.21.928886000 PM,,"Auto Approved","","",382,""
84873804764966852098366045094681401244,27-OCT-16 01.55.54.401591000 PM,"",,"WILLIAM.ENDRESS@ORACLE.COM","Create an Analytic View query in 10 Seconds - GET_AV_QUERY Function","CREATE AN ANALYTIC VIEW QUERY IN 10 SECONDS - GET_AV_QUERY FUNCTION","This script creates a function that can be used to generate a query that selects from an analytic view. That query is easily adapted, for example with different filters.","",84872614591616249877324704923865771603,"","","",18-MAR-24 12.39.22.713218000 PM,"PUBLIC","analytic view",11,"","D2DET8SV8T3JZV62ED4GMGC2M",1557391,7,,,"","","","","","","","","","","","","","",,"",25-MAY-23 01.07.23.896614000 AM,24-MAR-23 12.55.29.084406000 AM,"","APPROVED",24-MAR-23 12.54.51.994579000 AM,,"Auto Approved","","",36,""
82768219581347368796710803454776988927,07-OCT-16 10.11.35.667606000 AM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - Bonus - Oracle Data Dictionary","DHBW DATENBANKEN UNIT 1 - BONUS - ORACLE DATA DICTIONARY","DHBW Datenbanken Unit 1 (kein Prüfungsstoff!!!). ","",82764952322560189986879222638457809882,"","","",21-MAY-24 08.46.56.944066000 AM,"PUBLIC","DHBW, Datenbanken, Vorlesung ",10,"","DYZVEW9TADSTO05BYWLFUNFRL",7691664,1,,,"","","","","","","","","","","","","","",,"",13-MAR-23 08.58.43.308973000 AM,06-OCT-20 09.10.52.825905000 PM,"","APPROVED",15-JUN-18 01.34.35.347823000 AM,18-JUN-18 06.56.03.558149000 PM,"sharon.kennedy@oracle.com","","",53,""
83436777237025279460201658802317733987,13-OCT-16 08.00.26.056305000 PM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - 12 - Subqueries","DHBW DATENBANKEN UNIT 1 - 12 - SUBQUERIES","DHBW Datenbanken Unit 1","",83431237270506361638211893811997226053,"","","",04-APR-24 07.05.10.175406000 AM,"PUBLIC","DHBW, Datenbanken, Vorlesung",350,"","DZ2GOLW1PFTUFHJG9L5IO2G9X",627117,1,,,"","","","","","","","","","","","","","",,"",17-DEC-23 01.04.12.882492000 PM,14-OCT-16 10.35.52.646101000 AM,"","APPROVED",15-JUN-18 01.34.35.352485000 AM,18-JUN-18 06.56.19.844068000 PM,"sharon.kennedy@oracle.com","","",525,""
76672578369025376765782546069639064048,10-AUG-16 01.44.09.949871000 AM,"",,"KGKUZMIN@GMAIL.COM","SideEffectOfMatView","SIDEEFFECTOFMATVIEW","Session to test impact of materialized view log on extensive inserts.","",76672248212711186585719389813694151899,"","","",22-JUL-24 06.25.34.353962000 PM,"PUBLIC","",12,"","DO70L5PQRPA5DI3CSDICF8BYA",328423,15,,,"","","","","","","","","","","","","","",,"",29-JAN-22 05.36.15.193574000 AM,10-AUG-16 01.44.09.955338000 AM,"","APPROVED",15-JUN-18 01.34.35.362005000 AM,15-JUN-18 04.47.26.457375000 PM,"sharon.kennedy@oracle.com","","",59,""
76672578369071315946927901978277898736,10-AUG-16 02.06.30.258137000 AM,"",,"KGKUZMIN@GMAIL.COM","Materialized View Log DML Impact","MATERIALIZED VIEW LOG DML IMPACT","Session to test impact of materialized view log on insert.","",76672578369039883875617921619735538160,"","","",02-JUL-24 06.28.57.788429000 AM,"PUBLIC","",112,"","DO70L5PQXG3YAOLY3SHGGOT4I",328425,15,,,"","","","","","","","","","","","","","",,"",28-MAY-24 09.28.56.647162000 AM,10-AUG-16 02.06.30.264667000 AM,"","APPROVED",15-JUN-18 01.34.35.368993000 AM,15-JUN-18 04.51.24.550996000 PM,"sharon.kennedy@oracle.com","","",176,""
83489595125325716715768443764522795829,14-OCT-16 08.21.28.468030000 AM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - 13 - Views","DHBW DATENBANKEN UNIT 1 - 13 - VIEWS","DHBW Datenbanken Unit 1","",83485032933022697518894808743514135465,"","","",11-JUN-24 07.13.53.149979000 PM,"PUBLIC","DHBW, Datenbanken, Vorlesung",224,"","DZ5IFTRV3SXMU0KOWVE0ON1XJ",654171,1,,,"","","","","","","","","","","","","","",,"",19-APR-24 06.01.08.899228000 PM,19-OCT-16 07.27.25.635792000 PM,"","APPROVED",15-JUN-18 01.34.35.374043000 AM,18-JUN-18 06.56.23.591131000 PM,"sharon.kennedy@oracle.com","","",335,""
76794741082388713876853854940953190538,11-AUG-16 05.40.38.072389000 AM,"",,"DAVIDRIESS@GMX.DE","world_population_2012","WORLD_POPULATION_2012","The rank of countries sorted by the number of inhabitants","",76793275248817742510729550943906090722,"","","",21-JUL-24 06.59.55.744583000 AM,"PUBLIC","world population 2012",51,"","DPE2GX4EXUQ6N9ZCE20GU6PEK",331299,1,,,"","","","","","","","","","","","","","",,"",21-JUL-24 06.50.01.952637000 AM,11-AUG-16 05.40.38.230743000 AM,"","APPROVED",15-JUN-18 01.34.35.379036000 AM,18-JUN-18 06.24.09.467355000 PM,"sharon.kennedy@oracle.com","","",174,""
75141805871253728430738256688398884637,26-JUL-16 09.49.24.024374000 AM,"",,"UWE.KUECHLER@OPITZ-CONSULTING.COM","PLAN_TABLE","PLAN_TABLE","Creates the PLAN_TABLE that is needed to display SQL Plans (e.g., by running DBMS_XPLAN).","",75140947252369073718273452281669807854,"","","",24-JUL-24 05.12.20.214337000 PM,"PUBLIC","explain, plan, plan_table, utlxplan",52,"","DMRNNL8YNTYD1AUVTYN3JUEGF",300672,15,,,"","","","","","","","","","","","","","",,"",11-OCT-23 05.50.54.339159000 AM,26-JUL-16 09.49.24.046593000 AM,"","APPROVED",15-JUN-18 01.34.35.383679000 AM,18-JUN-18 07.03.38.715827000 PM,"sharon.kennedy@oracle.com","","",154,""
82430634923708581985773220236507094588,04-OCT-16 04.44.45.241016000 AM,"",,"SUK@AVALOQ.COM","Object_Collection_Comparisons_Part1","OBJECT_COLLECTION_COMPARISONS_PART1","It is not (yet) possible to execute these scripts within LiveSQL. 
I offer them to you here so that you can easily download the script and try it in your own database.

""Performance of Oracle Object Collection Comparisons - Part1"". See details in
http://ksun-oracle.blogspot.ch/2016/01/performance-of-oracle-object-collection_13.html     

Usage: exec all_test_run_1(4);
","",82426260353698016680557251985555488983,"","","",04-APR-24 06.15.03.669409000 AM,"PUBLIC","Object_Collection_Comparisons_Part1",3,"","DYGDWR0PCKZOM0AF5AERRDHVY",557617,4,,,"","","","","","","","","","","","","","",,"",02-SEP-20 12.00.29.770310000 PM,04-OCT-16 04.44.45.264500000 AM,"","APPROVED",15-JUN-18 01.34.35.402660000 AM,15-JUN-18 04.49.09.517159000 PM,"sharon.kennedy@oracle.com","","",16,""
84153445456245596408484170556219520987,20-OCT-16 04.38.59.262521000 PM,"",,"ERIC.BELDEN@ORACLE.COM","Using In-Database Archiving","USING IN-DATABASE ARCHIVING","Administering in-database archiving","",84147881215993926633480314929229228291,"","","",01-AUG-24 02.59.58.542129000 PM,"PUBLIC","",33,"","D1V3AKDZJSJ6ZQX7C5Z7TRJMV",788213,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",64304236412627802219281301741624803172,"indatabase-archiving-example",01-AUG-24 02.59.58.542040000 PM,07-NOV-16 05.54.34.840798000 PM,"https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-5A76B6CE-C96D-49EE-9A89-0A2CB993A933","APPROVED",25-JUL-18 08.32.48.392407000 PM,,"Auto Approved","","",33,""
81046034466271314798131523322378895588,20-SEP-16 10.39.04.910682000 PM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - 08 - Set Operatoren","DHBW DATENBANKEN UNIT 1 - 08 - SET OPERATOREN","DHBW Datenbanken Unit 1","",81030548465356039876610159919978135078,"","","",04-APR-24 07.07.59.608519000 AM,"PUBLIC","DHBW, Datenbanken, Vorlesung",305,"","DWJYXM3BWGUNU4WQG353FVW92",482595,1,,,"","","","","","","","","","","","","","",,"",16-DEC-23 04.35.50.214531000 PM,20-SEP-16 11.00.08.681137000 PM,"","APPROVED",15-JUN-18 01.34.35.417307000 AM,18-JUN-18 06.55.40.067960000 PM,"sharon.kennedy@oracle.com","","",437,""
84170154567931001547285543536999140874,20-OCT-16 08.42.24.467348000 PM,"",,"ERIC.BELDEN@ORACLE.COM","Creating a Composite Interval-Hash Partitioned Table","CREATING A COMPOSITE INTERVAL-HASH PARTITIONED TABLE","Administering composite interval-hash partitioning","",84170154567918912289089397245252079114,"","","",21-JUL-24 09.25.54.836868000 AM,"PUBLIC","",30,"","D1DVBX2ZXM83WYOEQ2TIMGGQO",686253,8,,,"","","","","","","","","","","","","","",64303337948810339592179290520196671450,"composite-interval-hash-partitioning-example",16-MAY-24 11.45.31.513702000 PM,24-OCT-16 02.50.44.542208000 PM,"https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-EC3C51AF-2F56-4617-A12B-4540D5C17F33","APPROVED",25-JUL-18 08.38.20.775310000 PM,,"Auto Approved","","",69,""
84078385250459347423480971122686201212,19-OCT-16 11.14.19.044337000 PM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - 14 - WITH Clause","DHBW DATENBANKEN UNIT 1 - 14 - WITH CLAUSE","DHBW, Datenbanken, Vorlesung","",84071201432606486393998239122554799193,"","","",14-JUL-24 02.27.11.051705000 PM,"PUBLIC","",255,"","D03HX8HA9QZY48DKDJEJ3Q7KE",655602,1,,,"","","","","","","","","","","","","","",,"",17-DEC-23 06.12.28.392583000 PM,19-OCT-16 11.39.38.177632000 PM,"","APPROVED",15-JUN-18 01.34.35.427713000 AM,18-JUN-18 06.56.29.362056000 PM,"sharon.kennedy@oracle.com","","",410,""
83431237271857940704541049229318730821,13-OCT-16 07.10.41.274473000 PM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - 11 - DISTINCT","DHBW DATENBANKEN UNIT 1 - 11 - DISTINCT","DHBW Datenbanken Unit 1","",83431237270506361638211893811997226053,"","","",04-APR-24 07.10.48.191532000 AM,"PUBLIC","DHBW, Datenbanken, Vorlesung",210,"","DZ14558JXJRUEI6BO3BSZRB2F",621203,1,,,"","","","","","","","","","","","","","",,"",17-DEC-23 08.18.51.551757000 PM,13-OCT-16 07.10.41.325813000 PM,"","APPROVED",15-JUN-18 01.34.35.433081000 AM,18-JUN-18 06.56.08.974307000 PM,"sharon.kennedy@oracle.com","","",292,""
79135556718995042174482139044903561808,02-SEP-16 03.41.19.293338000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Fetch into Record %ROWTYPEd to Explicit Cursor","FETCH INTO RECORD %ROWTYPED TO EXPLICIT CURSOR","If you are using an explicit cursor to fetch one or more rows, always fetch into a record that is declared based on that cursor, as in ""my_rec my_cur%ROWTYPE;"" That way, you avoid having to declare lots of individual variables; you don't have to remember and do all the typing to use %TYPE for each variable; when the cursor's SELECT list changes, you don't have to change the INTO list of the FETCH statement. Of course, you will still almost certainly need to change something else in your code to use (or stop using) the different elements in the SELECT list.","",6025318793511,"","","",29-JUL-24 12.11.02.806351000 PM,"PUBLIC","cursor,record,fetch",25,"","DS593Z8IQ1Z420JQFCU7IV17I",401141,4,,,"","","","","","","","","","","","","","",,"",27-SEP-23 03.50.19.183550000 PM,02-SEP-16 03.49.30.502643000 PM,"","",,,"","","",114,""
80602194441905204064883261078124509930,16-SEP-16 04.47.18.675743000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Obtain Compiler Settings on PL/SQL Program Units","OBTAIN COMPILER SETTINGS ON PL/SQL PROGRAM UNITS","This script offers examples for using the USER_PLSQL_OBJECT_SETTINGS data dictionary view to see complier settings for program units you own. Associated blog post: http://stevenfeuersteinonplsql.blogspot.com/2016/09/how-to-get-compiler-settings-for-plsql.html","",9622249509778,"","","",10-AUG-24 05.41.05.795451000 PM,"PUBLIC","COMPILER",6,"","DVIUD6V8Q0EJ5LJN1LK1HHI0C",462837,6,,,"","","","","","","","","","","","","","",,"",21-APR-21 04.24.39.551895000 AM,16-SEP-16 04.49.05.770666000 PM,"","",,,"","","",24,""
76722436791182355856366926517173404587,10-AUG-16 01.04.04.278188000 PM,"",,"DUKE.GANOTE@GMAIL.COM","12 Gregorian calendar months in 79 Languages","12 GREGORIAN CALENDAR MONTHS IN 79 LANGUAGES","Based on Mattias Rogel's script showing the 79 languages/glyphs supported by LiveSQL","",76722436790725381896552596689134470059,"","","",18-APR-24 11.53.46.343837000 PM,"PUBLIC","NLS, Unicode",19,"","DPAV7ZFLT57U7ED9O0YQWJNZX",329898,333804701807972275005933417866206051852,,,"","","","","","","","","","","","","","",,"",03-MAR-24 07.21.18.864711000 PM,10-AUG-16 01.24.48.090982000 PM,"","APPROVED",15-JUN-18 01.34.35.437585000 AM,15-JUN-18 05.02.45.886308000 PM,"sharon.kennedy@oracle.com","","",70,""
81243992768008819993572005051665887669,22-SEP-16 07.57.41.558868000 PM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - 03 - AND, NOT und OR","DHBW DATENBANKEN UNIT 1 - 03 - AND, NOT UND OR","DHBW Datenbanken Unit 1","",81244375211604630242454699193844562014,"","","",04-APR-24 07.08.01.677922000 AM,"PUBLIC","",304,"","DWJV11ZMA6261LZ28F585NX9Z",494802,1,,,"","","","","","","","","","","","","","",,"",10-DEC-23 10.42.28.789483000 AM,22-SEP-16 07.57.41.600131000 PM,"","APPROVED",15-JUN-18 01.34.35.464761000 AM,18-JUN-18 06.55.47.076317000 PM,"sharon.kennedy@oracle.com","","",415,""
84796525913785977766842676200109415662,26-OCT-16 08.37.10.128880000 PM,"",,"ERIC.BELDEN@ORACLE.COM","Creating a Composite List-List Partitioned Table","CREATING A COMPOSITE LIST-LIST PARTITIONED TABLE","Administering composite list-list partitioning","",84796525913781142063564217683410590958,"","","",23-JUN-24 04.55.48.642077000 AM,"PUBLIC","",12,"","D185CKI2BKSYTD9BG7IZHGDHC",705253,8,,,"","","","","","","","","","","","","","",64303337948810339592179290520196671450,"composite-list-list-partitioning-example",23-JUN-24 04.55.48.641920000 AM,26-OCT-16 09.19.58.689777000 PM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/vldbg/create-composite-partition-table.html#GUID-7854B907-B11C-41A6-A7AC-E01D063198B6","",,,"","","",26,""
82691187576482490090234997847339213067,06-OCT-16 04.30.28.123942000 PM,"",,"WILLIAM.ENDRESS@ORACLE.COM","Analytic View for SH Schema","ANALYTIC VIEW FOR SH SCHEMA","This script will create create analytic view objects for the SH (sales history) schema.  This script requires Oracle 12.2.","",82691187576415999170156193242730373387,"","","",21-AUG-24 12.27.28.353868000 PM,"PUBLIC","analytic view",200,"","DYVFCADLF56HC4GX41LOCC1NH",1557381,7,,,"","","","","","","","","","","","","","",,"",21-AUG-24 12.27.28.353745000 PM,13-JAN-17 07.09.27.284557000 PM,"","",,,"","","",384,""
84882481473371008421710130023441777632,27-OCT-16 04.01.07.016011000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Is String a Number? Package for Numbers, Integers and Binary Types","IS STRING A NUMBER? PACKAGE FOR NUMBERS, INTEGERS AND BINARY TYPES","Use this package to check to see if your string is also a valid number or integer or binary_flat or binary_double.","",4117742060546,"","","",04-APR-24 06.08.37.170866000 AM,"PUBLIC","is number",4,"","D2D097W2G76FYOJRY3DGYSZS5",711030,6,,,"","","","","","","","","","","","","","",,"",12-MAR-20 01.48.33.655428000 PM,27-OCT-16 04.26.04.104378000 PM,"","",,,"","","",23,""
81035349471031001050232593325773993756,20-SEP-16 08.32.07.524649000 PM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - 10 - GROUP BY und HAVING","DHBW DATENBANKEN UNIT 1 - 10 - GROUP BY UND HAVING","DHBW Datenbanken Unit 1","",81030548465356039876610159919978135078,"","","",31-JUL-24 05.41.55.241491000 AM,"PUBLIC","DHBW, Datenbanken, Vorlesung",543,"","DYP1L3A8NLL8HZ16OQIAL5B1W",6948257,1,,,"","","","","","","","","","","","","","",,"",25-JUL-24 05.08.14.834910000 AM,13-OCT-17 09.21.02.330654000 AM,"","APPROVED",15-JUN-18 01.34.35.507038000 AM,18-JUN-18 06.55.33.896326000 PM,"sharon.kennedy@oracle.com","","",900,""
83243113691604185588797335158741685819,11-OCT-16 11.16.42.590380000 PM,"",,"ALBERTY001@GMAIL.COM","Employee_fullname_format","EMPLOYEE_FULLNAME_FORMAT","Using a record to capture derived full name from first name and last name. Encapsulating business rule in subprogram. The goal here is to eliminate hard coding VARCHAR2 size to hold the full name.","",83242117398902653705612880687036815719,"","","",19-JUL-24 10.49.08.183255000 PM,"PUBLIC","record, encapsulation, hard coding",13,"","DZQ98YL7U905QEE5B1VJGJQVH",609368,4,,,"","","","","","","","","","","","","","",,"",10-JUL-24 08.16.56.339551000 AM,11-OCT-16 11.25.30.734119000 PM,"","APPROVED",15-JUN-18 01.34.35.511758000 AM,18-JUN-18 02.37.14.077121000 PM,"sharon.kennedy@oracle.com","","",84,""
86223236001416966580626379430888668783,09-NOV-16 12.36.25.325088000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Materialized View Built on Table Function","MATERIALIZED VIEW BUILT ON TABLE FUNCTION","A developer tried to do this and failed, so figured it was not possible. I figured I would prove him wrong. Here you go! ","",86223236001397623767512545364093369967,"","","",02-JUL-24 06.29.05.655064000 AM,"PUBLIC","table function,materialized view",13,"","D4JAYX30SE61WJW42014WPDY5",804141,6,,,"","","","","","","","","","","","","","",,"",07-FEB-24 03.07.27.970931000 PM,09-NOV-16 12.36.44.217131000 PM,"","",,,"","","",72,""
84686218739045112723122329250951781573,25-OCT-16 07.12.37.465092000 PM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - 16 - Constraints","DHBW DATENBANKEN UNIT 1 - 16 - CONSTRAINTS","DHBW Datenbanken Unit 1","",84682771802476836601819410933205304154,"","","",22-AUG-24 12.34.08.361584000 PM,"PUBLIC","DHBW, Datenbanken, Vorlesung",322,"","D12K08VBARFL262SQ55BUPOBB",712367,1,,,"","","","","","","","","","","","","","",,"",22-AUG-24 12.20.40.998739000 PM,27-OCT-16 09.57.32.684599000 PM,"","APPROVED",15-JUN-18 01.34.35.521412000 AM,18-JUN-18 06.56.34.433919000 PM,"sharon.kennedy@oracle.com","","",592,""
76940928279658344367439582163712498831,12-AUG-16 03.15.34.264965000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Show PL/SQL Usages with PL/Scope","SHOW PL/SQL USAGES WITH PL/SCOPE","Written by Jan-Hendrik van Heusden and published with his permission, here is his description of this excellent PL/Scope query: I was working in a project where quite some obsolete code was being removed, and I wanted to know if certain methods, variables were actually used yet.  I first made sure that everything was compiled with the appropriate settings (IDENTIFIERS:ALL).

Then I created the attached query, I thought you might be interested in it. Note that this query does of course not show all possible usages; it does not list usages in views or over database links, and it definitely  does not list usage in external souces (sql files, queries made from external applications etc.).
 
Nevertheless I found it very useful for what it does (usage of PL/SQL identifiers within PL/SQL). Other PL/SQL developers may be interested, so feel free to use or publish it. ","",13952718875775,"","","",13-JUN-24 04.24.25.778432000 PM,"PUBLIC","PL/Scope,impact analysis",48,"","DPNH8YU9PYDYH7UGY2KMZ2T5D",1956233,4,,,"","","","","","","","","","","","","","",,"",06-JUN-24 05.02.06.786231000 PM,12-FEB-17 01.33.11.397790000 PM,"","",,,"","","",218,""
80511107098760654626532419175440887015,15-SEP-16 07.40.52.529681000 PM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - 02 - SQL Languages","DHBW DATENBANKEN UNIT 1 - 02 - SQL LANGUAGES","DHBW Datenbanken Unit 1","",80507762589250774207474033659052966710,"","","",18-APR-24 11.51.56.420582000 PM,"PUBLIC","DHBW, Datenbanken, Vorlesung",202,"","DVDK33KKPGWQBA8MF7PL8X8VT",455794,1,,,"","","","","","","","","","","","","","",,"",12-DEC-23 03.47.54.402754000 PM,15-SEP-16 07.49.49.059638000 PM,"","APPROVED",15-JUN-18 01.34.35.530948000 AM,18-JUN-18 06.55.28.278438000 PM,"sharon.kennedy@oracle.com","","",315,""
81042722665867152809218598628263339595,20-SEP-16 10.10.37.475046000 PM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - 07 - Joins, 3 Tables (Artist, Album, Song)","DHBW DATENBANKEN UNIT 1 - 07 - JOINS, 3 TABLES (ARTIST, ALBUM, SONG)","DHBW Datenbanken Unit 1","",81030548465356039876610159919978135078,"","","",03-JUL-24 10.48.09.216919000 AM,"PUBLIC","DHBW, Datenbanken, Vorlesung",496,"","DYDGVKAWM0N8TGPYRYWVJZ3TE",555881,1,,,"","","","","","","","","","","","","","",,"",03-JUL-24 10.48.09.216775000 AM,03-OCT-16 06.11.17.037656000 PM,"","APPROVED",15-JUN-18 01.34.35.540329000 AM,18-JUN-18 06.55.36.567480000 PM,"sharon.kennedy@oracle.com","","",791,""
83328454140128355446152436226290511526,12-OCT-16 07.07.24.292539000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Shift Date By: We do the math for you","SHIFT DATE BY: WE DO THE MATH FOR YOU","Inspired by @Bintsiful's post http://bkintsiful.blogspot.com/2012/04/how-does-one-add-dayhourminutesecond-to.html, the shift_date_by function takes care of figuring out the numbers of hours, minutes, seconds in a day.","",108492272771845,"","","",04-APR-24 06.08.15.880906000 AM,"PUBLIC","DATE",4,"","DZWCLY7N6PID2SNRUO4QUR86Q",613892,4,,,"","","","","","","","","","","","","","",,"",17-MAR-23 06.57.44.015786000 AM,12-OCT-16 07.24.31.551942000 PM,"","",,,"","","",25,""
83963259899275083284658183562959977073,18-OCT-16 09.08.21.030432000 PM,"",,"RICH.CARNEY@GMAIL.COM","Example Using LISTAGG to create an html table","EXAMPLE USING LISTAGG TO CREATE AN HTML TABLE","Example query to create an HTML table using LISTAGG on a series of queries UNION'd together. SEQ 1 is the header SEQ 2 is the body SEQ 3 is the footer ","",83961753830678580734007991146321212455,"","","",18-AUG-24 10.52.08.701956000 PM,"PUBLIC","LIST_AGG",12,"","D0WUPWD58O0TXFPN9DNLL5TKZ",646959,1,,,"","","","","","","","","","","","","","",,"",18-AUG-24 10.52.08.701830000 PM,18-OCT-16 09.08.21.049176000 PM,"","APPROVED",15-JUN-18 01.34.35.545187000 AM,19-JUN-18 03.46.42.202478000 PM,"sharon.kennedy@oracle.com","","",43,""
81060015817335233928580425662736260662,21-SEP-16 02.33.07.501580000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Central Repository of RAISE_APPLICATION_ERROR Error Codes","CENTRAL REPOSITORY OF RAISE_APPLICATION_ERROR ERROR CODES","Don't splatter your code with references to -20000, -20001, -20909 etc. (all within the -20999 to -20000 range value for RAISE_APPLICATION_ERROR. Instead consider creating a central repository/table to ""register"" error codes and then generate a package with constants. NOTE: package will not compile on LiveSQL due to UTL_FILE dependencies.","",4105607744068,"","","",04-APR-24 06.11.56.071145000 AM,"PUBLIC","error code",4,"","DV89Q1NN1G2YHI31H0WR76DOO",14570016,4,,,"","","","","","","","","","","","","","",,"",24-JUN-21 11.43.35.317499000 AM,26-JUL-18 03.49.48.590580000 PM,"","APPROVED",26-JUL-18 03.49.48.565762000 PM,,"Auto Approved","","",26,""
81648946626765538593841683677441569417,26-SEP-16 05.14.27.799437000 PM,"",,"ROGEL@WEB.DE","fibos1","FIBOS1","The sum of the squares of two consecutive Fibonacci numbers is a Fibonacci number
https://twitter.com/AlgebraFact/status/780423101272186884","",81648946626735315448351317948073915017,"","","",18-APR-24 07.51.04.484311000 AM,"PUBLIC","",2,"","DW69JY8NF1DFT205KF8YNAN0R",518014,1,,,"","","","","","","","","","","","","","",,"",28-SEP-16 04.13.20.275110000 PM,26-SEP-16 05.17.04.512409000 PM,"","APPROVED",15-JUN-18 01.34.35.565866000 AM,18-JUN-18 05.54.07.927138000 PM,"sharon.kennedy@oracle.com","","",30,""
79750178437065494343470707437382333972,08-SEP-16 01.08.27.887602000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Raising Exceptions in PL/SQL","RAISING EXCEPTIONS IN PL/SQL","An exploration into RAISE and RAISE_APPLICATION_ERROR, as a complement to Steven's blog post: http://stevenfeuersteinonplsql.blogspot.com/2016/09/plsql-101-raising-exceptions-in-plsql.html","",79747734239203014640653645220839869769,"","","",19-AUG-24 03.06.09.415102000 AM,"PUBLIC","exception,raise,raise_application_error",61,"","DT51F0TXAKP62JDCFQ8ENYZSX",420132,4,,,"","","","","","","","","","","","","","",,"",10-JUL-24 05.22.59.117054000 AM,08-SEP-16 02.18.39.823109000 PM,"","",,,"","","",226,""
77559615789870415820960898365407273082,18-AUG-16 01.21.06.357247000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Records and SQL","RECORDS AND SQL","Record types are not recognized within SQL. The PL/SQL engine takes care of converting, say, ""SELECT *"" into a record for assignment to a variable. But within a SQL statement you cannot reference records.","",27293421414727,"","","",04-APR-24 06.15.01.664596000 AM,"PUBLIC","RECORD",3,"","DQNFHESVKL58L60RQJ1R1JFNH",351284,4,,,"","","","","","","","","","","","","","",,"",13-FEB-19 07.09.48.521052000 AM,18-AUG-16 02.35.05.016685000 PM,"","",,,"","","",34,""
81245377447564688280410252112730673320,22-SEP-16 08.33.39.631367000 PM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - 04 - Operatoren","DHBW DATENBANKEN UNIT 1 - 04 - OPERATOREN","DHBW Datenbanken Unit 1","",81244375211604630242454699193844562014,"","","",20-AUG-24 02.15.58.620518000 PM,"PUBLIC","DHBW, Datenbanken, Vorlesung",365,"","DWJYXM2IPRRK6G5MO7MVUYKAI",495002,1,,,"","","","","","","","","","","","","","",,"",16-DEC-23 11.56.23.703941000 AM,22-SEP-16 08.40.45.902188000 PM,"","APPROVED",15-JUN-18 01.34.35.582454000 AM,18-JUN-18 06.55.51.650725000 PM,"sharon.kennedy@oracle.com","","",466,""
84565922578968436303321997699063643795,24-OCT-16 03.13.00.872586000 PM,"",,"SHARON.KENNEDY@ORACLE.COM","NOT EXISTS example","NOT EXISTS EXAMPLE","An EXISTS condition tests for existence of rows in a subquery.  If at least one row returns, it will evaluate as TRUE.
NOT EXISTS evaluates as TRUE if 0 rows are returned and can be used to validate the absence of a condition.","",84564844012288657865196351074075344249,"","","",18-AUG-24 09.24.58.824618000 AM,"PUBLIC","EXISTS",90,"","D1VM129YZ61DA0VMBW1V7Q95H",686642,3,,,"","","","","","","","","","","","","","",,"",17-JUL-24 05.28.23.784622000 AM,24-OCT-16 03.44.33.610572000 PM,"","",,,"","","",248,""
83104517196246120500023683403265772415,10-OCT-16 03.34.37.939103000 PM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - 15 - Tuning, Index, Statistics, Explain Plan","DHBW DATENBANKEN UNIT 1 - 15 - TUNING, INDEX, STATISTICS, EXPLAIN PLAN","DHBW Datenbanken Unit 1","",83104517196200181318878327494626937727,"","","",22-JUL-24 06.37.32.518111000 PM,"PUBLIC","DHBW, Datenbanken, Vorlesung",227,"","D0Z1419OVG8FR9JF7UJOLDF4L",650964,1,,,"","","","","","","","","","","","","","",,"",17-DEC-23 07.48.06.412470000 PM,19-OCT-16 09.46.08.118938000 AM,"","APPROVED",15-JUN-18 01.34.35.587686000 AM,18-JUN-18 06.56.14.856009000 PM,"sharon.kennedy@oracle.com","","",454,""
81036745927073022495656982394803196014,20-SEP-16 08.19.36.711920000 PM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - 09 - Aggregate Functions","DHBW DATENBANKEN UNIT 1 - 09 - AGGREGATE FUNCTIONS","DHBW Datenbanken Unit 1","",81030548465356039876610159919978135078,"","","",09-JUL-24 06.46.39.946183000 AM,"PUBLIC","DHBW, Datenbanken, Vorlesung",190,"","DYP1L3A4PKM3MOEVN9IC8Y0O0",481885,1,,,"","","","","","","","","","","","","","",,"",09-JUL-24 06.46.39.946057000 AM,20-SEP-16 08.20.03.479877000 PM,"","APPROVED",15-JUN-18 01.34.35.592713000 AM,18-JUN-18 06.55.31.050919000 PM,"sharon.kennedy@oracle.com","","",340,""
84579722505902297098321983837425029075,24-OCT-16 06.43.35.925720000 PM,"",,"WILLIAM.ENDRESS@ORACLE.COM","Analytic View with CACHE clause for SH schema","ANALYTIC VIEW WITH CACHE CLAUSE FOR SH SCHEMA","This script will create create analytic view objects for the SH (sales history) schema. This script requires Oracle 12.2.

This version of the script uses the CACHE clause to encourage rewrite to a materialized view with aggregate level data.","",84579722505712495744642487056996159443,"","","",18-JUL-24 03.49.35.894705000 AM,"PUBLIC","analytic view, materialized view, CACHE clause",26,"","D1WFQFUZG68D0ASMCLUQP2J4L",687593,7,,,"","","","","","","","","","","","","","",,"",16-JUL-24 05.38.30.758429000 AM,24-OCT-16 06.43.36.230050000 PM,"","",,,"","","",76,""
79725362058829481790702633979191390017,08-SEP-16 07.06.10.461463000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Pivot and unpivot examples using Olympic data","PIVOT AND UNPIVOT EXAMPLES USING OLYMPIC DATA","Examples of pivoting and unpivoting data. Uses a subset of the results from the Rio Olympics as a data source.

For further explanation of the scripts, read the following blog post:

https://blogs.oracle.com/sql/entry/how_to_convert_rows_to","",79722727784987530302369568082618913678,"","","",22-AUG-24 04.04.31.305112000 PM,"PUBLIC","pivot unpivot",1835,"","DT4F0YC7Y4VR7IGDRXB2W9K0R",418525,7,,,"","","","","","","","","","","","","","",,"",22-AUG-24 04.04.31.305009000 PM,08-SEP-16 07.49.02.995054000 AM,"","",,,"","","",3807,""
102607279831031241503652287184806493206,15-APR-17 09.27.32.589635000 AM,"",,"MAIL.MAHESHPANDEY@GMAIL.COM","RETURN BOOLEAN IN SQL","RETURN BOOLEAN IN SQL","A QUERY TO RETURN BOOLEAN.

AS PER MY KNOWLEDGE I GUESS, THERE IS NO BOOLEAN DATA TYPE.

THERE YOU CAN FIND A ANONYMOUS BLOCK TO RETURN BOOLEAN, A FUNCTION AND SELECT STATEMENT.","",102605859668240405824835701232441642326,"","","",02-APR-24 07.42.28.715759000 AM,"PUBLIC","",15,"","EUS05Y3YGH94GTRISY6WFIPIG",3150136,3,,,"","","","","","","","","","","","","","",,"",06-SEP-22 02.26.59.032964000 PM,15-APR-17 09.27.32.662930000 AM,"","APPROVED",15-JUN-18 01.34.36.489941000 AM,19-JUN-18 05.32.51.524120000 PM,"sharon.kennedy@oracle.com","","",71,""
98667229803759821499940525335974168619,08-MAR-17 04.07.47.161704000 PM,"",,"SWEETSALONI028@GMAIL.COM","BASIC LOOP","BASIC LOOP","print numbers 1 to 5 using a basic loop statement. ","",98668112842780319367602190097106732046,"","","",01-AUG-24 12.58.17.179892000 PM,"PUBLIC","",108,"","EOHLPD8X5NH6OJ7EMCLG9QRWD",2428306,4,,,"","","","","","","","","","","","","","",,"",27-MAY-24 09.07.39.386776000 PM,08-MAR-17 04.07.47.192816000 PM,"","APPROVED",15-JUN-18 01.34.36.493362000 AM,15-JUN-18 05.38.55.698681000 PM,"sharon.kennedy@oracle.com","","",378,""
102857074915637208755699570561073732513,17-APR-17 06.01.27.799681000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","SQL Injection Demo","SQL INJECTION DEMO","SQL Injection examples of a 
procedure vulnerable to statement modification and a procedure vulnerable to statement injection.","",102853967001262438315015991621841505858,"","","",22-AUG-24 07.38.22.880164000 PM,"PUBLIC","LNPLS",108,"","EVDCJPSXUOMLD9QZ3T1ENQWVG",3183658,6,,,"","","","","","","","","","","","","","",95029624319887288740976397836146627152,"tdlnplsdynamic3",11-AUG-24 03.48.59.364949000 PM,17-APR-17 06.01.27.872409000 PM,"http://docs.oracle.com/database/122/LNPLS/dynamic-sql.htm#LNPLS638","",,,"","","",327,""
103940098358015825736178341635739522671,28-APR-17 03.59.41.815896000 AM,"",,"PLSQL@IMPLESTRAT.COM","Simpler JSON Text Index in 12.2","SIMPLER JSON TEXT INDEX IN 12.2","Creating a full text search index for JSON is simplified in 12.2.","",103936163953564166189794827630715521412,"","","",04-APR-24 11.51.56.579431000 AM,"PUBLIC","JSON Index",19,"","EWXYRWQASO5BJS3XLS25ESHR1",3406705,13,,,"","","","","","","","","","","","","","",,"",23-NOV-19 04.42.46.457873000 AM,28-APR-17 03.59.41.838346000 AM,"","APPROVED",15-JUN-18 01.34.36.500112000 AM,20-JUN-18 06.02.33.767803000 PM,"sharon.kennedy@oracle.com","","",23,""
95523484326955108152049872144702254856,06-FEB-17 01.04.07.834035000 PM,"",,"ARKADIY.KISSELEV@BILLING.RU","TOP_N_INDEX-DESC","TOP_N_INDEX-DESC","How to select TOP N of the newest records from large table.","",95519916158511343977042050621331098177,"","","",23-JUL-24 02.55.09.035826000 PM,"PUBLIC","TOP N SELECT",13,"","EJF4Y061CIYGO89EFX7696D8Q",1864220,3,,,"","","","","","","","","","","","","","",,"",13-APR-17 09.23.42.564051000 PM,06-FEB-17 01.04.07.869947000 PM,"","APPROVED",15-JUN-18 01.34.36.512172000 AM,19-JUN-18 03.52.54.292379000 PM,"sharon.kennedy@oracle.com","","",38,""
97799789138248378703591083248628408320,28-FEB-17 08.18.21.802220000 AM,"",,"NAMASIVAYAM.L.K@GMAIL.COM","XQUERY to update all nodes on XML data","XQUERY TO UPDATE ALL NODES ON XML DATA","XML contains 2426 nodes. This is a sample PLSQL block to update all the nodes. This code will work till 2426 nodes.For nodes more than 2426, this will return an error.","",97797027940045209704563114845376534413,"","","",18-JUL-24 05.44.59.855541000 PM,"PUBLIC","",22,"","EM3I5LRDT0RIYVJ1Q9HPG8RYQ",2278523,12,,,"","","","","","","","","","","","","","",,"",18-JUL-24 05.44.59.855419000 PM,28-FEB-17 08.32.23.440998000 AM,"","APPROVED",15-JUN-18 01.34.36.533420000 AM,19-JUN-18 03.53.21.483300000 PM,"sharon.kennedy@oracle.com","","",70,""
101701665181087787367175657988555421703,06-APR-17 05.00.05.914731000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Does level 3 optimization change PL/Scope data? No!","DOES LEVEL 3 OPTIMIZATION CHANGE PL/SCOPE DATA? NO!","I gave a webinar on April 6, 2017 for the Taste of Kscope17 series for ODTUG (odtug.com) on Change Impact Analysis with PL/Scope. A question came up: if you set the optimization level to 3 (inlining of subprogram code), will that change the PL/Scope data gathered? Interesting question. Suppose your function body contains an assignment to variable x. Just that one place. But the function is called in ten places. With PL/Scope find ten assignments to x or just one? Just one, as you can see in the script output below. The identifier information is gathered before optimization. Which makes perfect sense. Post-optimized code is no longer PL/SQL code.","",109046119056825,"","","",04-APR-24 06.11.54.023367000 AM,"PUBLIC","change,impact,pl/scope,pl/sql,inlining,optimization",4,"","ETCVSS96Q4XHMM32LZTG35E7A",3009427,4,,,"","","","","","","","","","","","","","",,"",16-JAN-19 03.28.55.492437000 PM,06-APR-17 05.02.48.649495000 PM,"","",,,"","","",7,""
100837802733781190206567758444267999781,29-MAR-17 10.31.23.299930000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Analytics - Using the PARTITION clause","ANALYTICS - USING THE PARTITION CLAUSE","SQL from the KISS (Keep It Simply SQL) Analytic video series by Developer Advocate Connor McDonald. This script is the first look at the partition clause.

Run this script standalone, or take it as part of the complete Analytics class at https://tinyurl.com/devgym-classes","",100837802733645790514770919976700908069,"","","",13-AUG-24 07.35.08.824268000 AM,"PUBLIC","kiss, partitioning, multi-column, range",581,"","ERYV6B90921XCX4KMSCRZZ1BR",14588532,7,,,"","","","","","","","","","","","","","",,"",13-AUG-24 07.35.08.824097000 AM,27-JUL-18 12.59.30.637974000 PM,"","APPROVED",27-JUL-18 12.59.30.631116000 PM,,"Auto Approved","","",963,""
95894754467091881130908125483351329926,10-FEB-17 02.37.45.152215000 AM,"",,"LK.DEEPU@GMAIL.COM","MilliSeconds","MILLISECONDS","Convert Date Time to UNixTime","",95890701263199193419581381304549790764,"","","",19-DEC-23 12.25.29.782722000 AM,"PUBLIC","",4,"","EJ1KG4TL2UGFB2Y05GHVS74C4",1924641,1,,,"","","","","","","","","","","","","","",,"",01-SEP-22 02.51.26.910563000 PM,10-FEB-17 02.37.45.227676000 AM,"","APPROVED",15-JUN-18 01.34.36.562669000 AM,19-JUN-18 03.50.12.607801000 PM,"sharon.kennedy@oracle.com","","",18,""
97989952358141154636488700641889915059,02-MAR-17 04.38.40.383339000 AM,"",,"RUSLAN.DAUTKHANOV@EPSILON.COM","Oracle Analytic Views 101","ORACLE ANALYTIC VIEWS 101","Pleaying with Oracle Analytic Views","",97991708966169730029356768392188158318,"","","",14-AUG-24 06.08.55.861186000 AM,"PUBLIC","",83,"","ENELLN78OE1IYREOB4TFA0R6C",2315277,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",18-JAN-24 09.41.31.151303000 AM,02-MAR-17 04.38.40.633108000 AM,"","APPROVED",15-JUN-18 01.34.36.576630000 AM,20-JUN-18 03.57.56.442677000 PM,"sharon.kennedy@oracle.com","","",284,""
97190110861927702200160973406608163930,22-FEB-17 12.25.37.682139000 PM,"",,"THOMAS.KECK@WEB.DE","show database version","SHOW DATABASE VERSION","Very simple anonymous PL/SQL-Block to show the release of the database using supplied DBMS packages and other sources","",97190110861667783148943828134046336090,"","","",20-AUG-24 04.21.41.284134000 AM,"PUBLIC","database version",31,"","EL4B8K59A74XVLM2P7SREONVW",126838875,4,,,"","","","","","","","","","","","","","",,"",27-JUN-23 03.17.56.683725000 PM,05-FEB-22 07.07.58.590521000 AM,"","APPROVED",15-JUN-18 01.34.36.583810000 AM,19-JUN-18 04.45.03.341744000 PM,"sharon.kennedy@oracle.com","","",49,""
101473279093786305110092042456491787052,04-APR-17 12.26.53.027021000 PM,"",,"ORACLE@ORCHESTRAPIT.CO.UK","Lateral_join_example_for_proportianal_banding","LATERAL_JOIN_EXAMPLE_FOR_PROPORTIANAL_BANDING","Related to http://stackoverflow.com/questions/43205467/create-proportionally-sized-bandings-in-a-table-based-on-another-table","",101474004584998796363798461016588337138,"","","",02-JUL-24 06.24.22.213757000 AM,"PUBLIC","lateral join",5,"","ESZKO9OOLAGH02B1YX840HEIM",2949777,3,,,"","","","","","","","","","","","","","",,"",12-MAR-23 04.21.02.499060000 PM,04-APR-17 12.30.08.693994000 PM,"","APPROVED",15-JUN-18 01.34.36.589624000 AM,19-JUN-18 03.54.47.651037000 PM,"sharon.kennedy@oracle.com","","",16,""
102244906702903811429172614329895905761,11-APR-17 09.24.38.404384000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Comparing Nested Tables for Equality and Inequality","COMPARING NESTED TABLES FOR EQUALITY AND INEQUALITY","This compares nested table variables for equality and inequality with relational operators.","",102244906702896557874254926554847668705,"","","",04-APR-24 05.54.06.955324000 AM,"PUBLIC","LNPLS",8,"","ET735F0YSMMQ3AMWKRILM3VQR",3099117,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"lnplscomposites95",21-FEB-24 09.52.12.899545000 AM,11-APR-17 09.24.38.428866000 PM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#LNPLS99913","",,,"","","",22,""
102244906704367820596725930260465084897,11-APR-17 09.48.58.677943000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Comparing Nested Tables with SQL Multiset Conditions","COMPARING NESTED TABLES WITH SQL MULTISET CONDITIONS","This uses the SQL multiset conditions and two SQL functions that take nested table variable arguments, CARDINALITY and SET.","",102246382830088897158466360045218735322,"","","",12-AUG-24 07.13.16.988500000 AM,"PUBLIC","LNPLS",18,"","ET767VDT3MS1PXMTZ6J8Y32NG",3099520,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"tdlnplscomposites24",20-JAN-23 07.45.00.594999000 PM,11-APR-17 09.48.58.682341000 PM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-C8C96B4E-09BE-476F-A95C-D2D0B1589CB8__BABCDABC","",,,"","","",43,""
102249782829789243529908472073855614749,11-APR-17 11.21.48.795208000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","RECORD Type with RECORD Field (Nested Record)","RECORD TYPE WITH RECORD FIELD (NESTED RECORD)","This defines two RECORD types, name_rec and contact. ","",102249782829537786959428629205516730141,"","","",23-JUL-24 08.49.11.737719000 AM,"PUBLIC","LNPLS",24,"","ET8D97W90QMNA7DUG8EB5U5PR",3101244,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"tdlnplscomposites77",03-APR-24 09.48.31.549120000 AM,11-APR-17 11.21.48.801108000 PM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-7DC81088-1265-4C46-A04D-E3AD10BCC04F__CIHEGIFD","",,,"","","",64,""
102252417500791163968365605849949420992,11-APR-17 11.31.25.801488000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","RECORD Type with Varray Field","RECORD TYPE WITH VARRAY FIELD","This defines a VARRAY type, full_name, and a RECORD type, contact. ","",102249782830460197359794591265817542429,"","","",29-JUL-24 09.36.59.344561000 PM,"PUBLIC","LNPLS",11,"","ET8N0K7EOMLMF4HE5FZU94WR7",3101339,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"tdlnplscomposites78",03-APR-24 09.50.20.610327000 AM,11-APR-17 11.31.25.803858000 PM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-7DC81088-1265-4C46-A04D-E3AD10BCC04F__CIHDJFDB","",,,"","","",34,""
102257211244546482248756670623587660627,12-APR-17 12.13.18.715528000 AM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","%ROWTYPE Variable Does Not Inherit Initial Values or Constraints","%ROWTYPE VARIABLE DOES NOT INHERIT INITIAL VALUES OR CONSTRAINTS","This creates a table with two columns, each with an initial value and a NOT NULL constraint. Then it declares a record variable that represents a row of the table and prints its fields, showing that they did not inherit the initial values or NOT NULL constraints.","",102257211244544064397117441365238248275,"","","",06-AUG-24 12.00.14.815659000 AM,"PUBLIC","LNPLS",82,"","ET8TPXDY4TJVZ36E908N9NLYD",3101682,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"tdlnplscomposites79",06-AUG-24 12.00.14.815547000 AM,12-APR-17 12.13.18.743486000 AM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#GUID-9D20CCCC-E34B-473B-8499-4787D17C1980__BEIBGEFH","",,,"","","",184,""
102144928552293109198837441064747039075,10-APR-17 10.44.58.705718000 PM,"",,"JGEBAL@GMAIL.COM","Convert REF CURSOR to XML in 3 different ways","CONVERT REF CURSOR TO XML IN 3 DIFFERENT WAYS","This script illustrates 3 ways to create XMLTYPE from a ref_cursor.
It also illustrates, that it is impossible to affect the Formatting of date in XML after the cursor was opened regardless of the approach taken.","",102143529872769775653173169013329163694,"","","",06-FEB-24 06.08.41.766400000 AM,"PUBLIC","XML, DATE, DATETIME, PL/SQL",15,"","ET2CD8U5GUI2YQOR2JK50VWFP",41800288,12,,,"","","","","","","","","","","","","","",,"",14-NOV-23 03.35.07.933557000 PM,11-FEB-20 12.37.33.841688000 AM,"","APPROVED",15-JUN-18 01.34.36.600766000 AM,19-JUN-18 03.54.59.760884000 PM,"sharon.kennedy@oracle.com","","",106,""
99325366409457575165528206865217516472,14-MAR-17 11.18.45.765690000 PM,"",,"RDORAISWAMY@GMAIL.COM","Row Count for Tables in the database","ROW COUNT FOR TABLES IN THE DATABASE","Row Counts from tables in database in descending order","",99325366409378994987253255968861615032,"","","",17-JUN-24 09.19.36.873473000 AM,"PUBLIC","Row Count",22,"","EPJLBHYMPT55JDVZSHW46ZJNU",2537304,3,,,"","","","","","","","","","","","","","",,"",31-MAY-24 03.34.24.588570000 PM,14-MAR-17 11.18.45.975836000 PM,"","APPROVED",15-JUN-18 01.34.36.611913000 AM,19-JUN-18 04.22.36.066191000 PM,"sharon.kennedy@oracle.com","","",95,""
99404190646095490242131686973772582940,15-MAR-17 04.46.34.692341000 PM,"",,"YALLIE@YANDEX.RU","Timestamp with local time zone translation","TIMESTAMP WITH LOCAL TIME ZONE TRANSLATION","Related to this SO question:
http://stackoverflow.com/questions/42815633/oracle-timestamp-with-local-time-zone-values-transparent-translation","",99396689582783936185862492310683145940,"","","",29-JUL-24 07.27.00.940689000 AM,"PUBLIC","timestamp, local, timezone",11,"","EPN437IK7BDMO4CA3Y5VX7XRI",2551596,11,,,"","","","","","","","","","","","","","",,"",18-FEB-22 02.18.00.046581000 AM,15-MAR-17 04.46.34.764963000 PM,"","APPROVED",15-JUN-18 01.34.36.617484000 AM,20-JUN-18 02.02.31.962229000 PM,"sharon.kennedy@oracle.com","","",103,""
102243174218468226742735853773866538540,11-APR-17 09.07.58.559416000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Comparing Varray and Nested Table Variables to NULL","COMPARING VARRAY AND NESTED TABLE VARIABLES TO NULL","This compares a varray variable and a nested table variable to NULL correctly.","",102237005712374584289730018440410458384,"","","",05-AUG-24 02.43.52.629181000 AM,"PUBLIC","LNPLS ",19,"","ET70JT9SYWMR7ISWG3E3QFTTQ",3098990,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"tdlnplscomposites60",05-AUG-24 02.43.52.629086000 AM,11-APR-17 09.11.55.311998000 PM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#LNPLS99914","",,,"","","",43,""
101722784070223818876327757054978224623,06-APR-17 09.47.12.555731000 PM,"",,"JMJACOBS@JEFFREYJACOBS.COM","Global Index Maintenance Resources11G vs 12C","GLOBAL INDEX MAINTENANCE RESOURCES11G VS 12C","Test script for comparing global index maintenance resource in 11G vs 12C","",102148161637537,"","","",04-APR-24 11.05.38.062392000 AM,"PUBLIC","""Global index maintenance"" ""drop partition"" ""update global index"" performance resources",3,"","ETD1IGR4Q05LVSGINVXT2WNZ6",,8,,,"","","","","","","","","","","","","","",,"",06-SEP-18 06.44.58.469522000 PM,06-APR-17 09.47.12.569047000 PM,"","APPROVED",15-JUN-18 01.34.36.639286000 AM,15-JUN-18 04.51.33.169803000 PM,"sharon.kennedy@oracle.com","","",39,""
102244906705938215236405333558408407521,11-APR-17 10.25.39.892892000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Declaring Record Constant","DECLARING RECORD CONSTANT","This example shows how to declare a constant using a qualified expression. This compact form improves program clarity and developer productivity. Compare the first statement with the alternative of creating a function that populates the record with its initial value and then invoke the function in the constant declaration.","",102247025389139513905184899131643682534,"","","",22-AUG-24 07.10.47.810383000 AM,"PUBLIC","LNPLS",18,"","ET78JXUZ97KDB4L5JNIZIRX38",70641885,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"tdlnplscomposites90",29-MAY-24 01.34.09.164433000 PM,30-NOV-20 10.23.23.750996000 PM,"","APPROVED",30-NOV-20 10.20.27.095455000 PM,,"Auto Approved","","",50,""
102241850877540458271052820777068549046,11-APR-17 08.37.45.424615000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","Identically Defined Package and Standalone Collection Types","IDENTICALLY DEFINED PACKAGE AND STANDALONE COLLECTION TYPES","This defines a standalone collection type NumList that is identical to the collection type NumList defined in the package specification.","",102237005712374584289730018440410458384,"","","",04-APR-24 06.05.16.129682000 AM,"PUBLIC","PL/SQL PLS-00306",5,"","ET7XSUDR9T3PR1Z0BSZHNA4UG",3098629,4,,,"","","","","","","","","","","","","","",95029624319882453037697939319447802448,"tdlnplscomposites74err",10-OCT-22 02.47.34.402393000 PM,11-APR-17 08.44.32.079407000 PM,"http://docs.oracle.com/database/122/LNPLS/plsql-collections-and-records.htm#LNPLS00509","",,,"","","",13,""
96639785114285165131556870169326942197,17-FEB-17 06.40.13.911733000 AM,"",,"KRISANTHKUMAR.S@GMAIL.COM","insert_value_change","INSERT_VALUE_CHANGE","Example where the value of number changes when length goes more than 42.","",96642215681576282519950193757491223714,"","","",18-MAY-24 10.49.08.209830000 PM,"PUBLIC","",,"","EK8KNMVTPW8TF8C008OHTV96F",2025660,1,,,"","","","","","","","","","","","","","",,"",,17-FEB-17 06.40.14.140540000 AM,"","APPROVED",15-JUN-18 01.34.36.655508000 AM,20-JUN-18 02.04.53.286344000 PM,"sharon.kennedy@oracle.com","","",37,""
115539193421390335998880267415593872284,17-AUG-17 05.16.30.186394000 AM,"",,"TYSON.JOUGLET@GMAIL.COM","Generic Flex Field Form Data","GENERIC FLEX FIELD FORM DATA","A way to generically store data in many different formats","",115539193421335934336997609102732094364,"","","",04-APR-24 11.09.16.841512000 AM,"PUBLIC","FLEX GENERIC",14,"","FFJN10B9QLFYZGC7I09J0DW1N",5552173,337949986681008890389062074985729416032,,,"","","","","","","","","","","","","","",,"",06-APR-23 07.23.31.971068000 PM,17-AUG-17 05.42.30.204135000 AM,"","APPROVED",15-JUN-18 01.34.37.136885000 AM,20-JUN-18 06.00.48.501090000 PM,"sharon.kennedy@oracle.com","","",44,""
112427281299765240890041584349738599013,18-JUL-17 09.05.19.033533000 AM,"",,"SCOTT.WESLEY@SAGECOMPUTING.COM.AU","Analytics - listagg","ANALYTICS - LISTAGG","Playing with listagg, among others, for basic set manipulation","",112426733060071069250623783239500300561,"","","",28-JUL-24 01.45.58.310757000 PM,"PUBLIC","listagg, keep, first_value, first, row_number, dense_rank",17,"","FAJU7XEF8BFT1B1EFQJISKTMF",5041545,7,,,"","","","","","","","","","","","","","",,"",28-JUN-24 11.02.32.193633000 AM,18-JUL-17 09.08.10.926324000 AM,"","APPROVED",15-JUN-18 01.34.37.140446000 AM,20-JUN-18 06.01.00.821276000 PM,"sharon.kennedy@oracle.com","","",64,""
113655108769887035461635299494792424109,30-JUL-17 04.33.15.822850000 AM,"",,"TAI.ADENIJI@GMAIL.COM","HR.JOB_HISTORY.ListTopRecordsUseAnalyticFunction","HR.JOB_HISTORY.LISTTOPRECORDSUSEANALYTICFUNCTION","List Top N records in the HR.JOB_HISTORY table based on Analytic Function","",113655108769438523982558272070976432813,"","","",22-MAY-24 02.26.56.190676000 PM,"PUBLIC","TopNRecords",21,"","FCIQNNLPRKP5E4HJF4IRC35RZ",5248400,3,,,"","","","","","","","","","","","","","",,"",22-MAY-24 02.25.02.895036000 PM,30-JUL-17 04.37.42.197719000 AM,"","APPROVED",15-JUN-18 01.34.37.144931000 AM,19-JUN-18 04.17.58.044757000 PM,"sharon.kennedy@oracle.com","","",67,""
116180192261335832235178923366114039529,23-AUG-17 07.27.55.658100000 AM,"",,"ELICOFF@GMAIL.COM","General employees with their paths and paths' salaries","GENERAL EMPLOYEES WITH THEIR PATHS AND PATHS' SALARIES","http://www.sql.ru/forum/1269504/zadachka-ierarhicheskiy-zapros
","",116167555910312058621535690318926243222,"","","",09-JUL-24 11.41.18.221017000 AM,"PUBLIC","connect_by_root ""connect by""",19,"","FGJ9WTFHRBFBE5V7SQ6DV19GV",5664270,1,,,"","","","","","","","","","","","","","",,"",17-APR-24 10.38.23.156110000 PM,23-AUG-17 07.27.55.798235000 AM,"","APPROVED",15-JUN-18 01.34.37.148864000 AM,18-JUN-18 02.37.51.058913000 PM,"sharon.kennedy@oracle.com","","",110,""
110066085580595992436641591015361881879,25-JUN-17 06.31.55.195786000 PM,"",,"EDUARDOSOARESALVES@GMAIL.COM","Function LEAD- Eduardo Alves","FUNCTION LEAD- EDUARDO ALVES","Exemplificando a utilização da função LEAD, onde, basicamente irá retornar o salário e a função irá mostrar o qual é o próximo salário Maior que este, ordenando do Menor para o Maior referente ao campo usado na função e também pela informação do order by.","",110052879632627248786397453659950160730,"","","",24-SEP-21 11.26.02.260299000 AM,"PUBLIC","LEAD",6,"","E6RKMS4NLFCUMSN6088ROWIV9",4629636,1,,,"","","","","","","","","","","","","","",,"",22-OCT-17 01.41.25.742912000 PM,25-JUN-17 06.31.55.247392000 PM,"","APPROVED",15-JUN-18 01.34.37.157969000 AM,19-JUN-18 04.54.19.342672000 PM,"sharon.kennedy@oracle.com","","",11,""
115646043213561182186899414235713557056,18-AUG-17 08.02.11.837089000 AM,"",,"REDDYPRASHANTH006@GMAIL.COM","nth highest salary","NTH HIGHEST SALARY","we can find nth highest salary from employee table by replacing inner query number of row number","",115658365930897611472427670005883747472,"","","",18-AUG-24 11.13.39.236804000 AM,"PUBLIC","",180,"","FFQDFZI6CPTVB37CHNYUN5VY6",5577390,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",20-JUL-24 04.47.24.976163000 AM,18-AUG-17 08.22.08.457499000 AM,"","APPROVED",15-JUN-18 01.34.37.160979000 AM,20-JUN-18 02.33.32.489749000 PM,"sharon.kennedy@oracle.com","","",457,""
111784181010744829871930179906056108345,12-JUL-17 05.55.18.097455000 AM,"",,"HYCHEN39@CYUT.EDU.TW","Show the differences between Timestamp with time zone and Timestamp with local timezone","SHOW THE DIFFERENCES BETWEEN TIMESTAMP WITH TIME ZONE AND TIMESTAMP WITH LOCAL TIMEZONE","Show the differences between ""Timestamp with timezone"" and ""Timestamp with local timezone""","",111782041615203638672417756584316895829,"","","",19-MAR-24 05.47.07.966072000 PM,"PUBLIC","",11,"","E9IQUNZOD6T46ULDR6H345N0B",4929683,1,,,"","","","","","","","","","","","","","",,"",02-NOV-22 12.54.39.955170000 AM,12-JUL-17 05.55.18.109701000 AM,"","APPROVED",15-JUN-18 01.34.37.164630000 AM,15-JUN-18 05.54.24.661242000 PM,"sharon.kennedy@oracle.com","","",58,""
113382893112203924999107472226760927448,27-JUL-17 01.33.32.629310000 PM,"",,"ORACLE@ORCHESTRAPIT.CO.UK","update_null_rows_with_max_val_or_sequence","UPDATE_NULL_ROWS_WITH_MAX_VAL_OR_SEQUENCE","Supporting script for the answer to https://stackoverflow.com/questions/45342323/oracle-complex-update-statement","",113384593168699211502770255178821718909,"","","",01-APR-23 09.02.35.479548000 AM,"PUBLIC","",1,"","FB20ZNLTMI42CUE7KQ3AK010A",5213007,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",27-JUL-17 01.41.34.031275000 PM,27-JUL-17 01.33.32.648634000 PM,"","APPROVED",15-JUN-18 01.34.37.171754000 AM,20-JUN-18 05.15.38.255312000 PM,"sharon.kennedy@oracle.com","","",24,""
111185467397918770170702864295245008477,06-JUL-17 12.10.45.911948000 PM,"",,"DHIRAJ.T10@HOTMAIL.COM","Min_Max_Function","MIN_MAX_FUNCTION","This script illustrate use of min and max function use.","",111185467397145057646149501623433055837,"","","",26-JUN-24 09.52.05.325779000 AM,"PUBLIC","MIN MAX FUNCTION",5,"","E8J6PWB8F9M0H2BSS77ZY7T17",4835741,4,,,"","","","","","","","","","","","","","",,"",26-AUG-22 06.09.29.711728000 PM,06-JUL-17 12.10.45.932482000 PM,"","APPROVED",15-JUN-18 01.34.37.178511000 AM,19-JUN-18 03.58.56.394264000 PM,"sharon.kennedy@oracle.com","","",34,""
110559686071867941864962061801735497468,30-JUN-17 12.08.19.183748000 PM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","partitioning_range_to_interval","PARTITIONING_RANGE_TO_INTERVAL","SQL from the KISS (Keep It Simply SQL) Partitioning video series by Developer Advocate Connor McDonald. This script demonstrates an converting an range partition table to an interval partitioned one.","",110559686071460533863751931769859516156,"","","",20-MAY-24 08.34.39.017771000 AM,"PUBLIC","range, interval, kiss, partitioning, sql",3,"","E7J2B8MNIE92TG4M5AF2YVSEM",4726748,8,,,"","","","","","","","","","","","","","",,"",20-MAY-24 08.34.39.017635000 AM,30-JUN-17 12.08.19.232120000 PM,"","",,,"","","",32,""
111734603767739382333779528559952043937,11-JUL-17 06.08.54.925965000 PM,"",,"ROGEL@WEB.DE","implementation restriction of PL/SQL-with-clause","IMPLEMENTATION RESTRICTION OF PL/SQL-WITH-CLAUSE","you cannot use result_cache with PL/SQL-with-clause in 12.2","",111729280236742144632159922342362504162,"","","",07-JUN-23 12.10.53.177474000 PM,"PUBLIC","",2,"","E9FVTVIK0A6HSDOQNJPYDVLMB",4919124,1,,,"","","","","","","","","","","","","","",,"",16-OCT-20 08.54.10.604211000 PM,11-JUL-17 06.08.54.942585000 PM,"","APPROVED",15-JUN-18 01.34.37.181742000 AM,18-JUN-18 05.55.38.695134000 PM,"sharon.kennedy@oracle.com","","",10,""
113157389157583350073580119328352305032,25-JUL-17 09.14.51.443856000 AM,"",,"CHRIS.SAXON@ORACLE.COM","How to Create a JSON Search Index","HOW TO CREATE A JSON SEARCH INDEX","An example of how the JSON search index in 12.2 works. This enables ad-hoc and free text searches of JSON data to use an index. ","",113155888148134122320827643896640723633,"","","",09-JUN-24 04.34.23.461123000 PM,"PUBLIC","JSON, index",41,"","FEFKUVFNR4PEY69K3BMWJY75R",5429233,1,,,"","","","","","","","","","","","","","",,"",31-MAR-21 01.49.49.769226000 AM,09-AUG-17 02.19.13.853080000 PM,"","",,,"","","",71,""
111925498451493177308291977770837922326,13-JUL-17 02.35.54.381478000 PM,"",,"CHRIS.SAXON@ORACLE.COM","3 ways to turn SQL query results into XML","3 WAYS TO TURN SQL QUERY RESULTS INTO XML","Methods for turning SQL result sets into XML. ","",111926239308921300492713782862102053069,"","","",01-JUL-24 11.11.53.080120000 PM,"PUBLIC","XML, XMLForest, DBMS_XMLGen, XMLType",38,"","E9QX1S7ADYBVP30PG3K3N05CV",4967294,12,,,"","","","","","","","","","","","","","",,"",19-JUN-24 03.21.48.477861000 PM,13-JUL-17 02.43.54.855417000 PM,"","",,,"","","",195,""
111537322243911885495455538065344961314,09-JUL-17 08.34.48.742981000 PM,"",,"DEVCHANDRAAJ@GMAIL.COM","HR_Anonymous_Block_using_Rowtype","HR_ANONYMOUS_BLOCK_USING_ROWTYPE","Anonymous plsql reading one row from HR employees table using rowtype complex datatype.","",111532982936359790989097237499909697972,"","","",18-AUG-24 11.13.20.633879000 AM,"PUBLIC","",20,"","E84HVKMYDPHP3OL5W7MS8IZEC",4879463,6,,,"","","","","","","","","","","","","","",,"",16-APR-24 03.53.11.646976000 PM,09-JUL-17 08.34.48.816964000 PM,"","APPROVED",15-JUN-18 01.34.37.189562000 AM,19-JUN-18 04.02.14.901114000 PM,"sharon.kennedy@oracle.com","","",104,""
111594968657857340412349813182566166831,10-JUL-17 10.33.49.774258000 AM,"",,"SVEN.WELLER@SYNTEGRIS.DE","12.2 new feature - TABLE operator not needed for PTF","12.2 NEW FEATURE - TABLE OPERATOR NOT NEEDED FOR PTF","Small example to demonstrate that the TABLE operator is not needed anymore in a 12.2 environment for table functions.","",111594017145249355158830315200718748337,"","","",10-JUN-24 06.54.37.338353000 AM,"PUBLIC","12.2, feature demo",4,"","E87TNZ63MVK3FV6Y7ZV2HQ631",11842694,4,,,"","","","","","","","","","","","","","",,"",16-AUG-21 05.15.46.391990000 PM,19-APR-18 01.50.41.402259000 PM,"","APPROVED",15-JUN-18 01.34.37.196157000 AM,15-JUN-18 05.03.11.764037000 PM,"sharon.kennedy@oracle.com","","",13,""
112574424822249714779656992527647169214,19-JUL-17 07.31.20.511124000 PM,"",,"KRISDBE@GMAIL.COM","collection_Procedure_OUT_Parameter_print","COLLECTION_PROCEDURE_OUT_PARAMETER_PRINT","Bulk Collect into collection object type and print the OUT Parameter result.","",112573910299103758624229516753570009920,"","","",23-MAY-24 05.21.19.790221000 PM,"PUBLIC","",4,"","FASCZHMKEC3TX2Z8HLBMD1MP8",5082574,4,,,"","","","","","","","","","","","","","",,"",22-OCT-21 10.14.20.749291000 AM,19-JUL-17 07.31.20.571637000 PM,"","APPROVED",15-JUN-18 01.34.37.199394000 AM,20-JUN-18 04.21.13.721039000 PM,"sharon.kennedy@oracle.com","","",37,""
113060778610081027148132470829062185673,24-JUL-17 10.31.32.278432000 AM,"",,"CAINE@CAINE.IN","json_to_clob problem","JSON_TO_CLOB PROBLEM","json_object_t.get_clob method cannot extract very long strings from json key","",113059167993155953898656090433102987925,"","","",14-AUG-24 06.23.06.877843000 PM,"PUBLIC","",57,"","FBKFMS018HBRB5TS9BGR4X53F",5146843,13,,,"","","","","","","","","","","","","","",,"",14-AUG-24 06.22.53.955104000 PM,24-JUL-17 10.31.32.370615000 AM,"","APPROVED",15-JUN-18 01.34.37.219798000 AM,19-JUN-18 03.58.24.700721000 PM,"sharon.kennedy@oracle.com","","",80,""
112963561107769451967516986452776470679,23-JUL-17 12.45.50.446593000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Riddler Nation Spy Analysis","RIDDLER NATION SPY ANALYSIS","No description provided","",112962346096246718192253582345641831027,"","","",04-APR-24 06.35.35.431765000 AM,"PUBLIC","SQL",13,"","FBRNJSPJH7XNX38I86PMQ35Z5",5173592,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",25-JUL-17 03.19.34.502987000 PM,25-JUL-17 03.20.04.890517000 PM,"","",,,"","","",16,""
111113120661454505424090062264208087714,05-JUL-17 08.15.32.242063000 PM,"",,"MARK.DRAKE@ORACLE.COM","SO_44933360","SO_44933360","Solution to 
https://stackoverflow.com/questions/44933360/how-to-convert-the-results-from-a-query-in-to-a-json-in-oracle-12c
","",111118482508050526631565712611959535573,"","","",21-FEB-23 01.56.01.458926000 PM,"PUBLIC","",2,"","E8F0DRCAGO0AM18QNBA9GBJ8K",4816773,13,,,"","","","","","","","","","","","","","",,"",23-NOV-21 02.12.16.176868000 PM,05-JUL-17 08.15.32.248947000 PM,"","",,,"","","",11,""
111127615755296270212279832715895383741,05-JUL-17 10.35.09.114589000 PM,"",,"MARK.DRAKE@ORACLE.COM","SO_44927778","SO_44927778","Solution to https://stackoverflow.com/questions/44927778/error-message-ora-19279-xpty0004-received-when-trying-to-create-view-of-xml-fil","",111127615755284180954083686424148321981,"","","",13-MAY-23 09.55.57.321202000 PM,"PUBLIC","",5,"","E8GV28G0C3CW1KD4FJHQBWJBO",4818083,12,,,"","","","","","","","","","","","","","",,"",20-FEB-19 08.59.52.955433000 AM,05-JUL-17 10.35.09.127820000 PM,"","",,,"","","",19,""
111792759994389890827776564871951996103,12-JUL-17 07.11.32.449439000 AM,"",,"SINGIRI.SWETHA@GMAIL.COM","Teams","TEAMS","we have two teams team a and team b and the winner. based on that find out the no of matches palyed ,won,lost
","",111789054086006220678619453662912200689,"","","",15-AUG-24 12.30.02.652844000 PM,"PUBLIC","",5,"","E9I0Y7N4TKLP4J11BHAKTLP4J",4932116,1,,,"","","","","","","","","","","","","","",,"",15-AUG-24 12.30.02.652722000 PM,12-JUL-17 07.12.02.211541000 AM,"","APPROVED",15-JUN-18 01.34.37.233157000 AM,20-JUN-18 02.02.16.213379000 PM,"sharon.kennedy@oracle.com","","",17,""
111251360021134013092445155669846933476,07-JUL-17 02.47.37.643126000 AM,"",,"MARK.DRAKE@ORACLE.COM","SO_44945293","SO_44945293","Solution to https://stackoverflow.com/questions/44945293/i-want-to-extract-the-tag-name-using-sql-from-table-with-xml-stored-as-clob-or","",111249842780570648520086568173342212156,"","","",29-JUN-23 10.22.24.165177000 AM,"PUBLIC","",2,"","E8NZM7RKB2BPAWFR5RSI3NM82",4845425,12,,,"","","","","","","","","","","","","","",,"",22-SEP-17 03.17.20.996383000 PM,07-JUL-17 02.47.37.819421000 AM,"","",,,"","","",21,""
111300532991399572000496074531405444502,07-JUL-17 02.27.28.022585000 PM,"",,"AZ.REGACC@GMAIL.COM","table() usage inconsistency","TABLE() USAGE INCONSISTENCY","table() function works fine in select statements and fails in delete statements","",111300532991356050670989947881116022166,"","","",04-APR-24 05.54.10.951419000 AM,"PUBLIC","table() collection ORA-00902",7,"","E8QTTRHRO60ZCA7CAXG31KUUG",4856440,6,,,"","","","","","","","","","","","","","",,"",30-NOV-21 04.48.14.173628000 PM,07-JUL-17 02.27.28.141324000 PM,"","APPROVED",15-JUN-18 01.34.37.249554000 AM,19-JUN-18 05.02.07.412017000 PM,"sharon.kennedy@oracle.com","","",17,""
112015816745247025154218004233348378146,14-JUL-17 11.01.57.783355000 AM,"",,"ROGEL@WEB.DE","nest xmltype(cursor(...))","NEST XMLTYPE(CURSOR(...))","play with https://twitter.com/chrisrsaxon/status/885771133445967873","",112014198796335553633360837895825047396,"","","",13-MAY-23 09.56.05.879714000 PM,"PUBLIC","",4,"","E9V36X61F0OKBAXQLBHR58668",4984993,12,,,"","","","","","","","","","","","","","",,"",26-FEB-20 10.24.50.904023000 PM,14-JUL-17 11.01.57.871651000 AM,"","APPROVED",15-JUN-18 01.34.37.256250000 AM,18-JUN-18 05.54.15.255385000 PM,"sharon.kennedy@oracle.com","","",40,""
111086098730311603053465889762217449136,05-JUL-17 01.03.11.619070000 PM,"",,"SAIKATSANYAL892@GMAIL.COM","Arithmetic Operator","ARITHMETIC OPERATOR","PL/SQL Program of Arithmetic Operation","",111082827309579698551498928521084575854,"","","",01-AUG-24 07.04.43.609493000 AM,"PUBLIC","",29,"","E8EF8AKSP6DEJMV6ZZL10TLQA",4810170,4,,,"","","","","","","","","","","","","","",,"",23-FEB-23 02.24.55.839176000 PM,05-JUL-17 01.03.11.659780000 PM,"","APPROVED",15-JUN-18 01.34.37.259704000 AM,19-JUN-18 03.57.33.607207000 PM,"sharon.kennedy@oracle.com","","",78,""
112548477157896710832802253472669511503,19-JUL-17 01.38.37.287804000 PM,"",,"CHRIS.SAXON@ORACLE.COM","How to Create an Execution Plan with DBMS_XPlan","HOW TO CREATE AN EXECUTION PLAN WITH DBMS_XPLAN","An example of how to get the execution plan for a query using dbms_xplan.

For further methods, read this blog post:
https://blogs.oracle.com/sql/how-to-create-an-execution-plan","",112551633377822760603924830926267930690,"","","",06-JUN-24 02.57.17.644378000 AM,"PUBLIC","dbms_xplan, explain plan",60,"","FAQU2DYZLHPK5ABRII8XDOX5D",27906915,1,,,"","","","","","","","","","","","","","",,"",14-MAY-24 04.25.15.041234000 AM,16-MAY-19 04.03.58.174560000 PM,"","APPROVED",16-MAY-19 04.03.58.153641000 PM,,"Auto Approved","","",204,""
122465677006926999032923803086179933997,22-OCT-17 12.39.36.164160000 PM,"",,"GURKARAN.THUKRAL@GMAIL.COM","Car Database","CAR DATABASE","Database to perform Advanced DML, PL/SQL, Triggers, Procedure and Functions","",122462397288265046101466915300505746194,"","","",22-AUG-24 10.17.48.391218000 PM,"PUBLIC","",5690,"","FQNA3K715OOAJHNI521SVQPP7",7188836,1,,,"","","","","","","","","","","","","","",,"",22-AUG-24 01.56.44.683751000 PM,22-OCT-17 12.39.36.781356000 PM,"","APPROVED",15-JUN-18 01.34.38.325439000 AM,20-JUN-18 04.10.54.208407000 PM,"sharon.kennedy@oracle.com","","",12682,""
122322349942618716910459047778024353439,21-OCT-17 03.35.51.508789000 AM,"",,"RICHARD.W.SHAW@TEAM.TELSTRA.COM","selective row reorder","SELECTIVE ROW REORDER","attempts to selectively reorder based on a alpha column which contains A, B and NULL. Will try to order all A before B and ignore the nulls","",122320446826109713081884862769982480226,"","","",02-NOV-23 04.12.44.359872000 AM,"PUBLIC","",1,"","FQE09I3OBAM7JF61Q6SIS4AH9",7163525,7,,,"","","","","","","","","","","","","","",,"",14-NOV-17 11.06.22.392597000 AM,21-OCT-17 03.35.51.573364000 AM,"","APPROVED",15-JUN-18 01.34.38.358866000 AM,19-JUN-18 04.04.18.253332000 PM,"sharon.kennedy@oracle.com","","",10,""
123226464454767459290493035875821846202,29-OCT-17 07.40.44.688777000 PM,"",,"DHURLEY@IMPLESTRAT.COM","Dot Notation In Arrays","DOT NOTATION IN ARRAYS","Navigating through JSON arrays using dot notation.","",123227833833024663428232298018781148643,"","","",27-MAR-24 03.57.50.642735000 PM,"PUBLIC","Dot Notation Array",11,"","FRVIE0OSV5DWGFTXX26G1EMBK",7413801,13,,,"","","","","","","","","","","","","","",,"",09-OCT-23 11.25.42.439788000 AM,30-OCT-17 02.14.18.427160000 AM,"","APPROVED",15-JUN-18 01.34.38.533479000 AM,18-JUN-18 08.22.09.974763000 PM,"sharon.kennedy@oracle.com","","",27,""
122816102087254347657451049680638759427,25-OCT-17 08.04.37.291278000 PM,"",,"BSTONEMAN@SMA-LLC.COM","Select sysdate with time","SELECT SYSDATE WITH TIME","select sysdate with time","",122811445160244225710113965094409523835,"","","",07-JUL-24 06.44.08.802530000 AM,"PUBLIC","sysdate",47,"","FQ7JAA0PJIRIFN95LI9001UOL",7304088,3,,,"","","","","","","","","","","","","","",,"",02-SEP-23 10.25.29.943400000 AM,25-OCT-17 08.04.37.316622000 PM,"","APPROVED",15-JUN-18 01.34.38.577688000 AM,18-JUN-18 03.39.47.072476000 PM,"sharon.kennedy@oracle.com","","",291,""
124152843532160012300757788811804203754,07-NOV-17 04.21.06.666636000 PM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - Bonus - Java JDBC Example","DHBW DATENBANKEN UNIT 1 - BONUS - JAVA JDBC EXAMPLE","DHBW Datenbanken Unit 1 (kein Prüfungsstoff!!!) 
Ein extrem vereinfachtes Beispiel zu JDBC.
!!!This script can NOT be executed in Oracle Live SQL!!!","",124152843531842064810199141338856479466,"","","",01-JUL-24 03.12.05.662802000 PM,"PUBLIC","DHBW, Datenbanken, Vorlesung",125,"","FTCZBZYW179J7DQPUKLLFXN6W",7691542,1,,,"","","","","","","","","","","","","","",,"",01-JUL-24 03.12.05.662675000 PM,06-OCT-20 09.09.21.461309000 PM,"","APPROVED",15-JUN-18 01.34.38.587261000 AM,18-JUN-18 06.55.24.409893000 PM,"sharon.kennedy@oracle.com","","",316,""
124756333430148815129542133706325138000,13-NOV-17 10.12.44.045117000 AM,"",,"ZALUSKY@CENTRUM.CZ","alter table drop constraint drop index","ALTER TABLE DROP CONSTRAINT DROP INDEX","Demonstrates the syntax `alter table foo drop constraint un_foo drop index;` works. Why?
","",124756313353499614787691321382136338463,"","","",23-JUL-24 11.04.49.598541000 PM,"PUBLIC","alter table drop constraint index",37,"","FUBI3R35VWJ5RFZH043B7QZTU",7863793,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",23-JUL-24 11.04.27.253830000 PM,13-NOV-17 10.12.44.179229000 AM,"","APPROVED",15-JUN-18 01.34.38.609651000 AM,18-JUN-18 07.02.57.135304000 PM,"sharon.kennedy@oracle.com","","",242,""
128624946083761780076833870183643353633,20-DEC-17 11.17.40.674331000 AM,"",,"MARTIN.A.BERGER@GMAIL.COM","SORT ORDER BY STOPKEY ignoring ROWNUM filter","SORT ORDER BY STOPKEY IGNORING ROWNUM FILTER","in the execution plan, the E-rows drop from 10000 to 15 after line 3:COUNT STOPKEY - but it is still 10000 after 5:SORT ORDER BY STOPKEY even the optimizer knows, the same filter(ROWNUM<=15) is applied in both rows.
","",128624059319281418962123924404261527395,"","","",25-JUL-24 07.56.23.735176000 AM,"PUBLIC","optimizer",29,"","F0IT38ZG6PCGF27L5ZAFIMCHF",9026512,15,,,"","","","","","","","","","","","","","",,"",11-OCT-23 01.34.23.602678000 PM,20-DEC-17 11.17.40.710851000 AM,"","APPROVED",15-JUN-18 01.34.39.421933000 AM,20-JUN-18 05.12.51.162605000 PM,"sharon.kennedy@oracle.com","","",151,""
128120425290486505824924423838128290438,15-DEC-17 03.03.02.853250000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Comparison of performance of implicit and explicit cursors","COMPARISON OF PERFORMANCE OF IMPLICIT AND EXPLICIT CURSORS","Implicit cursors generally run faster than explicit cursors - when a row is found. When a row is not found, a SELECT-INTO raises NO_DATA_FOUND, which slows things down considerably. Bottom line: when you expect to almost always find a row, use SELECT-INTO. When you expect to often NOT find a row, go with OPEN-FETCH-CLOSE. ","",14392828864657,"","","",13-JUN-24 01.08.29.152357000 PM,"PUBLIC","exception, implicit,explicit",55,"","FZQOL5X6A82EGVKD836X5UNYR",14441629,4,,,"","","","","","","","","","","","","","",,"",04-DEC-23 05.10.48.681305000 PM,20-JUL-18 02.13.34.806729000 PM,"","APPROVED",20-JUL-18 02.13.34.789616000 PM,,"Auto Approved","","",168,""
133515579490474816191223656412510587284,05-FEB-18 06.56.11.566607000 AM,"",,"ZEEDZLER@GMAIL.COM","Marvels_Workout","MARVELS_WORKOUT","List of Marvel super heroes workout","",133517041199382494688148945637323967010,"","","",26-JUL-22 02.27.12.617181000 PM,"PUBLIC","Marvels",3,"","F8C4WDZAOD6BQX02SD84KT51Y",9826482,1,,,"","","","","","","","","","","","","","",,"",26-JUL-22 02.27.12.617029000 PM,05-FEB-18 06.56.11.843309000 AM,"","APPROVED",15-JUN-18 01.34.39.746294000 AM,18-JUN-18 04.25.54.689674000 PM,"sharon.kennedy@oracle.com","","",8,""
134618678354687194609403310441199489212,15-FEB-18 08.53.25.441472000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","JSON Object Type Introspection Methods","JSON OBJECT TYPE INTROSPECTION METHODS","The JSON_ELEMENT_T type offers set of introspection methods that enable you to discover properties of JSON objects without modifying them. They include: is_Object  is_Array  is_Scalar  is_String  is_Number  is_Boolean  is_True  is_False is_Null is_Date is_Timestamp and get_Size. ","",12660597254875,"","","",29-JUL-24 08.25.53.060209000 PM,"PUBLIC","json,api,object types,12.2",7,"","F94S5DKH86KLQ94WO7DUR873Y",10052467,4,,,"","","","","","","","","","","","","","",,"",07-MAR-23 03.47.48.615404000 PM,15-FEB-18 09.02.08.294279000 PM,"","",,,"","","",36,""
133739363536614087154922903401065495923,07-FEB-18 10.03.20.072927000 AM,"",,"CHRIS.SAXON@ORACLE.COM","How to Find Consecutive Rows with SQL","HOW TO FIND CONSECUTIVE ROWS WITH SQL","Examples of how you can find rows with consecutive values. This gives two solutions. The Tabibitosan method which uses row_number(). And a pattern matching approach which uses match_recognize in Oracle Database 12c.","",133736898308708221826218448937516949918,"","","",10-JUL-24 03.27.38.590942000 PM,"PUBLIC","match_recognize, Tabibitosan, 12c",43,"","F8P1XAS4Y5Y1ZUGVKRUL2OF69",9878233,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",10-JUL-24 03.27.38.590807000 PM,07-FEB-18 10.16.32.615490000 AM,"","",,,"","","",182,""
134351035048083611557448731748815498319,13-FEB-18 06.43.57.834094000 AM,"",,"HARNEET98SINGH@GMAIL.COM","add 2 numbers using PL SQL","ADD 2 NUMBERS USING PL SQL","this is a program to add two numbers using PL/SQL commands.","",134351035047673785704599372458590104655,"","","",21-AUG-24 07.47.29.545143000 AM,"PUBLIC","",508,"","F9PCZFDC4V9HGQNHRD5ULBO31",9993231,4,,,"","","","","","","","","","","","","","",,"",19-AUG-24 07.51.45.297403000 AM,13-FEB-18 06.43.57.875827000 AM,"","APPROVED",15-JUN-18 01.34.39.775475000 AM,18-JUN-18 04.19.12.236714000 PM,"sharon.kennedy@oracle.com","","",1736,""
134351035049525860060248984354239966287,13-FEB-18 06.50.30.058271000 AM,"",,"HARNEET98SINGH@GMAIL.COM","find area of circle","FIND AREA OF CIRCLE","this is a easy program to find the area of circle","",134351035047673785704599372458590104655,"","","",22-AUG-24 07.07.10.396806000 AM,"PUBLIC","",11,"","F9PCZFDH533B5ZYWH7R5XTNFL",9993333,4,,,"","","","","","","","","","","","","","",,"",14-AUG-24 06.23.58.415684000 AM,13-FEB-18 06.50.30.086890000 AM,"","APPROVED",15-JUN-18 01.34.39.780567000 AM,18-JUN-18 04.16.42.010876000 PM,"sharon.kennedy@oracle.com","","",76,""
134351035050818201761417022942000868431,13-FEB-18 07.17.00.570086000 AM,"",,"HARNEET98SINGH@GMAIL.COM","your name on screen","YOUR NAME ON SCREEN","this is a easy program to write the name on screen","",134351035047673785704599372458590104655,"","","",04-APR-24 06.25.44.840058000 AM,"PUBLIC","",1,"","F9PCZFDMOHT5B4JNOT7WL27XD",9993735,4,,,"","","","","","","","","","","","","","",,"",06-JUL-18 11.05.27.214190000 AM,13-FEB-18 07.17.00.609368000 AM,"","APPROVED",15-JUN-18 01.34.39.788894000 AM,18-JUN-18 04.16.31.367547000 PM,"sharon.kennedy@oracle.com","","",16,""
134623302058658426656723383661944777999,15-FEB-18 09.23.33.589011000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Error Handling with JSON Object Types","ERROR HANDLING WITH JSON OBJECT TYPES","The default behavior of JSON object type methods is to return NULL if anything goes wrong (consistent with behavior of other JSON APIs already loose in the world). You can also ""escalate"" error handling to force the raising of exceptions, but most do so for specific instances of types, using the ON_ERROR method. Possible inputs: 0 : Return NULL instead of raising an error (default); 
1 : Raise all errors;
2 : Raise error if no value found;
3 : Raise error is return value doesn't match required data type;
4 : Raise error for invalid inputs.

","",12660597254875,"","","",04-APR-24 06.18.14.884926000 AM,"PUBLIC","json,12.2,api,error",3,"","F94S5DKL3ET5PFA76SQOKAC62",10052828,4,,,"","","","","","","","","","","","","","",,"",24-APR-23 08.57.25.817055000 PM,15-FEB-18 09.24.39.481153000 PM,"","",,,"","","",38,""
134481645413650095580679537148719430512,14-FEB-18 01.15.41.214574000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Qualified Expressions for Records (aka, record constructors)","QUALIFIED EXPRESSIONS FOR RECORDS (AKA, RECORD CONSTRUCTORS)","Aggregates and their necessary adjunct, qualified expressions, improve program clarity and programmer productivity.

Through Oracle Database 12c release 2, it was possible to supply the value of a non-scalar datatype with an expression, 
for example by using the type constructor for a nested table. Starting with Oracle Database Release 18c, any PL/SQL 
value can be provided by an expression (for example for a record or for an associative array) like a constructor 
provides an abstract datatype value. In PL/SQL, we use the terms ""qualified expression"" and ""aggregate"" rather 
than the SQL term ""type constructor"", but the functionality is the same.

Qualified expressions improve program clarity and developer productivity by providing the ability to declare and 
define a complex value in a compact form where the value is needed.

A qualified expression combines expression elements to create values of a RECORD type or associative array type.

Qualified expressions use an explicit type indication to provide the type of the qualified item. This explicit 
indication is known as a typemark.","",116767994159021,"","","",03-APR-24 02.38.06.446880000 PM,"PUBLIC","18c,record,initialize",12,"","F9WWD55F3V2H0D2LYQSDRWEE6",10070940,4,,,"","","","","","","","","","","","","","",,"",04-DEC-21 11.39.23.742277000 AM,14-JAN-19 09.32.17.432263000 PM,"","APPROVED",14-JAN-19 09.32.17.431276000 PM,,"Auto Approved","","",65,""
133937435945053762322303035240996311476,09-FEB-18 09.10.36.768866000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Scalable Sequences","SCALABLE SEQUENCES","Examples of how scalable sequences in 18c work","",133943385784909913492574076112594431391,"","","",15-NOV-23 04.06.06.543796000 AM,"PUBLIC","18c, sequence",12,"","F9WLSTKWL1IYURCYQ8O6TLK7C",10069506,1,,,"","","","","","","","","","","","","","",,"",23-APR-22 08.29.03.642725000 AM,17-FEB-18 08.53.22.517912000 AM,"","",,,"","","",50,""
133581320947386933824549203905323137921,05-FEB-18 10.23.45.345011000 PM,"",,"AKTENISK@GMAIL.COM","Function based unique index not working","FUNCTION BASED UNIQUE INDEX NOT WORKING","This is an example of a function based index to avoid duplicates usernames when there is a logical delete flag.","",133581320946593878486882007166715886465,"","","",21-JAN-24 10.18.11.825873000 AM,"PUBLIC","",5,"","F8GXIEAS7ROA7FIG1Y07YF2R3",9843060,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",04-AUG-21 12.43.36.552531000 PM,05-FEB-18 10.23.45.354222000 PM,"","APPROVED",15-JUN-18 01.34.39.804477000 AM,19-JUN-18 05.31.25.648907000 PM,"sharon.kennedy@oracle.com","","",20,""
134676784581526439024075175873896694684,16-FEB-18 11.07.31.998623000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Functions to find the next business day, add/subtract N working days and get working days between dates","FUNCTIONS TO FIND THE NEXT BUSINESS DAY, ADD/SUBTRACT N WORKING DAYS AND GET WORKING DAYS BETWEEN DATES","A comparison of methods to calculate next working day, add or subtract N working days and find working days between dates.","",134680872843634687605059443314521721304,"","","",22-APR-24 01.52.19.347579000 AM,"PUBLIC","dates",28,"","GCKQLTO2SB3H41WAZMLWBV1Z5",10366704,1,,,"","","","","","","","","","","","","","",,"",15-APR-22 08.20.49.527404000 AM,02-MAR-18 09.55.37.591539000 AM,"","",,,"","","",86,""
134348172448768718490309743653073621614,13-FEB-18 06.12.26.425721000 AM,"",,"RAMI@SRACO.COM.SA","NVL with No Rows Found","NVL WITH NO ROWS FOUND","this will return the nvl value even there is no result","",134348172448333505195248477150179398254,"","","",14-JUL-24 10.42.59.585557000 AM,"PUBLIC","NVL,No Data Found",9,"","F9O6093RZSUX5MI0OD01UDJPC",9992760,1,,,"","","","","","","","","","","","","","",,"",14-JUL-24 10.42.59.585409000 AM,13-FEB-18 06.12.26.563119000 AM,"","APPROVED",15-JUN-18 01.34.39.867108000 AM,18-JUN-18 04.17.06.046737000 PM,"sharon.kennedy@oracle.com","","",61,""
133375789414650470657301371465786653064,03-FEB-18 10.20.55.776345000 PM,"",,"ROGEL@WEB.DE","instead of insert: strange behaviour with order by","INSTEAD OF INSERT: STRANGE BEHAVIOUR WITH ORDER BY","The following behaviour of oracle with an instead of trigger on a view and an order by clause seems to be a bug.","",133369971892110657661047770073858210251,"","","",22-DEC-23 07.17.55.418573000 AM,"PUBLIC","instead of order by ",4,"","F742EXBLXD0K050TSV8EOAL1M",9805788,1,,,"","","","","","","","","","","","","","",,"",02-FEB-20 09.48.42.247260000 PM,03-FEB-18 10.32.50.271801000 PM,"","APPROVED",15-JUN-18 01.34.39.871183000 AM,18-JUN-18 05.56.02.083782000 PM,"sharon.kennedy@oracle.com","","",35,""
133943012915300336829457739999710189408,09-FEB-18 09.16.18.355773000 AM,"",,"CHRIS.SAXON@ORACLE.COM","JSON_table Enhancements","JSON_TABLE ENHANCEMENTS","Examples showing the simplified format for JSON_table expressions","",133943385784909913492574076112594431391,"","","",21-FEB-23 01.48.08.667714000 PM,"PUBLIC","18c, JSON, JSON_table",6,"","F9WLSTKWF39AUT72DMO5JNLH0",10069516,13,,,"","","","","","","","","","","","","","",,"",02-MAY-19 08.13.40.646967000 PM,17-FEB-18 08.54.47.287754000 AM,"","",,,"","","",27,""
134700645804442772077199957899092885467,16-FEB-18 03.54.50.353115000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Dynamic CSV to Columns Converter: Polymorphic Table Function Example","DYNAMIC CSV TO COLUMNS CONVERTER: POLYMORPHIC TABLE FUNCTION EXAMPLE","An example of how to use polymorphic table functions in 18c to dynamically convert CSV data to columns.","",134700645804130869215739383572018692059,"","","",16-AUG-24 08.27.31.666217000 PM,"PUBLIC","18c, polymorphic table functions",71,"","F99UFMU5E2837FXMG4XJY77FA",10069499,1,,,"","","","","","","","","","","","","","",,"",16-AUG-24 08.26.30.325122000 PM,17-FEB-18 08.52.06.362289000 AM,"","",,,"","","",378,""
133943385785001791854864787929872100767,09-FEB-18 09.05.02.499361000 AM,"",,"CHRIS.SAXON@ORACLE.COM","JSON_equal Condition","JSON_EQUAL CONDITION","Examples of how the new condition in 18c, json_equal, works to compare JSON documents.","",133943385784909913492574076112594431391,"","","",28-MAR-24 11.20.13.719802000 PM,"PUBLIC","18c, JSON, JSON_equal",5,"","F9V1YOSHCPDZEI6DPPN3FX8Z3",10069502,13,,,"","","","","","","","","","","","","","",,"",07-NOV-23 04.01.51.977940000 AM,17-FEB-18 08.52.35.614137000 AM,"","",,,"","","",9,""
133943385785650985019997843796689317279,09-FEB-18 09.07.11.044924000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Enhanced JSON Function Data Type Support","ENHANCED JSON FUNCTION DATA TYPE SUPPORT","The JSON functions in 18c now support the following SQL data types: * BINARY_DOUBLE * BINARY_FLOAT * CLOB * BLOB * NVARCHAR2 * RAW * TIMESTAMP WITH TIME ZONE * TIMESTAMP WITH LOCAL TIME ZONE * INTERVAL YEAR TO MONTH * INTERVAL DAY TO SECOND","",133943385784909913492574076112594431391,"","","",11-JUL-23 04.51.22.114463000 AM,"PUBLIC","18c, JSON",10,"","F9WLSTKWMHXJ217SXTRYL11SO",10069504,13,,,"","","","","","","","","","","","","","",,"",23-AUG-21 06.57.56.727119000 AM,17-FEB-18 08.52.56.526735000 AM,"","",,,"","","",51,""
133943385786751107515847156345671937439,09-FEB-18 09.18.18.165204000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Faceted Navigation Support for Oracle Text","FACETED NAVIGATION SUPPORT FOR ORACLE TEXT","Faceted navigation enables you to get summary details with Oracle Text search results.","",133943385784909913492574076112594431391,"","","",04-APR-24 11.11.32.961453000 AM,"PUBLIC","18c, faceted navigation, Text",21,"","F9WP8ZEEU7HM9PVKGYY3R2RE5",10069512,893254896586036118486907198353590179,,,"","","","","","","","","","","","","","",,"",19-JAN-22 07.17.09.172648000 PM,17-FEB-18 08.54.16.377990000 AM,"","",,,"","","",54,""
133641456971167240486590352714134850833,06-FEB-18 12.00.43.710039000 PM,"",,"RUAIRITOBRIEN@GMAIL.COM","Sample tasks ordered by state and late","SAMPLE TASKS ORDERED BY STATE AND LATE","Demonstrate order by query using string and bool","",133637327606137294471163696760715118746,"","","",04-JAN-24 01.27.21.401575000 PM,"PUBLIC","",,"","F8KEG2MLWYVJMKFMECOQG0HIB",9853209,1,,,"","","","","","","","","","","","","","",,"",,06-FEB-18 12.00.43.772189000 PM,"","APPROVED",15-JUN-18 01.34.39.918557000 AM,20-JUN-18 05.00.43.492063000 PM,"sharon.kennedy@oracle.com","","",29,""
134972517137473028469578966949201507916,19-FEB-18 05.52.06.501542000 AM,"",,"JEFFREY.KEMP@JK64.COM","create private temporary table does not commit","CREATE PRIVATE TEMPORARY TABLE DOES NOT COMMIT","Normally, DDL such as ""create table"" will issue a commit in the session. CREATE PRIVATE TEMPORARY TABLE does not.","",134972517137179259495412612059747907148,"","","",19-MAY-24 03.11.25.547197000 AM,"PUBLIC","private temporary table",4,"","GAO8FGS2GB1M68RXIP1K9BT8U",10087636,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",03-MAY-19 06.39.32.687426000 AM,19-FEB-18 05.52.06.534531000 AM,"","APPROVED",15-JUN-18 01.34.39.925318000 AM,18-JUN-18 02.45.38.015119000 PM,"sharon.kennedy@oracle.com","","",58,""
135034319789816177601597104987040429173,19-FEB-18 09.30.56.943654000 PM,"",,"THOMAS.TESKE@ORACLE.COM","Online Partition Operations (1)","ONLINE PARTITION OPERATIONS (1)","Demonstrate ONLINE partition operations 
(1) NON-PARTITIONED TABLE to RANGE PARTITIONED TABLE

Note 1: please consult the documentation at docs.oracle.com for more details
Note 2: reference at support.oracle.com is ""Master Note for Partitioning (Doc ID 1312352.1)""
","",135042636659785029243736281116696121108,"","","",14-JUL-24 02.56.42.184706000 PM,"PUBLIC","partitioning online",45,"","GAWD2M78XI9HR2YBS64PLBNCP",10104596,8,,,"","","","","","","","","","","","","","",,"",18-MAR-24 09.55.33.539418000 AM,19-FEB-18 09.30.56.948637000 PM,"","",,,"","","",69,""
135133358880994229901323532030551324921,20-FEB-18 07.08.43.760361000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Using JSON_OBJECT_T to Manipulate JSON Data in PL/SQL      ","USING JSON_OBJECT_T TO MANIPULATE JSON DATA IN PL/SQL      ","JSON_OBJECT_T was added to Oracle Database 12c Release 2, as part of a suite of object types/APIs to allow native manipulation of JSON data in PL/SQL. JSON_OBJECT_T is for use with JSON objects. This code was provided by Darryl Hurley, as part of the ODTUG CodeTalk series. ","",8313240209595,"","","",22-AUG-24 09.52.00.509238000 PM,"PUBLIC","json,122,json_object_t,object",49,"","GAYINRPNKZ2D0XH5HVW0IY3BF",10122696,4,,,"","","","","","","","","","","","","","",,"",22-AUG-24 09.52.00.509138000 PM,20-FEB-18 07.09.33.336628000 PM,"","",,,"","","",195,""
135211003288533198874966160803296502385,21-FEB-18 12.12.31.753290000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Find Unreachable Code with PL/SQL Warnings","FIND UNREACHABLE CODE WITH PL/SQL WARNINGS","Oh, so you think you know what's going on in your code base? You think all that code that you wrote is actually executed? You could be in for a big surprise when you turn on PL/SQL warnings and let the compiler check for you! ","",16277169233993,"","","",04-APR-24 06.00.45.843627000 AM,"PUBLIC","WARNING,ERROR,plw,unreachable",6,"","GA2ZZ7VAGGD2SSX93QR5AINSZ",14441623,4,,,"","","","","","","","","","","","","","",,"",07-DEC-21 01.45.18.870862000 PM,20-JUL-18 02.13.09.164067000 PM,"","APPROVED",20-JUL-18 02.13.09.155517000 PM,,"Auto Approved","","",10,""
135211003288671016418402228529213006449,21-FEB-18 12.19.24.709614000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Find Unused Code In Programs","FIND UNUSED CODE IN PROGRAMS","The PL/SQL compile-time warning system can find many possible areas for improvement in your code. For example, you might have nested subprograms you've created that you no longer use. It's extremely important to remove dead code like this to avoid confusion and bugs in the future!","",16277169233993,"","","",15-JUL-24 12.27.49.930838000 PM,"PUBLIC","WARNING,ERROR,plw,unused",7,"","GA2ZZ7VBT4KCXOBN1J6AGCWEB",10135828,6,,,"","","","","","","","","","","","","","",,"",24-NOV-23 09.03.48.080099000 AM,21-FEB-18 12.23.30.783627000 PM,"","",,,"","","",33,""
135211003289170302781903070378366657137,21-FEB-18 12.27.42.700387000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Avoid Using Pre-Defined Names","AVOID USING PRE-DEFINED NAMES","Use the PL/SQL compile time warnings system to detect when you are using names of pre-defined elements of PL/SQL, such as VARCHAR2, for identifiers in your application. This is best to avoid confusion.","",135211003288110074838101040592149340785,"","","",04-APR-24 06.31.22.728255000 AM,"PUBLIC","error,warning,plw",1,"","GA2ZZ7VCHIPARTMPFL4K05V5F",10135869,4,,,"","","","","","","","","","","","","","",,"",05-MAY-23 04.10.24.009120000 PM,21-FEB-18 12.27.42.702616000 PM,"","",,,"","","",23,""
135211003290774547344531683293201752689,21-FEB-18 12.31.47.996812000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Use Warnings to Identify NOCOPY Opportunities","USE WARNINGS TO IDENTIFY NOCOPY OPPORTUNITIES","With OUT and IN OUT parameters, you can benefit from adding the NOCOPY clause, which asks the compiler to not copy-in and copy-out the actual arguments passed to the subprogram. For large collections, this can have a noticeable impact on performance and memory allocation.","",16277169233993,"","","",15-JUL-24 12.27.26.444320000 PM,"PUBLIC","WARNING,ERROR,plw,nocopy",12,"","GA2ZZ7VIAOPZL8TJECGWU1F5F",10135927,4,,,"","","","","","","","","","","","","","",,"",12-NOV-22 12.10.55.507415000 PM,21-FEB-18 12.34.24.748658000 PM,"","",,,"","","",41,""
135211003291006661101897692094745338481,21-FEB-18 12.37.42.321703000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Use Compile-Time Warnings to Detect Runtime Errors","USE COMPILE-TIME WARNINGS TO DETECT RUNTIME ERRORS","This is one of my favorite warnings: PLW-6017. Something bad is your way coming! This catch-all warning is flagged when the compiler that at run-time, your code will raise an exception. Very cool! You might ask: why isn't this a compile-time ERROR? Well, maybe the developer is deliberately raising an exception for some reason?","",135211003288110074838101040592149340785,"","","",04-APR-24 06.18.39.383994000 AM,"PUBLIC","error,warning,plw,runtime",2,"","GA2ZZ7VIV88KI6O7113390LI7",10135956,4,,,"","","","","","","","","","","","","","",,"",07-MAR-18 02.05.27.290946000 PM,21-FEB-18 12.37.42.323961000 PM,"","",,,"","","",11,""
135358220750594214400589045278884766029,22-FEB-18 11.30.52.387095000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","18c DBMS_TF Method Name Overrides","18C DBMS_TF METHOD NAME OVERRIDES","This example shows how to change the default method name of the noop_p  polymorphic table function (PTF) fetch_rows method to noop_fetch.","",14033345298483,"","","",10-JUN-24 06.56.06.608435000 AM,"PUBLIC","18c ARPLS",3,"","GC51C2JUZQPV7YZ2GTH6O0Y6U",10186101,4,,,"","","","","","","","","","","","","","",135355278221899347711766874504565651066,"noop_method_overrides",28-OCT-23 07.18.33.958089000 AM,22-FEB-18 11.53.16.327848000 PM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/arpls/DBMS_TF.html#GUID-ECBD7B38-0D6B-448B-AEAF-D6CBA50BC4A8","",,,"","","",20,""
135359097472032956701738118796479845379,22-FEB-18 10.34.54.048232000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","18c Noop Polymorphic Table Function Example","18C NOOP POLYMORPHIC TABLE FUNCTION EXAMPLE","The noop PTF returns the input rows as the output rows without any modification or filtering. Noop is one of the smallest PTF you can write.","",125500743962122,"","","",13-MAY-24 01.51.17.750620000 PM,"PUBLIC","18c ARPLS",13,"","GC5T25OV8NTE8FVLYS02EADXM",10185435,4,,,"","","","","","","","","","","","","","",135355278221899347711766874504565651066,"ptfnoop",13-MAY-24 01.50.50.680959000 PM,22-FEB-18 10.52.01.228172000 PM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/arpls/DBMS_TF.html#GUID-47E8026F-B66B-4F8D-A2E2-D4324AAB2CED","",,,"","","",40,""
135981324416061909375442072541044934435,28-FEB-18 09.29.15.514396000 PM,"",,"KAUR.MANDEEP88@GMAIL.COM","Oracle 18c- Private Temporary Tables","ORACLE 18C- PRIVATE TEMPORARY TABLES","Private temp tables ","",135972736835138827650252127055540697114,"","","",27-JUL-24 09.43.29.592738000 AM,"PUBLIC","18c",11,"","GCBGQNP172CEAKK8KG136HH2D",10331682,1,,,"","","","","","","","","","","","","","",,"",24-JUN-22 07.32.09.251269000 AM,28-FEB-18 09.29.15.543475000 PM,"","APPROVED",15-JUN-18 01.34.39.960333000 AM,18-JUN-18 02.45.14.698916000 PM,"sharon.kennedy@oracle.com","","",81,""
134937249381131571972368845122554325019,18-FEB-18 09.17.48.261168000 PM,"",,"MAIL@PACHOT.NET","#18c - optimizer_ignore_hints.sql","#18C - OPTIMIZER_IGNORE_HINTS.SQL","optimizer_ignore_hints is now documented (was an underscore parameter). In this example, an hint prevents the best access.","",134931106258194748131938908094054846092,"","","",04-APR-24 10.53.47.244456000 AM,"PUBLIC","18c",47,"","GAM6447L97X9VTI1ANN5R4WBX",10112017,15,,,"","","","","","","","","","","","","","",,"",03-NOV-23 06.28.42.229831000 AM,20-FEB-18 08.54.24.640904000 AM,"","APPROVED",15-JUN-18 01.34.39.970708000 AM,15-JUN-18 04.58.34.469866000 PM,"sharon.kennedy@oracle.com","","",184,""
135262265488408064422333629892647505658,21-FEB-18 11.52.25.264706000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","18c To_doc Polymorphic Table Function Example","18C TO_DOC POLYMORPHIC TABLE FUNCTION EXAMPLE","The to_doc Polymorphic Table Function (PTF) example combines a list of specified columns into a single document column constructed like a JSON object.","",114506729680964,"","","",10-JUN-24 06.59.25.583824000 AM,"PUBLIC","18c LNPLS",15,"","GA6A9XPGWUPF5E9Z4RIX999CN",10148030,4,,,"","","","","","","","","","","","","","",135270837355226124256152251140347265330,"ptftodoc",31-OCT-23 03.16.56.243959000 PM,22-FEB-18 12.19.09.235847000 AM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/lnpls/plsql-optimization-and-tuning.html#GUID-F8E13DDD-710D-4626-824E-B344849C5AFE","",,,"","","",57,""
135262265489875700367345789710740803322,21-FEB-18 11.53.22.688107000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","18c Skip_col Polymorphic Table Function Example","18C SKIP_COL POLYMORPHIC TABLE FUNCTION EXAMPLE","The skip_col PTF returns all the columns in a table except the columns specified in the PTF input argument. ","",114506729680964,"","","",03-APR-24 02.29.27.072454000 PM,"PUBLIC","18c LNPLS",16,"","GA6C9T46PVREKY2VU6YXL21U4",10148664,4,,,"","","","","","","","","","","","","","",135270837355226124256152251140347265330,"ptfskpcol",13-FEB-24 06.25.08.967940000 PM,22-FEB-18 12.53.53.136203000 AM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/lnpls/plsql-optimization-and-tuning.html#GUID-695FBA1A-89EA-45B4-9C81-CA99F6C794A5","",,,"","","",41,""
135127976094273255878796257209485147697,20-FEB-18 05.29.29.757662000 PM,"",,"THOMAS.TESKE@ORACLE.COM","Online Partition Operations (2)","ONLINE PARTITION OPERATIONS (2)","Demonstrate ONLINE partition operations - 
change a non-partitioned table into an interval partitioned table.
Apply DML and queries showing the benefit of partitioning.

Note 1: please consult the documentation at docs.oracle.com for more details
Note 2: reference at support.oracle.com is ""Master Note for Partitioning (Doc ID 1312352.1)""","",106848272391109,"","","",14-JUL-24 02.56.44.458547000 PM,"PUBLIC","partitioning online operation",39,"","GA9WRJZLPR6C1WA9E0GUT2GYC",,8,,,"","","","","","","","","","","","","","",,"",18-DEC-19 01.44.23.700192000 PM,20-FEB-18 05.29.29.762195000 PM,"","",,,"","","",34,""
136129473409578080385985074477340053732,02-MAR-18 07.27.33.453314000 AM,"",,"THOMAS.TESKE@ORACLE.COM","Online Partition Operations (3)","ONLINE PARTITION OPERATIONS (3)","Demonstrate ONLINE partition operations - change a non-partitioned table into an interval partitioned table. Apply DML and queries showing the benefit of partitioning. Note 1: please consult the documentation at docs.oracle.com for more details Note 2: reference at support.oracle.com is ""Master Note for Partitioning (Doc ID 1312352.1)"" 

Filtered Partition Maintenance Operations have been introduced in Oracle 12.2
FPMOs allow to operate on tables/partitions AND filter using predicates.","",25210272501483,"","","",29-JUL-24 01.34.46.724146000 PM,"PUBLIC","partitioning online operation",70,"","GCZHF5ABA9YICGWPKG971UH3V",10364521,8,,,"","","","","","","","","","","","","","",,"",02-MAR-24 06.44.31.049092000 PM,,"","",,,"","","",116,""
134779683243455473273768538945562099069,17-FEB-18 09.40.34.773034000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","18c approx_count function","18C APPROX_COUNT FUNCTION","Data analysis applications heavily use aggregate functions. Approximate query processing (available since Oracle Database 12c Release 1) aims to deliver faster results for these queries. The approximate results are not identical to the exact results but they are very close. New approximate SQL functions for rank, sum and count are now available for Top-N style queries.

By making use of approximate query processing, you can instantly improve the performance of existing analytic workloads and enable faster ad-hoc data exploration","",134779683243368430614756285644983254397,"","","",04-APR-24 11.52.04.853578000 AM,"PUBLIC","18c, approx_count",19,"","GAD3PVT9ROZG7F6LUT1B8GZYN",10069772,7,,,"","","","","","","","","","","","","","",,"",07-FEB-24 09.48.18.698447000 AM,17-FEB-18 09.40.34.782892000 AM,"","",,,"","","",63,""
134779683243622305036875357771671551357,17-FEB-18 09.48.47.724873000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","18c merge online","18C MERGE ONLINE","Merge partitions on line without service interruption","",134779683243368430614756285644983254397,"","","",04-APR-24 11.05.28.004589000 AM,"PUBLIC","18c, merge, online",6,"","GAD3PVUACNMLTBK59RKULH67Z",10069822,8,,,"","","","","","","","","","","","","","",,"",03-DEC-20 05.09.47.543467000 PM,17-FEB-18 09.48.47.729700000 AM,"","",,,"","","",40,""
134779683243685169179495318488756272509,17-FEB-18 09.50.45.775062000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","18c character encoding validation","18C CHARACTER ENCODING VALIDATION","New routines in UTL_I18N allow for validation of characters within a particular characterset","",134779683243368430614756285644983254397,"","","",04-APR-24 10.47.59.510426000 AM,"PUBLIC","18c, validation",7,"","GAD3PVUAKJZHS7RPFWWWARITR",10069846,333804701807972275005933417866206051852,,,"","","","","","","","","","","","","","",,"",08-NOV-22 11.59.15.786389000 AM,17-FEB-18 09.50.45.779244000 AM,"","",,,"","","",28,""
134779683244235230427419974763247582589,17-FEB-18 09.54.55.294480000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","18c private temporary tables","18C PRIVATE TEMPORARY TABLES","
18c private temporary tables","",134779683243368430614756285644983254397,"","","",04-APR-24 11.37.17.405793000 AM,"PUBLIC","18c, private, temporary, tables",33,"","GAD3PVUCHN39SACU6PLA6R3DB",10069869,1,,,"","","","","","","","","","","","","","",,"",22-MAR-22 06.34.31.703419000 PM,17-FEB-18 09.54.55.312189000 AM,"","",,,"","","",103,""
135373957773674418657472313720579040947,23-FEB-18 01.31.51.037483000 AM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","18c Replicate Polymorphic Table Function Example","18C REPLICATE POLYMORPHIC TABLE FUNCTION EXAMPLE","This example creates a Polymorphic Table Function (PTF) that replicates each input row by the replication_factor that is given as a parameter. ","",115666457473617,"","","",04-APR-24 06.05.29.033451000 AM,"PUBLIC","18c ARPLS",5,"","GC51C2IW9AN8N93OYJAW2GNXI",10187607,4,,,"","","","","","","","","","","","","","",135355278221899347711766874504565651066,"ptfrepl",07-MAY-19 06.14.52.358396000 AM,23-FEB-18 01.45.19.461029000 AM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/arpls/DBMS_TF.html#GUID-F0B21736-CDE8-45CD-B250-64984E1CDE20","",,,"","","",23,""
136512139602668398237248241459637581565,05-MAR-18 11.19.40.030531000 PM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","18c Echo Polymorphic Table Function","18C ECHO POLYMORPHIC TABLE FUNCTION","This PTF returns all the columns in the input table tab, and adds to it the columns listed in cols but with the column names changed with the additional prefix of ""ECHO_"".       ","",13943384983874,"","","",10-JUN-24 07.06.41.343106000 AM,"PUBLIC","18c ARPLS",37,"","GC53R1419BW5IC66Y6F3YIOPB",10429380,4,,,"","","","","","","","","","","","","","",135355278221899347711766874504565651066,"ptfecho",12-DEC-23 02.31.41.296916000 PM,05-MAR-18 11.29.47.251014000 PM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/arpls/DBMS_TF.html#GUID-0F66E239-DE77-4C0E-AC76-D5B632AB8072","",,,"","","",276,"N"
135656623045936526316279716007623057766,25-FEB-18 07.07.29.874609000 PM,"",,"RAEESGILLANI@GMAIL.COM","What cities have the most customers?","WHAT CITIES HAVE THE MOST CUSTOMERS?","What cities have the most customers? - Query returns the top 10 cities which have the most customers","",135656623045280079596228972365757604198,"","","",03-JUL-24 11.30.51.592365000 PM,"PUBLIC","",17,"","GBSP0AGA0G1A2MU174CZY3ZLK",10247342,3,,,"","","","","","","","","","","","","","",,"",22-MAY-23 06.32.19.951707000 PM,25-FEB-18 07.07.29.988303000 PM,"","APPROVED",15-JUN-18 01.34.40.075230000 AM,19-JUN-18 04.13.50.073756000 PM,"sharon.kennedy@oracle.com","","",82,""
135368040091869012369055071550837685041,23-FEB-18 12.07.09.385859000 AM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","18c Stack Polymorphic Table Function Example","18C STACK POLYMORPHIC TABLE FUNCTION EXAMPLE","The stack PTF example unpivots the non-null values of the specified numeric columns by converting each column value into a new row.","",14033345298483,"","","",21-MAY-24 03.46.44.339219000 AM,"PUBLIC","18c ARPLS",13,"","GC51C2JK53789X9GIHQ497BB6",10186522,4,,,"","","","","","","","","","","","","","",135355278221899347711766874504565651066,"ptfstack",09-MAY-24 08.14.51.632305000 AM,23-FEB-18 12.30.59.528771000 AM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/arpls/DBMS_TF.html#GUID-218BB245-0878-4139-9E8C-1231A52F7E40","",,,"","","",62,""
134962721185655032736992445881641608287,19-FEB-18 02.59.44.975070000 AM,"",,"TYSON.JOUGLET@GMAIL.COM","Max User Action","MAX USER ACTION","Get max value from part of a character string","",134955187541440398898083697540784200802,"","","",16-DEC-23 02.22.28.791121000 PM,"PUBLIC","",1,"","GAON2NBUQJJF8TC7T6FREJA3L",18208605,1,,,"","","","","","","","","","","","","","",,"",02-NOV-18 03.42.07.479080000 PM,02-NOV-18 03.42.12.295907000 PM,"","APPROVED",15-JUN-18 01.34.40.105475000 AM,18-JUN-18 04.26.50.106919000 PM,"sharon.kennedy@oracle.com","","",23,""
135255222718418612783472287888490399271,21-FEB-18 10.14.14.989697000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Fine Grained Dependency and Select *","FINE GRAINED DEPENDENCY AND SELECT *","As of Oracle Database 11g, the Oracle Database tracks dependencies down to the sub-object level (columns in tables, parameters in subprograms). If you make sure to qualify references to all column and variable names in your SQL statements inside PL/SQL program units, those units will be invalidated less frequently as a result of changes to dependent objects. For example, if you add a column to a table, why should a program that obviously never used that new column be marked INVALID? No reason - unless you use SELECT * or %ROWTYPE for that table, as this script shows.","",135248668704585315742979559467502066795,"","","",19-JUN-24 04.38.16.829307000 AM,"PUBLIC","dependency,invalidation",6,"","GA5JV67TF6CFWA1H75FZ1RSMX",10146227,4,,,"","","","","","","","","","","","","","",,"",09-MAR-21 05.27.58.316792000 PM,21-FEB-18 10.14.14.996344000 PM,"","",,,"","","",25,""
136042102679946119619758887002746679114,01-MAR-18 11.09.06.159706000 AM,"",,"CHRIS.SAXON@ORACLE.COM","TO_CHAR Day Format Masks","TO_CHAR DAY FORMAT MASKS","Examples of how you can use to_char to extract day-of-week from a date.","",136042102679327149600116196865297117002,"","","",20-AUG-24 06.04.07.301786000 PM,"PUBLIC","to_char",43,"","GCKQ9IXBOEQXI2R1R5C06UO3J",10346857,1,,,"","","","","","","","","","","","","","",,"",15-FEB-24 05.24.23.687293000 AM,01-MAR-18 11.20.29.944013000 AM,"","",,,"","","",194,""
135656411669487834664150360695793023474,25-FEB-18 06.32.01.085452000 PM,"",,"MUTHUKUMARAN.1982@GMAIL.COM","Oracle 18c - JSON Enhancments","ORACLE 18C - JSON ENHANCMENTS","I was very excited when I come to know that Oracle 12c is going to support JSON. But the features supported was very limited. As part of 18c, Oracle has improved JSON support a lot.","",135656029747904188108443500841863494155,"","","",03-APR-24 02.41.15.811937000 PM,"PUBLIC","JSON",11,"","GBSR8H2AQBYQXI2JB3MOQ6DA4",10247339,4,,,"","","","","","","","","","","","","","",,"",20-JUN-18 05.01.38.927361000 AM,25-FEB-18 07.07.27.240655000 PM,"","APPROVED",15-JUN-18 01.34.40.184706000 AM,20-JUN-18 02.05.31.884094000 PM,"sharon.kennedy@oracle.com","","",25,""
135372603564899833795604531339313560378,23-FEB-18 01.09.41.726633000 AM,"",,"SARAH.HIRSCHFELD@ORACLE.COM","18c Split Polymorphic Table Function Example","18C SPLIT POLYMORPHIC TABLE FUNCTION EXAMPLE","The split Polymorphic Table Function (PTF) example splits each row of the input table into specified pieces.","",115666457473617,"","","",15-AUG-24 04.58.19.808339000 AM,"PUBLIC","18c ARPLS",3,"","GC51C2JK3DSPV44FEZAIJGJR6",10187143,4,,,"","","","","","","","","","","","","","",135355278221899347711766874504565651066,"ptfsplit",25-OCT-18 03.06.23.651867000 AM,23-FEB-18 01.15.03.101278000 AM,"https://docs.oracle.com/en/database/oracle/oracle-database/18/arpls/DBMS_TF.html#GUID-73409F70-2C85-4200-A280-76A2E7179B67","",,,"","","",23,""
135404584012048202754145896326411089265,23-FEB-18 08.41.54.966526000 AM,"",,"ANDRIY_DMYTRENKO@EPAM.COM","Multitable insert with sequences","MULTITABLE INSERT WITH SEQUENCES","Multitable insert with sequences","",135400169146152501557347252775733220024,"","","",09-AUG-24 02.55.05.339851000 PM,"PUBLIC","",14,"","GU6SSLFUT4PC7YUUB7WE1P8LW",13689196,1,,,"","","","","","","","","","","","","","",,"",15-MAR-24 02.21.35.599549000 PM,21-JUN-18 05.44.44.774403000 AM,"","APPROVED",21-JUN-18 05.44.44.707704000 AM,21-JUN-18 01.17.05.589473000 PM,"sharon.kennedy@oracle.com","Can you please remove the statements that end in error and those which are duplicates.","",69,""
134796472399222581726334733443727664771,17-FEB-18 03.41.57.712199000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Qualified Expressions for Associative Arrays (aka, collection constructors) ","QUALIFIED EXPRESSIONS FOR ASSOCIATIVE ARRAYS (AKA, COLLECTION CONSTRUCTORS) ","Aggregates and their necessary adjunct, qualified expressions, improve program clarity and programmer productivity. Through Oracle Database 12c release 2, it was possible to supply the value of a non-scalar datatype with an expression, for example by using the type constructor for a nested table. Starting with Oracle Database Release 18c, any PL/SQL value can be provided by an expression (for example for a record or for an associative array) like a constructor provides an abstract datatype value. In PL/SQL, we use the terms ""qualified expression"" and ""aggregate"" rather than the SQL term ""type constructor"", but the functionality is the same. Qualified expressions improve program clarity and developer productivity by providing the ability to declare and define a complex value in a compact form where the value is needed. A qualified expression combines expression elements to create values of a RECORD type or associative array type. Qualified expressions use an explicit type indication to provide the type of the qualified item. This explicit indication is known as a typemark. ","",103877073819462,"","","",27-JUN-24 07.44.12.088535000 PM,"PUBLIC","18c,collection,array,initialize,constructor",10,"","GAFD225JG2TIDEN5HO195RSGI",14949015,4,,,"","","","","","","","","","","","","","",,"",08-SEP-21 04.24.30.654700000 PM,13-AUG-18 04.28.12.523256000 PM,"","APPROVED",13-AUG-18 04.24.34.385166000 PM,,"Auto Approved","","",72,""
135003299031615976795923449618790908896,19-FEB-18 12.45.56.642356000 PM,"",,"ANDYSAYER@GMAIL.COM","18c Private Temporary Tables, memory or disk?","18C PRIVATE TEMPORARY TABLES, MEMORY OR DISK?","Quick demo to show whether new private temporary tables use memory or disk.","",135003299031173509945944495340848448480,"","","",10-MAY-24 02.06.16.611384000 AM,"PUBLIC","18c, private gtt, gtt memory",36,"","GAQ0D7IZSKNW06JNK80YB9X0I",10095884,15,,,"","","","","","","","","","","","","","",,"",26-DEC-22 02.04.08.781558000 PM,19-FEB-18 12.45.56.658368000 PM,"","APPROVED",15-JUN-18 01.34.40.334324000 AM,15-JUN-18 05.03.44.300846000 PM,"sharon.kennedy@oracle.com","","",144,""
135003299032631474484399738125544096736,19-FEB-18 12.59.30.616168000 PM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","mimic dbms_xplan routines in livesql","MIMIC DBMS_XPLAN ROUTINES IN LIVESQL","Mimic dbms_xplan routines in livesql using queries against the underlying V$ views","",134994403350601117615744856552479955289,"","","",19-JAN-23 01.16.17.501929000 PM,"PUBLIC","18c, dbms_xplan, execution plan",1,"","GAQ0D7I3B541LMEES6K3OAZXU",10096127,1,,,"","","","","","","","","","","","","","",,"",19-FEB-18 01.03.24.568383000 PM,19-FEB-18 12.59.30.646719000 PM,"","",,,"","","",14,""
144708035169735783895950608925748687048,23-MAY-18 10.16.01.543133000 AM,"",,"RAMI@SRACO.COM.SA","first number before dot","FIRST NUMBER BEFORE DOT","get string before first dot","",144708035169391240037360439610957426888,"","","",18-MAY-24 10.46.27.665469000 PM,"PUBLIC","",,"","GQA6XCQ39EZCZZRZTBU93U1O6",12839416,1,,,"","","","","","","","","","","","","","",,"",,23-MAY-18 10.16.01.564297000 AM,"","APPROVED",15-JUN-18 01.34.42.922533000 AM,18-JUN-18 03.04.27.818697000 PM,"sharon.kennedy@oracle.com","","",17,""
145001715991492676409217107224244808492,26-MAY-18 06.16.08.175859000 AM,"",,"KAUSHIKJNAYAK@GMAIL.COM","Currently Executing Procedure Name within the Package in Oracle Ask Question","CURRENTLY EXECUTING PROCEDURE NAME WITHIN THE PACKAGE IN ORACLE ASK QUESTION","Answer to this StackOverflow question :https://stackoverflow.com/questions/50536323/currently-executing-procedure-name-within-the-package-in-oracle","",145001715991473333596103273157449509676,"","","",31-MAY-24 05.44.12.332491000 PM,"PUBLIC","",34,"","GQR464K1E7UMMK5WOR5YKYYL6",12941332,6,,,"","","","","","","","","","","","","","",,"",31-MAY-24 05.43.52.791978000 PM,26-MAY-18 06.16.08.187177000 AM,"","APPROVED",15-JUN-18 01.34.42.938704000 AM,18-JUN-18 03.13.54.716134000 PM,"sharon.kennedy@oracle.com","","",107,""
143789197914992009080223102818174403675,14-MAY-18 06.14.28.976801000 PM,"",,"TYSON.JOUGLET@GMAIL.COM","Listagg Weekdays","LISTAGG WEEKDAYS","group days by day type","",143800245910934212698113628665096710736,"","","",02-JUL-24 03.58.01.434916000 AM,"PUBLIC","",7,"","GOT5KN3ZY8QB88C906NTEOCTP",12603902,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",01-JUN-20 04.37.57.787199000 AM,15-MAY-18 02.01.11.862822000 AM,"","APPROVED",15-JUN-18 01.34.42.942771000 AM,18-JUN-18 03.08.12.807391000 PM,"sharon.kennedy@oracle.com","","",95,""
146036863000198783979552832221648583752,05-JUN-18 04.02.49.099734000 AM,"",,"OREN@DB-ORIENTED.COM","Wrong Results with IOT, Added Column and Secondary Index","WRONG RESULTS WITH IOT, ADDED COLUMN AND SECONDARY INDEX","This is a reproducible example of a bug. For more details see http://db-oriented.com/2018/06/05/wrong-results-with-iot-added-column-and-secondary-index/","",146036862999629379918514341880361974856,"","","",10-MAR-24 05.51.01.793167000 PM,"PUBLIC","IOT Bug",3,"","GSFV8Q01J41VLEU4EMJ876FOA",13180833,1,,,"","","","","","","","","","","","","","",,"",28-OCT-20 07.51.10.761976000 AM,05-JUN-18 05.30.38.236485000 AM,"","APPROVED",15-JUN-18 01.34.42.987380000 AM,18-JUN-18 03.03.07.946132000 PM,"sharon.kennedy@oracle.com","","",20,""
145565128117014700132745945459402270123,31-MAY-18 03.27.50.645747000 PM,"",,"REMCO.GORIS@CENTRIC.EU","Member_of_only_when_no_explicit_index.sql","MEMBER_OF_ONLY_WHEN_NO_EXPLICIT_INDEX.SQL","Using _member_ _of_ on a plsql table only works when you have not explicitly declared the table with an index;","",145565128115463648306180376228254246315,"","","",04-APR-24 06.15.05.471174000 AM,"PUBLIC","member",3,"","GRONY1SRE35G30EPYMV650D9P",13090584,4,,,"","","","","","","","","","","","","","",,"",30-MAY-22 06.14.14.236302000 AM,31-MAY-18 03.27.50.731910000 PM,"","APPROVED",15-JUN-18 01.34.43.003039000 AM,18-JUN-18 03.06.02.144461000 PM,"sharon.kennedy@oracle.com","","",8,""
145548212105869103551536464753266033825,31-MAY-18 11.46.40.151836000 AM,"",,"PEKKATAPIOVENALAINEN@GMAIL.COM","add_date trigger","ADD_DATE TRIGGER","trigger which add date","",145536076119261884759974091630482052801,"","","",30-JUL-24 05.54.30.107223000 AM,"PUBLIC","",39,"","GRNOTLAD7GB4KG8K8BO20SOXF",13085861,5,,,"","","","","","","","","","","","","","",,"",30-JUL-24 05.53.32.026814000 AM,31-MAY-18 11.46.40.244491000 AM,"","APPROVED",15-JUN-18 01.34.43.019164000 AM,18-JUN-18 03.01.24.762776000 PM,"sharon.kennedy@oracle.com","","",255,""
146074894291363541173480019740855122086,05-JUN-18 01.24.54.571884000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","A-B Testing with Conditional Compilation","A-B TESTING WITH CONDITIONAL COMPILATION","Avoid lots of repetitive code in your A-B testing scripts through the use of conditional compilation. ","",15258477103598,"","","",04-APR-24 06.25.42.803132000 AM,"PUBLIC","conditional compilation,test",2,"","GSH51IPWTZCOV7KX3ITVWXHK3",13191884,4,,,"","","","","","","","","","","","","","",,"",11-JAN-19 08.13.42.439646000 AM,05-JUN-18 01.25.26.977133000 PM,"","",,,"","","",16,""
144517554151982576073298723233636068212,21-MAY-18 02.42.24.168486000 PM,"",,"ZHILKEVICH@GMAIL.COM","Compare 2 tables","COMPARE 2 TABLES","Compare 2 emp tables: show only the differences in column values","",144517554151315249020871447929198259060,"","","",24-JUN-24 12.34.25.450784000 PM,"PUBLIC","Compare tables;",17,"","GPZ63SBFX0NGPDHSQEDC2QKF6",12786661,3,,,"","","","","","","","","","","","","","",,"",28-MAY-23 09.51.00.903137000 PM,21-MAY-18 02.42.24.187813000 PM,"","APPROVED",15-JUN-18 01.34.43.046244000 AM,18-JUN-18 03.06.52.646950000 PM,"sharon.kennedy@oracle.com","","",107,""
237458161302723032853135029144174375036,27-OCT-20 01.01.48.562294000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][18c]qualified expressions AA and RECORD","[ACOLLECTIONISACOLLECTION][18C]QUALIFIED EXPRESSIONS AA AND RECORD","Demo script displaying how much easier and readable the use of Qualified Expressions is compared to the 'old' way, including the use of Qualified Expressions for records.","",5812517918437,"","","",21-AUG-24 11.23.10.291838000 AM,"PUBLIC","Collections Oracle18c Presentation Patrick Barel Patch72",1,"","KXQK5QXVNXKT2GKT6KDPVND7G",65600573,4,,,"","","","","","","","","","","","","","",,"",28-OCT-20 05.04.04.639869000 AM,12-NOV-20 02.46.41.237362000 PM,"","APPROVED",12-NOV-20 02.46.41.235133000 PM,,"Auto Approved","","",5,""
237472523262419614908023472109663159483,27-OCT-20 01.02.59.428038000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][18c]qualified expressions AA","[ACOLLECTIONISACOLLECTION][18C]QUALIFIED EXPRESSIONS AA","Demo script displaying how much easier and readable the use of Qualified Expressions is compared to the 'old' way.","",5812517918437,"","","",04-APR-24 06.28.33.419694000 AM,"PUBLIC","Collections Oracle18c Presentation Patrick Barel Patch72",1,"","KXQNJVM8XO7HBJJGI8QV6CWUM",65600697,4,,,"","","","","","","","","","","","","","",,"",28-OCT-20 05.04.26.171936000 AM,12-NOV-20 02.46.53.733694000 PM,"","APPROVED",12-NOV-20 02.46.53.733100000 PM,,"Auto Approved","","",9,""
235850408471769526322266321504545952075,12-OCT-20 12.11.26.610674000 AM,"",,"DHURLEY@IMPLESTRAT.COM","KSCOPE JSON SQL and PLSQL","KSCOPE JSON SQL AND PLSQL","JSON_VALUE
","",235847114600974367012140993236309814107,"","","",11-JUL-24 11.56.02.211734000 PM,"PUBLIC","",34,"","KSSDI8Z2O5P9XPKXUCUNSMG6O",63570315,13,,,"","","","","","","","","","","","","","",,"",04-JUN-21 04.13.43.351347000 PM,14-OCT-20 02.04.15.915434000 AM,"","APPROVED",14-OCT-20 01.33.56.151548000 AM,,"Auto Approved","","",21,""
235883404249478716987509393585859127698,12-OCT-20 07.53.26.277945000 AM,"",,"ANDREJ.PASHCHENKO@TRIVADIS.COM","Building Hash Keys with SQL macro","BUILDING HASH KEYS WITH SQL MACRO","An example how to build hash keys for arbitrary table using SQL macro function. Hash keys are used in Data Vault 2.0 modelling approach. Two hash keys are added dynamically to the query result: one for the table key columns (given via parameter) and another for all table columns (used e.g. for comparing rows) ","",235877995871809739278930403180851942818,"","","",28-MAY-24 12.53.24.656403000 PM,"PUBLIC","SQL macros",3,"","KSIQL3B8LP80EOHPN3GMH5501",63272917,1,,,"","","","","","","","","","","","","","",,"",13-AUG-22 12.31.11.639338000 AM,12-OCT-20 07.53.26.283692000 AM,"","APPROVED",12-OCT-20 07.53.26.277705000 AM,12-OCT-20 10.58.43.604399000 AM,"sharon.kennedy@oracle.com","","",40,""
237469428252022351307329606912444096313,27-OCT-20 12.44.20.615671000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][8i]Fill collection from table with bulk collect","[ACOLLECTIONISACOLLECTION][8I]FILL COLLECTION FROM TABLE WITH BULK COLLECT","Fill a collection from a table using BULK COLLECT to get all data in one pass.","",5812517918437,"","","",04-APR-24 06.26.02.349931000 AM,"PUBLIC","Collections Oracle8i Presentation Patrick Barel Patch72",1,"","KXPK2XFSB25Q7I8W0YT7WYYYS",65598405,4,,,"","","","","","","","","","","","","","",,"",28-OCT-20 04.55.05.386034000 AM,12-NOV-20 10.39.25.376637000 AM,"","APPROVED",12-NOV-20 10.39.25.375605000 AM,,"Auto Approved","","",9,""
237466459597868087294985357359315591742,27-OCT-20 12.50.12.451943000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][9i]Create a collection -AssociativeArray","[ACOLLECTIONISACOLLECTION][9I]CREATE A COLLECTION -ASSOCIATIVEARRAY","Create an Associative Array.","",5812517918437,"","","",04-APR-24 06.25.55.406497000 AM,"PUBLIC","Collections Oracle9i Presentation Patrick Barel Patch72",1,"","KXQDI4A9VYFKWPF3JNZ7HNHH8",65599036,4,,,"","","","","","","","","","","","","","",,"",28-OCT-20 04.57.22.027365000 AM,12-NOV-20 02.41.47.106899000 PM,"","APPROVED",12-NOV-20 02.41.47.106299000 PM,,"Auto Approved","","",10,""
237472523261764377113792343096972412091,27-OCT-20 12.56.29.635450000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][10g]for loop timing","[ACOLLECTIONISACOLLECTION][10G]FOR LOOP TIMING","Script demonstrating how much time it takes to run through a cursor for loop when Oracle optimizes the loop using BULK COLLECT and LIMIT.","",5812517918437,"","","",04-APR-24 06.12.11.819597000 AM,"PUBLIC","Collections Oracle10g Presentation Patrick Barel Patch72",3,"","KXQPOQXHHMF67ILI8AP6AZDAJ",65599819,4,,,"","","","","","","","","","","","","","",,"",04-DEC-22 04.36.02.071389000 AM,12-NOV-20 02.45.07.497498000 PM,"","APPROVED",12-NOV-20 02.45.07.496878000 PM,,"Auto Approved","","",25,""
237470831133680249936529828150336196131,27-OCT-20 12.38.10.954138000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][8]Create a collection - NestedTable - Sparse","[ACOLLECTIONISACOLLECTION][8]CREATE A COLLECTION - NESTEDTABLE - SPARSE","Create a Nested Table. Make it sparse using deletions.","",5812517918437,"","","",07-JUL-24 11.00.34.462755000 PM,"PUBLIC","Collections Oracle8 Presentation Patrick Barel Patch72",1,"","KXPNLWA41T4T64LXCIULZ69US",65597745,4,,,"","","","","","","","","","","","","","",,"",28-OCT-20 04.52.12.820741000 AM,12-NOV-20 10.37.39.521113000 AM,"","APPROVED",12-NOV-20 10.37.39.520254000 AM,,"Auto Approved","","",11,""
237470831133793888963573603292758576675,27-OCT-20 12.43.23.566413000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][8i]Fill collection from table with bulk collect with limit","[ACOLLECTIONISACOLLECTION][8I]FILL COLLECTION FROM TABLE WITH BULK COLLECT WITH LIMIT","Fill a collection from a table using BULK COLLECT to get all data in one pass, using the LIMIT clause to watch out for memory issues.","",5812517918437,"","","",04-APR-24 06.25.58.959723000 AM,"PUBLIC","Collections Oracle8i Presentation Patrick Barel Patch72",1,"","KXPOIVQBR5BCK6EF5KORIGRD0",65598314,4,,,"","","","","","","","","","","","","","",,"",28-OCT-20 04.54.26.245226000 AM,12-NOV-20 10.39.03.038006000 AM,"","APPROVED",12-NOV-20 10.39.03.037303000 AM,,"Auto Approved","","",5,""
237471873613344307712924632633106415876,27-OCT-20 12.46.17.731011000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][8i]table function parameter","[ACOLLECTIONISACOLLECTION][8I]TABLE FUNCTION PARAMETER","Demo script displaying how to build and use a table function in Oracle 8i.","",5812517918437,"","","",16-MAY-24 06.39.50.858677000 AM,"PUBLIC","Collections Oracle8i Presentation Patrick Barel Patch72",2,"","KXPOVAOJA5SK7TOJZESYD9Q5X",65598613,4,,,"","","","","","","","","","","","","","",,"",16-MAY-24 06.39.50.858561000 AM,12-NOV-20 10.40.17.287233000 AM,"","APPROVED",12-NOV-20 10.40.17.286547000 AM,,"Auto Approved","","",5,""
237471873614943716572274787031242686724,27-OCT-20 12.58.28.590317000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][11g]Select from NT","[ACOLLECTIONISACOLLECTION][11G]SELECT FROM NT","Demo script displaying you have to create an object type for the Nested Table in Oracle 11g to be able to use it in a query.","",5812517918437,"","","",21-AUG-24 08.06.20.959766000 AM,"PUBLIC","Collections Oracle11g Presentation Patrick Barel Patch72",5,"","KXQM03MDI6S7CIAJZ9G6WLZYX",65600174,4,,,"","","","","","","","","","","","","","",,"",21-AUG-24 08.06.20.959603000 AM,12-NOV-20 02.45.49.499321000 PM,"","APPROVED",12-NOV-20 02.45.49.498626000 PM,,"Auto Approved","","",23,""
237471202419513564997516111975870553661,27-OCT-20 12.54.33.813489000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][9i]pipelined table function parameter","[ACOLLECTIONISACOLLECTION][9I]PIPELINED TABLE FUNCTION PARAMETER","Demo script displaying how to build and use a pipelined table function in Oracle 9i.","",5812517918437,"","","",04-APR-24 06.12.04.458654000 AM,"PUBLIC","Collections Oracle9i Presentation Patrick Barel Patch72",3,"","KXQM03MC59ZTTAOSTOANIBLUH",65599565,4,,,"","","","","","","","","","","","","","",,"",31-AUG-23 07.55.15.225511000 PM,12-NOV-20 02.44.26.690178000 PM,"","APPROVED",12-NOV-20 02.44.26.689300000 PM,,"Auto Approved","","",22,""
237471202424032529711235595830922239549,27-OCT-20 01.06.14.729125000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection]Setup Script for Oracle 9i and lower","[ACOLLECTIONISACOLLECTION]SETUP SCRIPT FOR ORACLE 9I AND LOWER","Create the tables used in the demo scripts for 'A Collection is a Collection, no matter how small' in Oracle 9i and lower.","",5812517918437,"","","",26-MAY-24 12.49.46.559781000 AM,"PUBLIC","Collections Setup <= 9i Presentation Patrick Barel Patch72",1,"","KXPKZ7BN38IXT430CANYNWZ9Y",65601057,4,,,"","","","","","","","","","","","","","",,"",28-OCT-20 04.50.31.918133000 AM,12-NOV-20 10.36.23.329179000 AM,"","APPROVED",12-NOV-20 10.36.23.328197000 AM,,"Auto Approved","","",19,""
237470477874937727281526187967734540455,27-OCT-20 12.32.36.426037000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][7]Create a collection","[ACOLLECTIONISACOLLECTION][7]CREATE A COLLECTION","Create a PLSQL Table in Oracle7.","",5812517918437,"","","",04-APR-24 06.28.29.368760000 AM,"PUBLIC","Collections Oracle7 Presentation Patrick Barel Patch72",1,"","KXPD4BJIJLAU0YUCKPDLAXJE3",65597172,4,,,"","","","","","","","","","","","","","",,"",28-OCT-20 04.51.10.659794000 AM,12-NOV-20 10.36.51.668805000 AM,"","APPROVED",12-NOV-20 10.36.51.668144000 AM,,"Auto Approved","","",5,""
237470611506435289602693914273444954753,27-OCT-20 12.53.26.438801000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][9i]for loop timing","[ACOLLECTIONISACOLLECTION][9I]FOR LOOP TIMING","Script demonstrating how much time it takes to run through a cursor for loop.","",5812517918437,"","","",04-APR-24 06.18.30.964807000 AM,"PUBLIC","Collections Oracle9i Presentation Patrick Barel Patch72",2,"","KXQM03MCS7PK7BGRKV26UJP6X",65599431,4,,,"","","","","","","","","","","","","","",,"",30-JUN-21 07.50.08.529896000 PM,12-NOV-20 02.43.45.903065000 PM,"","APPROVED",12-NOV-20 02.43.45.902409000 PM,,"Auto Approved","","",14,""
237472276380551348794866966868674627022,27-OCT-20 12.57.30.884426000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][10g]table function parameter","[ACOLLECTIONISACOLLECTION][10G]TABLE FUNCTION PARAMETER","Demo script displaying how to build and use a table function in Oracle 10g.","",5812517918437,"","","",03-APR-24 02.46.44.637303000 PM,"PUBLIC","Collections Oracle10g Presentation Patrick Barel Patch72",9,"","KXQKL4OJ0X9JLBRJWC27NCEN6",65599986,4,,,"","","","","","","","","","","","","","",,"",07-DEC-23 12.21.26.210768000 PM,12-NOV-20 02.45.32.755983000 PM,"","APPROVED",12-NOV-20 02.45.32.755427000 PM,,"Auto Approved","","",20,""
237472739095228446167415477958410395517,27-OCT-20 12.59.52.899046000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][11g]table function parameter","[ACOLLECTIONISACOLLECTION][11G]TABLE FUNCTION PARAMETER","Demo script displaying how to build and use a table function in Oracle 10g.","",5812517918437,"","","",04-APR-24 06.28.35.015661000 AM,"PUBLIC","Collections Oracle11g Presentation Patrick Barel Patch72",1,"","KXP930Z21E01IJAU6RGE58W8N",65600325,4,,,"","","","","","","","","","","","","","",,"",28-OCT-20 05.03.11.991838000 AM,12-NOV-20 02.46.12.391987000 PM,"","APPROVED",12-NOV-20 02.46.12.391313000 PM,,"Auto Approved","","",5,""
237468589853737177189531322589387591117,27-OCT-20 01.05.18.326239000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection]Setup Script","[ACOLLECTIONISACOLLECTION]SETUP SCRIPT","Create the tables used in the demo scripts for 'A Collection is a Collection, no matter how small'.","",5812517918437,"","","",04-APR-24 06.18.35.231952000 AM,"PUBLIC","Collections Setup Presentation Patrick Barel Patch72",2,"","KXO9CQ4JU6S8IRAYNU9Y5KAQA",65600971,4,,,"","","","","","","","","","","","","","",,"",02-DEC-20 05.42.04.291079000 AM,12-NOV-20 10.35.52.171419000 AM,"","APPROVED",12-NOV-20 10.35.52.170722000 AM,,"Auto Approved","","",11,""
237473001822418524924040845099618943458,27-OCT-20 01.00.51.699332000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][12c]Select from AA","[ACOLLECTIONISACOLLECTION][12C]SELECT FROM AA","Demo script displaying you don't have to create an object type for the Nested Table in Oracle 12c to be able to use it in a query. Also displays how you can even use an Associative Array.","",5812517918437,"","","",04-APR-24 06.05.34.418462000 AM,"PUBLIC","Collections Oracle12c Presentation Patrick Barel Patch72",4,"","KXQK3250KQ5TINUSMRDOPCBWV",65600445,4,,,"","","","","","","","","","","","","","",,"",08-JAN-22 06.14.24.600750000 PM,12-NOV-20 02.46.28.152530000 PM,"","APPROVED",12-NOV-20 02.46.28.151902000 PM,,"Auto Approved","","",17,""
237471655567368260472805460853698222072,27-OCT-20 12.42.18.103332000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][8i]Fetch from table bulk collect into associative arrays","[ACOLLECTIONISACOLLECTION][8I]FETCH FROM TABLE BULK COLLECT INTO ASSOCIATIVE ARRAYS","Fetch the data from a table, bulk collecting into separate index-by tables.","",5812517918437,"","","",06-MAY-24 10.15.23.555810000 PM,"PUBLIC","Collections Oracle8i Presentation Patrick Barel Patch72",1,"","KXPKVRZAIMMLSPTZLEGBWOHKV",65598179,4,,,"","","","","","","","","","","","","","",,"",28-OCT-20 04.54.02.996538000 AM,12-NOV-20 10.38.52.137685000 AM,"","APPROVED",12-NOV-20 10.38.52.137060000 AM,,"Auto Approved","","",14,""
237466918870161557577080589507522917665,27-OCT-20 12.40.23.884715000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][8]Create a collection -Index-By","[ACOLLECTIONISACOLLECTION][8]CREATE A COLLECTION -INDEX-BY","Create an Index-By table.","",5812517918437,"","","",04-APR-24 06.28.24.333761000 AM,"PUBLIC","Collections Oracle8 Presentation Patrick Barel Patch72",1,"","KXPLPAAD6V9KR1L5CMMUM2Z4F",65597988,4,,,"","","","","","","","","","","","","","",,"",28-OCT-20 04.53.07.702505000 AM,12-NOV-20 10.38.14.994111000 AM,"","APPROVED",12-NOV-20 10.38.14.993338000 AM,,"Auto Approved","","",4,""
237469309261064977326563787029428749339,27-OCT-20 12.36.58.507803000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][7]Fill collection from table","[ACOLLECTIONISACOLLECTION][7]FILL COLLECTION FROM TABLE","Create a PLSQL Table in Oracle7 using the data from a cursor.","",5812517918437,"","","",08-JUL-24 03.53.14.129079000 AM,"PUBLIC","Collections Oracle7 Presentation Patrick Barel Patch72",3,"","KXPK6LUUG7V9OJ25D68CFT78A",65597611,4,,,"","","","","","","","","","","","","","",,"",18-OCT-21 11.48.22.311619000 AM,12-NOV-20 10.37.19.388839000 AM,"","APPROVED",12-NOV-20 10.37.19.388144000 AM,,"Auto Approved","","",17,""
237467988753534866597603735646042252487,27-OCT-20 12.41.22.394131000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][8]Create a collection -VArray","[ACOLLECTIONISACOLLECTION][8]CREATE A COLLECTION -VARRAY","Create a Varray.","",5812517918437,"","","",04-APR-24 06.28.22.269195000 AM,"PUBLIC","Collections Oracle8 Presentation Patrick Barel Patch72",1,"","KXPC77NMR376168X5ZG21D0NK",65598067,4,,,"","","","","","","","","","","","","","",,"",28-OCT-20 04.53.28.882997000 AM,12-NOV-20 10.38.38.877086000 AM,"","APPROVED",12-NOV-20 10.38.38.876397000 AM,,"Auto Approved","","",14,""
237467988754680928274598404103663707335,27-OCT-20 12.52.32.451776000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][9i]Fetch from table bulk collect into associative array","[ACOLLECTIONISACOLLECTION][9I]FETCH FROM TABLE BULK COLLECT INTO ASSOCIATIVE ARRAY","Fetch the data from a table, bulk collecting into an Associative Array of records.","",5812517918437,"","","",04-APR-24 06.25.53.505517000 AM,"PUBLIC","Collections Oracle9i Presentation Patrick Barel Patch72",1,"","KXQM03MCN683NZ1JKF8O5INN9",65599320,4,,,"","","","","","","","","","","","","","",,"",28-OCT-20 04.58.14.272410000 AM,12-NOV-20 02.43.18.910084000 PM,"","APPROVED",12-NOV-20 02.43.18.909387000 PM,,"Auto Approved","","",13,""
237471994302987529553512383290068848686,27-OCT-20 12.55.24.399784000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][10g]bulk collect timing","[ACOLLECTIONISACOLLECTION][10G]BULK COLLECT TIMING","Script demonstrating how much time is takes to run through a cursor using a simple loop and BULK COLLECT with the LIMIT clause. How this can still be faster than the optimized code.","",5812517918437,"","","",04-APR-24 06.12.14.438147000 AM,"PUBLIC","Collections Oracle10g Presentation Patrick Barel Patch72",3,"","KXQDI4BAF5QD4QQ9NME3I8830",65599698,4,,,"","","","","","","","","","","","","","",,"",17-DEC-20 07.05.15.593077000 AM,12-NOV-20 02.44.42.047004000 PM,"","APPROVED",12-NOV-20 02.44.42.046287000 PM,,"Auto Approved","","",13,""
237463838016041432579153404775891652607,27-OCT-20 12.47.46.491154000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][9i]bulk collect timing","[ACOLLECTIONISACOLLECTION][9I]BULK COLLECT TIMING","Script demonstrating how much time is takes to run through a cursor using a simple loop and BULK COLLECT with the LIMIT clause.","",5812517918437,"","","",01-AUG-24 08.10.25.744332000 PM,"PUBLIC","Collections Oracle9i Presentation Patrick Barel Patch72",1,"","KXPLPF67QBVDGNAF7V8OQO7DR",65598763,4,,,"","","","","","","","","","","","","","",,"",28-OCT-20 04.56.36.010845000 AM,12-NOV-20 10.40.47.299465000 AM,"","APPROVED",12-NOV-20 10.40.47.298750000 AM,,"Auto Approved","","",15,""
237469559191807891534188267213031136812,27-OCT-20 12.39.16.017758000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][8]Create a collection - NestedTable","[ACOLLECTIONISACOLLECTION][8]CREATE A COLLECTION - NESTEDTABLE","Create a Nested Table.","",5812517918437,"","","",04-APR-24 06.28.27.701009000 AM,"PUBLIC","Collections Oracle8 Presentation Patrick Barel Patch72",1,"","KXPLPAADVCNYXQKWPSOML5ZRZ",65597884,4,,,"","","","","","","","","","","","","","",,"",28-OCT-20 04.52.37.750427000 AM,12-NOV-20 10.37.53.202319000 AM,"","APPROVED",12-NOV-20 10.37.53.201591000 AM,,"Auto Approved","","",9,""
237467182170360718667292676119444778481,27-OCT-20 12.45.27.850855000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][8i]Fill collection from table with bulk collect_1..count","[ACOLLECTIONISACOLLECTION][8I]FILL COLLECTION FROM TABLE WITH BULK COLLECT_1..COUNT","Fill a collection from a table using BULK COLLECT. Showing the collection is filled densely starting at index 1.","",5812517918437,"","","",04-APR-24 06.18.33.485028000 AM,"PUBLIC","Collections Oracle8i Presentation Patrick Barel Patch72",2,"","KXPK2XFSC5FSQWKVGB0ORDDOK",65598514,4,,,"","","","","","","","","","","","","","",,"",31-AUG-23 07.58.11.954926000 PM,12-NOV-20 10.39.37.918509000 AM,"","APPROVED",12-NOV-20 10.39.37.917885000 AM,,"Auto Approved","","",7,""
237468702228665463886852240277901079474,27-OCT-20 12.51.33.588154000 PM,"",,"PATRICK.BAREL@GMAIL.COM","[ACollectionIsACollection][9i]Create a collection -AssociativeArray-Varchar2","[ACOLLECTIONISACOLLECTION][9I]CREATE A COLLECTION -ASSOCIATIVEARRAY-VARCHAR2","Create an Associative Array using varchar2 as the index.","",5812517918437,"","","",04-APR-24 06.12.06.227517000 AM,"PUBLIC","Collections Oracle9i Presentation Patrick Barel Patch72",3,"","KXQLREBLHPDNFNCDZGACY2HES",65599201,4,,,"","","","","","","","","","","","","","",,"",29-JAN-23 06.19.38.125929000 PM,12-NOV-20 02.42.05.612633000 PM,"","APPROVED",12-NOV-20 02.42.05.611818000 PM,,"Auto Approved","","",14,""
142908574424028786170864982444424838242,06-MAY-18 05.34.49.247747000 AM,"",,"LAV_JAIN@HOTMAIL.COM","Group user sessions by time","GROUP USER SESSIONS BY TIME","Given a list of user_ids and log_dates, bucket the session into increments of 10 min (upto an hour). A lag of 30 min between log_dates indicates a new session.","",142908574422289141916439531062022650978,"","","",09-AUG-24 07.03.43.405282000 PM,"PUBLIC","user session, web log",10,"","GNFBMOYGUMMS5VNYJAHU9FU80",12342409,7,,,"","","","","","","","","","","","","","",,"",28-MAY-24 06.07.23.472348000 AM,06-MAY-18 05.34.49.284754000 AM,"","APPROVED",15-JUN-18 01.34.42.247424000 AM,15-JUN-18 05.57.46.691620000 PM,"sharon.kennedy@oracle.com","","",63,""
142201347231331749015238492116145174489,29-APR-18 01.39.04.663847000 PM,"",,"ANDYSAYER@GMAIL.COM","How large can an error stack be?","HOW LARGE CAN AN ERROR STACK BE?","A simple package to call a recursive procedure in order to generate a huge stack. This should demonstrate limits in size of error stacks using dbms_utility.format_error_stack","",142205509831074226158484824835891180216,"","","",23-JUL-24 02.55.41.069047000 PM,"PUBLIC","error stack dbms_utility format_error_stack",2,"","GMAHZ7DO8XJGHLNUL63KTEW53",12164640,4,,,"","","","","","","","","","","","","","",,"",14-FEB-23 11.54.53.348600000 PM,29-APR-18 01.39.04.707190000 PM,"","APPROVED",15-JUN-18 01.34.42.254703000 AM,18-JUN-18 03.47.20.872545000 PM,"sharon.kennedy@oracle.com","","",13,""
142660339958528707642774522742746919825,03-MAY-18 09.46.05.752731000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Emulating Exception Behavior of SELECT-INTO in Explicit Cursor","EMULATING EXCEPTION BEHAVIOR OF SELECT-INTO IN EXPLICIT CURSOR","A developer ""I am one of those that always does FOR LOOP when selecting multiple values from multiple tables. It was the way I was taught - even when the cursor is returning a single row. Do you have an example you can point me at that shows how I can use an explicit cursor, but also get the exception logic (TMR and NDF) of an implicit cursor?"" This question surfaced from our PL/SQL Office Hours - https://devgym.oracle.com/pls/apex/dg/office_hours/401 - and here's the eexample!","",110981989421798,"","","",04-APR-24 06.11.52.348885000 AM,"PUBLIC","explicit,implicit, no_data_found,too_many_rows",4,"","GM0BP3TNS054C3N1K7P2X519O",12286637,4,,,"","","","","","","","","","","","","","",,"",11-MAR-23 02.48.59.626398000 AM,03-MAY-18 09.47.02.057334000 PM,"","",,,"","","",50,""
142937335462353815949874260945314549820,06-MAY-18 05.42.18.542938000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Calculate Difference Between Two Dates","CALCULATE DIFFERENCE BETWEEN TWO DATES","It's easy to do date arithmetic in Oracle Database, but it can be hard to remember the formulas. Here's the code provided by Tom Kyte at https://asktom.oracle.com/Misc/DateDiff.html (plus my own update version of his correct, but dated function). Hope it comes in handy!","",103284329587435,"","","",03-JUL-24 06.06.45.077338000 PM,"PUBLIC","date,difference",49,"","GNIFI7GFH4KSSDD1K7LQRSFR4",12354981,4,,,"","","","","","","","","","","","","","",,"",12-APR-24 03.25.41.228206000 PM,06-MAY-18 05.42.48.517471000 PM,"","",,,"","","",329,""
142030208320897429040316939088505383669,27-APR-18 10.54.22.826019000 PM,"",,"MIDI13@163.COM","partition by range (departure_airport_code)","PARTITION BY RANGE (DEPARTURE_AIRPORT_CODE)","partition by range (departure_airport_code), update by interval","",140366239932578585910916745791462473703,"","","",06-JUN-24 03.21.21.294618000 PM,"PUBLIC","Partition, interval",2,"","GL0MDK6AUXCL0UHUQY0F30EW3",12137522,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",18-SEP-19 07.26.50.193051000 PM,27-APR-18 10.54.22.999258000 PM,"","APPROVED",15-JUN-18 01.34.42.361068000 AM,18-JUN-18 03.50.17.527152000 PM,"sharon.kennedy@oracle.com","","",49,""
141807984397207409648153277426972768633,25-APR-18 05.29.45.448619000 PM,"",,"GGUUIMARAES@HOTMAIL.COM","Employee and Department Salary Triggers","EMPLOYEE AND DEPARTMENT SALARY TRIGGERS","Script that updates the department's total salary column as employees are included, updated and deleted.

","",141806506142684814501687652668874190156,"","","",22-AUG-24 09.16.48.943662000 AM,"PUBLIC","employee department salary trigger funcionario departamento salario",405,"","GLNSLDW2FXNADW24U3KRK6TXN",12071144,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",13-AUG-24 09.12.06.133582000 AM,25-APR-18 05.29.45.545024000 PM,"","APPROVED",15-JUN-18 01.34.42.372206000 AM,18-JUN-18 02.48.58.073336000 PM,"sharon.kennedy@oracle.com","","",1538,""
143269355887432375884213997604162010483,09-MAY-18 04.31.35.709173000 PM,"",,"FEDECORALLO@GMAIL.COM","Obtener fecha y hora actual","OBTENER FECHA Y HORA ACTUAL","Obtener fecha y hora actual","",143269355885550078383074019979144494451,"","","",18-MAR-24 01.30.03.172859000 PM,"PUBLIC","Obtener fecha y hora actual",9,"","GNZ5B5I1FNHHKJYHC7T9DMKF5",12451507,1,,,"","","","","","","","","","","","","","",,"",25-OCT-23 08.44.20.893654000 PM,09-MAY-18 04.31.35.717330000 PM,"","APPROVED",15-JUN-18 01.34.42.383457000 AM,18-JUN-18 03.30.40.845492000 PM,"sharon.kennedy@oracle.com","","",35,""
142418207082527119596627118193510241880,01-MAY-18 12.40.17.053757000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Example of INSTEAD OF Triggers","EXAMPLE OF INSTEAD OF TRIGGERS","Darryl Hurley @implestrat originally wrote up this example for Oracle PL/SQL Programming (O'Reilly Media). ""Reprinted"" here with permission from O'Reilly. Demonstrates the use of INSTEAD OF triggers on a view to allow coding and execution of non-query DML on a view against mutliple tables.","",107184444350279,"","","",13-APR-24 06.10.47.083347000 AM,"PUBLIC","instead,trigger,view,dml",28,"","GMMYWH71ZJ14U5F3KRBVQ12EH",12211117,5,,,"","","","","","","","","","","","","","",,"",25-MAR-24 01.18.44.991094000 AM,01-MAY-18 12.42.04.999733000 PM,"","",,,"","","",162,""
142048933912176576489215946296652485141,27-APR-18 11.13.25.871410000 PM,"",,"MIDI13@163.COM","Sequence with insert","SEQUENCE WITH INSERT","Sequence with insert

INSERT INTO author
VALUES
  (author_seq.nextval, 'Stephen', 'King', 'stephen@king.com', NULL)
","",142030208319428584169485164641237379829,"","","",19-AUG-24 10.12.44.953064000 AM,"PUBLIC","",106,"","GL1PAE2CYR08NVOK69OWRX1EV",12137806,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",26-JUL-24 04.26.36.393588000 AM,27-APR-18 11.13.25.988371000 PM,"","APPROVED",15-JUN-18 01.34.42.394532000 AM,18-JUN-18 03.19.28.516993000 PM,"sharon.kennedy@oracle.com","","",782,""
142814818255572802498016308012008630613,05-MAY-18 08.29.45.033292000 AM,"",,"RSUNDARAM","Days within range of Dates","DAYS WITHIN RANGE OF DATES","Generate Days within range of Dates","",142814818253464435868608394731321059669,"","","",12-FEB-23 03.03.15.844126000 AM,"PUBLIC","",3,"","GM9WSX7S6XBKU81WG904IK703",12322085,3,,,"","","","","","","","","","","","","","",,"",11-JAN-22 09.56.33.691946000 PM,05-MAY-18 08.29.45.035905000 AM,"","APPROVED",15-JUN-18 01.34.42.415976000 AM,18-JUN-18 03.23.13.724907000 PM,"sharon.kennedy@oracle.com","","",35,""
143494718628488481303967011875463107470,11-MAY-18 07.42.00.719429000 PM,"",,"BEDA.HAMMERSCHMIDT@ORACLE.COM","Using JSON for Flexfields","USING JSON FOR FLEXFIELDS","This script, provided by Beda Hammerschmidt, developer of Oracle Database JSON features, demonstrates how to use a JSON column to implement flexfields. This was the topic of his May JSON Office Hours session: https://devgym.oracle.com/pls/apex/dg/office_hours/3845","",101692895774819,"","","",28-JUN-24 05.56.51.204482000 PM,"PUBLIC","flex,flexfield,12c",17,"","GOC5M5XNK0B0E99W595I65DSW",12588157,13,,,"","","","","","","","","","","","","","",,"",07-APR-21 04.44.02.726338000 PM,14-MAY-18 03.05.25.741030000 PM,"","",,,"","","",38,""
142200785235143420176178878923320127688,29-APR-18 11.04.30.514970000 AM,"",,"SAROZ@LIVE.IN","query to find employee based on salary","QUERY TO FIND EMPLOYEE BASED ON SALARY","query to find employee based on salary","",142190693437847913552100720266414176792,"","","",25-JUN-24 12.19.40.676751000 AM,"PUBLIC","highest paid employee",70,"","GMAGT5U9Q7DKPZK0SREHO06QI",12162355,3,,,"","","","","","","","","","","","","","",,"",25-JUN-24 12.19.40.676635000 AM,29-APR-18 11.04.30.681224000 AM,"","APPROVED",15-JUN-18 01.34.42.490894000 AM,18-JUN-18 02.49.18.426526000 PM,"sharon.kennedy@oracle.com","","",205,""
142023066171780908717633443328389029467,27-APR-18 06.33.50.075245000 PM,"",,"SDSTUBER@AEP.COM","BUG-to_utc_timestamp_tz","BUG-TO_UTC_TIMESTAMP_TZ","Per documentation, the to_utc_timestamp_tz function should ""normalizes the input to UTC time (Coordinated Universal Time, formerly Greenwich Mean Time).""

i.e. the function should return a value with offset +00:00 but it doesn't do so if a non-UTC timezone is given, instead it preserves the input time zone.  This is either a functional bug, or a documentation bug.","",142023066170582863230395345816255209051,"","","",29-JUL-24 07.27.59.875340000 AM,"PUBLIC","SQL JSON to_utc_timestamp_tz bug",4,"","GLZV56MOUESKFBSSFXY83S5A0",12134351,13,,,"","","","","","","","","","","","","","",,"",29-SEP-21 06.13.14.824382000 PM,27-APR-18 06.39.14.963151000 PM,"","APPROVED",15-JUN-18 01.34.42.520453000 AM,18-JUN-18 03.50.59.212124000 PM,"sharon.kennedy@oracle.com","","",24,""
144117275265724719871658275345147926605,17-MAY-18 06.40.58.085215000 PM,"",,"SVEN.WELLER@SYNTEGRIS.DE","IDENTIFY_MODULE - find module (procedure or function) name based upon line number using PL/SCOPE","IDENTIFY_MODULE - FIND MODULE (PROCEDURE OR FUNCTION) NAME BASED UPON LINE NUMBER USING PL/SCOPE","Demo of a function IDENTIFY_MODULE to fetch submodule name in a package body based upon line number using PL/SCOPE. 
More information about this: https://svenweller.wordpress.com/plscope-fetch-module-name-from-line-number
","",144114526070841769467741929600287801349,"","","",25-MAY-24 09.12.17.666495000 PM,"PUBLIC","PL/SCOPE, package body, name of submodule, plsql ",8,"","GPC7E33MG0E2QG4KPBSEWOB0I",12699606,6,,,"","","","","","","","","","","","","","",,"",09-SEP-22 02.29.30.106044000 PM,17-MAY-18 08.15.31.302414000 PM,"","APPROVED",15-JUN-18 01.34.42.567966000 AM,18-JUN-18 03.23.21.360079000 PM,"sharon.kennedy@oracle.com","","",24,""
142357521600413535591231881817858281315,30-APR-18 10.44.37.725189000 PM,"",,"BOOBALGANESAN1989@GMAIL.COM","2018 Oracle SQL Puzzle of the Week #15 - Final","2018 ORACLE SQL PUZZLE OF THE WEEK #15 - FINAL","For a given 800 phone number (like 1-800-123-4567) find all number-letter representations. Use a single SELECT statement only. Only last 4 digits of the phone number have to be replaced with letters. Exactly 1 letter (out of 4) must be vowel, the rest – consonant The following table shows all possible mappings","",142352657028440814539776825751260370700,"","","",04-APR-24 06.38.31.307693000 AM,"PUBLIC","",7,"","GMJIJCKUSCA02RT6PFTVP8BUD",12199282,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",15-NOV-23 03.20.15.003430000 AM,30-APR-18 10.44.37.753601000 PM,"","APPROVED",15-JUN-18 01.34.42.583078000 AM,15-JUN-18 05.11.04.242295000 PM,"sharon.kennedy@oracle.com","","",56,""
142017597372958972753163474202633482890,27-APR-18 07.02.25.430878000 PM,"",,"MIDI13@163.COM","Min max salary for each department","MIN MAX SALARY FOR EACH DEPARTMENT","Min max salary for each department., which min salary less than 5000","",142028971866691424132958630039660561300,"","","",18-AUG-24 11.15.44.871492000 AM,"PUBLIC","Having, Max",9,"","GLZV56MPEW03SWCIOAFZODVY0",12134882,3,,,"","","","","","","","","","","","","","",,"",23-APR-24 07.54.44.285368000 AM,27-APR-18 07.02.25.577620000 PM,"","APPROVED",15-JUN-18 01.34.42.660973000 AM,18-JUN-18 03.50.25.691457000 PM,"sharon.kennedy@oracle.com","","",125,""
151580100336962606985660497606124273866,28-JUL-18 07.16.38.445489000 AM,"",,"ASHISH1234U@GMAIL.COM","AH_XMLParsingError","AH_XMLPARSINGERROR","Error Encountered while using EXTRACTVALUE function on a CLOB TYPE field","",151580100336792148445094834892490703050,"","","",09-JAN-23 03.38.33.530972000 AM,"PUBLIC","SQL, XML, ORA - 06512",3,"","G1M5T5FBV4LY319J8WFZ12D7H",14597206,12,,,"","","","","","","","","","","","","","",,"",18-MAY-22 11.33.08.863127000 AM,28-JUL-18 07.16.38.449951000 AM,"","APPROVED",28-JUL-18 07.16.38.445185000 AM,30-JUL-18 02.11.41.261910000 AM,"sharon.kennedy@oracle.com","","",30,""
151209452387487709736446937601881701457,24-JUL-18 04.39.46.520578000 PM,"",,"DAVID.SLEDGE@YAHOO.COM","more table() usage inconsistency","MORE TABLE() USAGE INCONSISTENCY","Extended test cases for the bug identified in Ask Tom:

https://asktom.oracle.com/pls/apex/asktom.search?tag=inconsistent-behavior-of-table-function

the table() function fails for UPDATE, INSERT, as well as DELETE.","",151209452386674102659846292167304445009,"","","",03-APR-24 02.50.09.528338000 PM,"PUBLIC","Ask-Tom, Bug",8,"","G0VU16RG95TFQTCBBUEL63EYF",14520251,6,,,"","","","","","","","","","","","","","",,"",13-DEC-22 12.54.52.992882000 AM,24-JUL-18 04.39.46.565335000 PM,"","APPROVED",24-JUL-18 04.39.46.520269000 PM,25-JUL-18 01.30.25.141773000 PM,"sharon.kennedy@oracle.com","","",29,""
150672503759210464041962959328854731912,19-JUL-18 01.20.01.220188000 PM,"",,"SHARON.KENNEDY@ORACLE.COM","Illustrating Rollback within Live SQL","ILLUSTRATING ROLLBACK WITHIN LIVE SQL","When you press [Run], all the statements are auto committed so the only way to illustrate rollback is within a transaction.  The first 5 statements were run as one transaction and then number 6 and 7 were each run separately.  That is why the rollback in #4 is respected while the one in #8 is not.

Please note that when you run this, the second rollback will be respected because we run a script as one transaction.  To replicate, you need to run 1-5 at once and then the rest, one statement at a time.","",150672503757862511753092647799057345672,"","","",22-AUG-24 08.06.50.173387000 AM,"PUBLIC","rollback",119,"","GZVG5BBC5O29K7B5DE6RO6WWQ",14420181,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",22-AUG-24 08.06.50.173244000 AM,19-JUL-18 01.29.01.164261000 PM,"","APPROVED",19-JUL-18 01.29.01.158979000 PM,,"Auto Approved","","",299,""
156151621386395322640044939043196913076,09-SEP-18 11.37.35.970753000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Is it a weekday?","IS IT A WEEKDAY?","An answer to this question on Stackoverflow: https://stackoverflow.com/questions/52247872/plsql-check-day-of-week","",156144092624753490333477389048377781016,"","","",03-APR-24 02.41.21.274603000 PM,"PUBLIC","",11,"","G8NQSY6NQAPISBKJ8YMOFJADI",15709513,4,,,"","","","","","","","","","","","","","",,"",11-MAR-24 06.37.24.934824000 PM,09-SEP-18 11.41.39.542558000 PM,"","APPROVED",09-SEP-18 11.37.35.963227000 PM,,"Auto Approved","","",38,""
155812441144105747104643144143657005152,06-SEP-18 05.41.29.814474000 PM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - 05 - Joins v2","DHBW DATENBANKEN UNIT 1 - 05 - JOINS V2","DHBW Datenbanken Unit 1","",155810073602415882008143526190339854818,"","","",21-JUL-24 06.56.45.233794000 AM,"PUBLIC","DHBW, Datenbanken, Vorlesung",266,"","G735ZGU19LZL0CSR2E1SJJH0I",15623070,3,,,"","","","","","","","","","","","","","",,"",17-DEC-23 02.16.51.606597000 PM,06-SEP-18 05.43.37.668000000 PM,"","APPROVED",06-SEP-18 05.41.29.814169000 PM,,"Auto Approved","","",583,""
155429436240619217047119248002154025700,03-SEP-18 02.13.21.263237000 AM,"",,"JEFFREY.KEMP@JK64.COM","Generating Anniversary Dates","GENERATING ANNIVERSARY DATES","How to generate anniversary dates correctly using ADD_MONTHS. This handles the edge case that ADD_MONTHS gives incorrect anniversary dates for events that fell on the 28th of February in a non-leap year; the anniversary would be expected to be celebrated on 28 February, even in leap years.

Example of using a With Clause Function. Also, an example of how to mix a CTE (common table expression) in a query with a With Clause Function (hint: you can't - you have to create a subquery for the CTE).

Full details: https://jeffkemponoracle.com/2018/09/many-happy-birthdays/","",155429436239986948843460796943782695652,"","","",16-AUG-24 08.02.31.286301000 PM,"PUBLIC","dates, add_months, leap years, anniversary",5,"","G7H13ICD1SG4E7EEV0TTJI42U",15501261,3,,,"","","","","","","","","","","","","","",,"",19-DEC-22 03.22.50.672002000 PM,03-SEP-18 02.13.21.267793000 AM,"","APPROVED",03-SEP-18 02.13.21.256210000 AM,,"Auto Approved","","",78,""
156319949498020882910032745930844556353,11-SEP-18 02.48.36.358374000 PM,"",,"BEDA.HAMMERSCHMIDT@ORACLE.COM","JSON Generation from relational data (AskTom Office hours, Sept 11th 2018)","JSON GENERATION FROM RELATIONAL DATA (ASKTOM OFFICE HOURS, SEPT 11TH 2018)","Demo for AskTom office hours Sept 11th 2018","",2620469776863,"","","",08-AUG-24 06.05.22.074859000 PM,"PUBLIC","JSON Generation, JSON_OBJECT, JSON_ARRAY, JSON_OBJECT_T",103,"","G8XKMGK6Y5A5JPHMOXPIVIJUW",15762049,13,,,"","","","","","","","","","","","","","",,"",08-AUG-24 06.05.22.074761000 PM,12-SEP-18 06.34.49.836407000 PM,"","APPROVED",12-SEP-18 06.34.49.835833000 PM,,"Auto Approved","","",214,""
156638418427846754447279521912603825664,14-SEP-18 03.35.40.042197000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","All About PL/SQL Compiler Settings","ALL ABOUT PL/SQL COMPILER SETTINGS","Companion to my blog post on the topic.","",105148976619217,"","","",18-AUG-24 05.29.31.387470000 PM,"PUBLIC","",173,"","G9FUDGBA9VL6G2YP6M474YSUQ",15867391,6,,,"","","","","","","","","","","","","","",,"",18-AUG-24 05.29.31.387266000 PM,14-SEP-18 03.36.39.333796000 PM,"","APPROVED",14-SEP-18 03.36.39.333049000 PM,,"Auto Approved","","",724,""
157891355682111741759554732293826046827,26-SEP-18 03.44.37.862887000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Global (Package-level) vs Local (Declared in block) Variables","GLOBAL (PACKAGE-LEVEL) VS LOCAL (DECLARED IN BLOCK) VARIABLES","This short script demonstrates that when you declare a variable at the package level (whether in body or spec), its state (value for a variable, open-ness for a cursor) persists for the session and NOT just for the block in which it is used/referenced.","",157891355682022281248903249734897789803,"","","",04-APR-24 06.05.17.917899000 AM,"PUBLIC","package, global",5,"","HBF5ZLOCHPB2DNBVD4KTPMHOD",16334218,4,,,"","","","","","","","","","","","","","",,"",10-OCT-23 11.35.55.120746000 AM,26-SEP-18 03.44.37.865254000 PM,"","APPROVED",26-SEP-18 03.44.37.862536000 PM,,"Auto Approved","","",35,""
160211723923248355227248519089482280993,18-OCT-18 08.39.24.226136000 PM,"",,"ROGER.FORD@ORACLE.COM","Oracle Text simple preference / attribute example","ORACLE TEXT SIMPLE PREFERENCE / ATTRIBUTE EXAMPLE","Simple example of setting a lexer preference for email addresses.","",160193937134262823260355568328239614366,"","","",30-MAY-24 06.00.45.878767000 PM,"PUBLIC","oracle text, contains, context, lexer",6,"","HE53QHGRTOT5L3UON0I0AIRAR",17352391,893254896586036118486907198353590179,,,"","","","","","","","","","","","","","",,"",20-OCT-22 04.32.55.434843000 AM,18-OCT-18 08.39.24.232539000 PM,"","APPROVED",18-OCT-18 08.39.24.225833000 PM,,"Auto Approved","","",60,""
158715533756594237769927068194588875137,04-OCT-18 02.20.28.901107000 PM,"",,"VICTORHYUUK1@GMAIL.COM","Inserting an array in a table","INSERTING AN ARRAY IN A TABLE","This script create a collection (varray of records) and insert it into a table.","",158721233615015178964521373725870571941,"","","",22-JUL-24 06.21.09.709088000 PM,"PUBLIC","collections, varrays, insert collections, type, record type, ",34,"","HCU61FV8KJLDD1EBZVLSRQQXY",16650658,4,,,"","","","","","","","","","","","","","",,"",03-APR-24 04.08.53.420031000 PM,04-OCT-18 02.20.28.913876000 PM,"","APPROVED",04-OCT-18 02.20.28.895077000 PM,05-OCT-18 02.28.40.735756000 AM,"sharon.kennedy@oracle.com","","",206,""
158699419733158854843787328287977284439,04-OCT-18 09.29.31.861496000 AM,"",,"VINCENT.MOUTIA@SUPINFO.COM","Kill datapump jobs","KILL DATAPUMP JOBS","Allows to kill all active datapump jobs, and to delete corresponding work tables.","",158699419732150610710228727556272333655,"","","",04-APR-24 10.56.41.227614000 AM,"PUBLIC","DATAPUMP",5,"","HCRQTL26XUQ09W43GUZQI386X",16637486,14,,,"","","","","","","","","","","","","","",,"",24-FEB-23 12.48.32.370705000 AM,04-OCT-18 09.29.31.874428000 AM,"","APPROVED",04-OCT-18 09.29.31.860921000 AM,04-OCT-18 12.45.19.314623000 PM,"sharon.kennedy@oracle.com","","",84,""
160099661429530596393599827462939370809,17-OCT-18 08.42.47.011579000 PM,"",,"ROGER.FORD@ORACLE.COM","Oracle Text quickstart demo","ORACLE TEXT QUICKSTART DEMO","The most basic Oracle Text demo - create an index and search on it","",160107091930833048016682135739353976414,"","","",07-AUG-24 04.38.33.081917000 AM,"PUBLIC","oracle text, contains, context",16,"","HEZMU9YKHBX3W9HE1ANA1KYP3",17283703,893254896586036118486907198353590179,,,"","","","","","","","","","","","","","",,"",22-JUL-23 05.44.23.116236000 AM,17-OCT-18 08.50.53.329347000 PM,"","APPROVED",17-OCT-18 08.42.47.011232000 PM,,"Auto Approved","","",83,""
160813850472174569378627951634470823574,24-OCT-18 03.17.22.419159000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","MULTISET Comparisons and Map Methods","MULTISET COMPARISONS AND MAP METHODS","The MULTISET operators are fantastic, declarative, set-oriented functionality for nested tables. But if you have a nested table of object types, then you will also need to provide a MAP method for that object type if your MULTISET needs to do a comparison. Which is true for pretty much every variation on MULTISET except for MULTISET UNION [ALL]. For full explanation, see my blog post: https://stevenfeuersteinonplsql.blogspot.com/2018/10/why-wont-multiset-work-for-me.html","",102811069885380,"","","",31-JUL-24 02.33.40.125548000 PM,"PUBLIC","multiset,compare,nested table,object type",10,"","HF4W5Y0K4EBC4J5FXI1PVS6MA",17682464,4,,,"","","","","","","","","","","","","","",,"",06-OCT-22 11.14.08.261595000 PM,25-OCT-18 12.07.15.540636000 PM,"","APPROVED",24-OCT-18 03.18.29.501131000 PM,,"Auto Approved","","",57,""
140531872738449706779998045485635751133,13-APR-18 10.39.25.390256000 AM,"",,"LIPAREKSHITIJ@GMAIL.COM","Fetch first Friday of every month in current year","FETCH FIRST FRIDAY OF EVERY MONTH IN CURRENT YEAR","fetches the date of every Friday occurring first in a month
case statement to identify the first day in a month and subsequently add days to find the date falling on a friday","",140531872738401349747213460318647504093,"","","",14-JUL-24 03.05.30.208879000 PM,"PUBLIC","date",8,"","GJL4TLKEE4A4LAR9TNF9P17OV",11617659,1,,,"","","","","","","","","","","","","","",,"",22-DEC-22 09.54.36.841160000 AM,13-APR-18 10.39.25.396075000 AM,"","APPROVED",15-JUN-18 01.34.41.871701000 AM,18-JUN-18 04.10.57.087302000 PM,"sharon.kennedy@oracle.com","","",41,""
141152898329984238793163836730171473973,19-APR-18 09.51.21.074653000 AM,"",,"MAHANTESHIMATH@GMAIL.COM","Puzzle14- Using CTE, cumulative MAX analytic function and an in-line scalar subquery","PUZZLE14- USING CTE, CUMULATIVE MAX ANALYTIC FUNCTION AND AN IN-LINE SCALAR SUBQUERY"," Using CTE, cumulative MAX analytic function and an in-line scalar subquery ","",141152898329785974958747037545519661109,"","","",15-APR-24 01.44.55.350352000 AM,"PUBLIC","#Puzzle",6,"","GKLZBHLWLYN15J17G8PXIOEDJ",11830086,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",23-NOV-22 03.55.24.532970000 PM,19-APR-18 09.51.21.107200000 AM,"","APPROVED",15-JUN-18 01.34.41.900602000 AM,15-JUN-18 05.14.19.933006000 PM,"sharon.kennedy@oracle.com","","",48,""
140555283207283445118588116816221745730,13-APR-18 04.21.12.818861000 PM,"",,"MENNO.HOOGENDIJK@GMAIL.COM","Select from JSON hierarchical structure","SELECT FROM JSON HIERARCHICAL STRUCTURE","Get the hierarchical structure of a nested JSON object, like a tree using recursive subquery factoring. The level of nesting does not matter. Does not work for CLOB children.","",140555283205221017670325559444173009474,"","","",03-JUN-24 07.58.45.781337000 PM,"PUBLIC","tree, nested, recursive, hierarchical",15,"","GJNHGWAT7293B6DOGTINPR3PW",11627215,13,,,"","","","","","","","","","","","","","",,"",03-JUN-24 07.58.45.781174000 PM,13-APR-18 04.29.26.102399000 PM,"","APPROVED",15-JUN-18 01.34.41.914584000 AM,18-JUN-18 04.32.58.698429000 PM,"sharon.kennedy@oracle.com","","",55,""
140155105946415076976765716800440385859,09-APR-18 08.04.43.886201000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Nested Blocks and Autonomous Transactions","NESTED BLOCKS AND AUTONOMOUS TRANSACTIONS","The rule to remember: Before the subprogram can be closed and control passed back to the calling block, any DML changes made within that subprogram must be committed or rolled back.","",140155105945890403171052967738617905475,"","","",03-APR-24 02.46.58.483972000 PM,"PUBLIC","autonomous,transaction,commit,rollback,nested",9,"","GI0DWAWMDTRB3PN5NFN95NA9X",11462160,6,,,"","","","","","","","","","","","","","",,"",18-AUG-23 07.52.30.585099000 PM,09-APR-18 08.04.43.892260000 PM,"","",,,"","","",52,""
140443778612013595166116077865154653579,12-APR-18 02.48.21.646825000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Require Minimum Optimization Level for Program Unit","REQUIRE MINIMUM OPTIMIZATION LEVEL FOR PROGRAM UNIT","I have a compute-intensive PL/SQL procedure. If it is not compiled with optimization level set to at least 2 (yes, I know it's the default), the performance is horrible. How can I make sure that this procedure is always compiled with the level to set to 2 or higher? The error directive of  conditional compilation to the rescue!","",140443058004656403262304892220175299601,"","","",03-APR-24 02.46.56.808852000 PM,"PUBLIC","optimization,conditional compliation",9,"","GJG1RE9R7CGJ3DH2265143V2L",11582769,6,,,"","","","","","","","","","","","","","",,"",25-JUL-19 02.25.51.156879000 PM,05-JUN-19 06.28.26.446359000 PM,"","APPROVED",05-JUN-19 06.28.26.437392000 PM,,"Auto Approved","","",27,""
141252670869064982241337006015443148248,20-APR-18 08.23.04.667194000 AM,"",,"MAHANTESHIMATH@GMAIL.COM","Puzzle14-Using emp in subquery simple answer","PUZZLE14-USING EMP IN SUBQUERY SIMPLE ANSWER","Puzzle14-Using emp in subquery simple answer","",141249543530631886311951529382500923003,"","","",27-MAY-24 04.40.56.195364000 PM,"PUBLIC","#Puzzle",7,"","GKRQNA1BTZBMUEZIXWDLKNRD2",11876770,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",15-MAY-22 08.02.20.271622000 AM,20-APR-18 08.23.04.691470000 AM,"","APPROVED",15-JUN-18 01.34.41.979788000 AM,15-JUN-18 05.14.36.631468000 PM,"sharon.kennedy@oracle.com","","",33,""
138766417282876365142866096413114923048,27-MAR-18 01.06.13.968041000 PM,"",,"JONATHAN@JLCOMP.DEMON.CO.UK","merge_order_issue","MERGE_ORDER_ISSUE","Demonstrates a missed optimisation in the SORT MERGE operator.  A redundant sort order appears if a merge join is used and the order of the joins listed in the where clause doesn't match the order of the columns in the order by clause.","",138749249649304080749970376664653019621,"","","",28-APR-24 11.04.05.234852000 PM,"PUBLIC","""MERGE JOIN"" Performance",5,"","IE6AW4WEQNFW73R57DGYOCWQM",11098514,3,,,"","","","","","","","","","","","","","",,"",21-MAY-19 07.16.36.618333000 PM,21-MAY-19 08.07.24.334899000 PM,"","APPROVED",21-MAY-19 08.07.24.332442000 PM,21-MAY-19 08.12.41.542400000 PM,"steven.feuerstein@oracle.com","","",82,""
141247100534472458220958614364093203312,20-APR-18 07.21.07.866202000 AM,"",,"MAHANTESHIMATH@GMAIL.COM","PUZZLE 14 - Using CTE, cumulative MAX analytic function and a correlated subquery with COUNT to mimic the filter by RANK","PUZZLE 14 - USING CTE, CUMULATIVE MAX ANALYTIC FUNCTION AND A CORRELATED SUBQUERY WITH COUNT TO MIMIC THE FILTER BY RANK"," Using CTE, cumulative MAX analytic function and a correlated subquery with COUNT to mimic the filter by RANK:","",141245017294331475587256188410784411282,"","","",04-APR-24 06.38.22.347024000 AM,"PUBLIC","#Puzzle",10,"","GKRE2LKGXTS7WHYUR46MT7G1E",11874969,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",10-JUN-22 06.10.02.247616000 PM,20-APR-18 07.21.07.889495000 AM,"","APPROVED",15-JUN-18 01.34.42.004937000 AM,15-JUN-18 05.14.10.667782000 PM,"sharon.kennedy@oracle.com","","",68,""
140541883296767053140700630534568318516,13-APR-18 01.30.59.774462000 PM,"",,"LIPAREKSHITIJ@GMAIL.COM","sequence generator","SEQUENCE GENERATOR","generate sequence & reverse sequence
generate alternating sequence
generate sequence of x
","",140541883294858159271529131067707266612,"","","",19-MAR-24 08.44.29.763903000 PM,"PUBLIC","sequence",4,"","GJMPMGZ13Z9K1EFX19I8CSYPY",11623184,1,,,"","","","","","","","","","","","","","",,"",03-JUN-22 01.39.25.417909000 AM,13-APR-18 01.37.19.320701000 PM,"","APPROVED",15-JUN-18 01.34.42.009020000 AM,18-JUN-18 04.27.01.558194000 PM,"sharon.kennedy@oracle.com","","",43,""
140539907015764585395404085218398486671,13-APR-18 01.59.14.562951000 PM,"",,"LIPAREKSHITIJ@GMAIL.COM","rank examples","RANK EXAMPLES","rank
","",140541883294858159271529131067707266612,"","","",22-AUG-24 07.20.06.631936000 AM,"PUBLIC","rank",4,"","GJMLIMOF8GNGJ19BPQ6TOD6M5",11623754,1,,,"","","","","","","","","","","","","","",,"",14-APR-23 12.35.44.880429000 AM,13-APR-18 01.59.14.638472000 PM,"","APPROVED",15-JUN-18 01.34.42.017313000 AM,18-JUN-18 04.27.23.966265000 PM,"sharon.kennedy@oracle.com","","",38,""
140443543325377000633178109674057947184,12-APR-18 02.23.16.957948000 PM,"",,"4EQUALWORLD@GMAIL.COM","how does union, minus and intersect work?","HOW DOES UNION, MINUS AND INTERSECT WORK?","union, union all, minus and intersect ","",140441637970003275259828003155450017728,"","","",09-AUG-24 05.06.45.887064000 PM,"PUBLIC","sql ",89,"","GJG09TMC7ZSYEU2OQ3RZ195KY",11582080,3,,,"","","","","","","","","","","","","","",,"",09-AUG-24 05.06.45.886941000 PM,12-APR-18 02.23.17.031078000 PM,"","APPROVED",15-JUN-18 01.34.42.038614000 AM,15-JUN-18 03.45.28.595319000 PM,"sharon.kennedy@oracle.com","","",228,""
141509584110688027045601411849633154833,22-APR-18 07.53.18.238645000 PM,"",,"LAURENTC.SCHNEIDER@JULIUSBAER.COM","1/2^inf","1/2^INF","1/2^inf","",141509584110557463057083031898764887825,"","","",10-NOV-23 07.40.36.055148000 AM,"PUBLIC","",2,"","GK6KIJ3HCBKK6HD7MN2OC3USJ",11960998,3,,,"","","","","","","","","","","","","","",,"",17-JUL-18 01.30.59.699667000 AM,22-APR-18 07.53.18.340150000 PM,"","APPROVED",15-JUN-18 01.34.42.054199000 AM,15-JUN-18 04.59.35.639943000 PM,"sharon.kennedy@oracle.com","","",15,""
141249569510236227619973644777861955926,20-APR-18 07.45.32.471666000 AM,"",,"MAHANTESHIMATH@GMAIL.COM","Puzzle14-Using regular and recursive CTEs, ROWNUM, GREATEST, and CASE functions","PUZZLE14-USING REGULAR AND RECURSIVE CTES, ROWNUM, GREATEST, AND CASE FUNCTIONS","Using regular and recursive CTEs, ROWNUM, GREATEST, and CASE functions","",141249569509933996165069987484185411926,"","","",12-AUG-24 12.53.59.986978000 PM,"PUBLIC","#Puzzle",10,"","GKRJ7ARMG0UNQORBZ1NDPOS0O",11875825,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",27-SEP-23 12.31.42.634853000 PM,20-APR-18 07.45.32.482333000 AM,"","APPROVED",15-JUN-18 01.34.42.109175000 AM,15-JUN-18 04.41.44.084947000 PM,"sharon.kennedy@oracle.com","","",84,""
141249569512233373073977012174476558678,20-APR-18 08.01.51.899858000 AM,"",,"MAHANTESHIMATH@GMAIL.COM","Puzzle14--Using self-join and Cartesian Product with aggregation:","PUZZLE14--USING SELF-JOIN AND CARTESIAN PRODUCT WITH AGGREGATION:","Using self-join and Cartesian Product with aggregation:","",141249569512047198497756359281571807574,"","","",04-APR-24 06.38.33.032072000 AM,"PUBLIC","#Puzzle",6,"","GKRJ7ARTFYOQP240QF1SZ49Z8",11876207,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",29-JAN-24 11.36.22.390785000 PM,20-APR-18 08.01.51.910301000 AM,"","APPROVED",15-JUN-18 01.34.42.112559000 AM,15-JUN-18 05.14.28.464375000 PM,"sharon.kennedy@oracle.com","","",46,""
138349204027421007362463365674769862768,23-MAR-18 01.14.59.890269000 PM,"",,"KAY.WAMAN@WEB.DE","Regular Expression in a Check Constraint","REGULAR EXPRESSION IN A CHECK CONSTRAINT","Demonstration of increased strictness on check constraints.  Regular expressions are not permitted in constraints or function-based indexes because they are not deterministic across NLS settings. Additional background for this script can be found at https://asktom.oracle.com/pls/apex/asktom.search?tag=adding-constraint-with-regexp-replace-fails-201803","",138349093730214227158543012733335111985,"","","",19-MAY-24 01.59.41.816754000 PM,"PUBLIC","CONSTRAINT",11,"","GVULRUUDQOULXC5RVK93UXW9K",10987168,1,,,"","","","","","","","","","","","","","",,"",19-MAY-24 01.59.41.816630000 PM,23-MAR-18 01.14.59.895768000 PM,"","APPROVED",15-JUN-18 01.34.42.119080000 AM,25-JUN-18 12.00.00.000000000 AM,"sharon.kennedy@oracle.com","","",125,""
141168038033212948619944099286042308866,19-APR-18 01.32.03.683688000 PM,"",,"JEFF.D.SMITH@ORACLE.COM","storing_chinese","STORING_CHINESE","creating a table using both nvarchar and varchar2 columns for storing chinese data","",141168038031862578479434558497895510274,"","","",08-FEB-24 06.30.36.353420000 AM,"PUBLIC","chinese",2,"","GKMUR2CDJCAXMHDR4GF1NSRKK",11842117,1,,,"","","","","","","","","","","","","","",,"",29-APR-20 04.39.05.866669000 PM,19-APR-18 01.32.03.704957000 PM,"","",,,"","","",21,""
141289815422068434437720907675996025713,20-APR-18 07.35.01.343095000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Emulating DBMS_UTILITY Error and Stack Functions in UTL_CALL_STACK","EMULATING DBMS_UTILITY ERROR AND STACK FUNCTIONS IN UTL_CALL_STACK","UTL_CALL_STACK, introduced in Oracle Database 12c, offers fine-grained access to the execution call stack, error stack, and backtrace information. Prior to UTL_CALL_STACK, developers used functions in DBMS_UTILITY to obtain this infromation: FORMAT_CALL_STACK, FORMAT_ERROR_STACK, FORMAT_ERROR_BACKTRACE. The my_utl_call_stack offers functions of the same name to replace those functions.","",17107517078970,"","","",03-APR-24 02.32.09.062451000 PM,"PUBLIC","exception,stack,call stack,error stack,backtrace,utl_call_stack",15,"","GKUFMR54O3T6H1F3JMHFEVAEK",12043490,4,,,"","","","","","","","","","","","","","",,"",29-APR-21 12.11.47.922982000 PM,24-APR-18 08.29.16.005184000 PM,"","",,,"","","",30,""
141021551190995310977562041049072549312,18-APR-18 03.17.46.331660000 AM,"",,"MAHANTESHIMATH@GMAIL.COM","2018 Oracle SQL Puzzle of the Week #14","2018 ORACLE SQL PUZZLE OF THE WEEK #14","Find the employee who remained the top paid employee (excluding the president) the longest period of time between 1980 and 1981","",141016861856097437956962210741178126247,"","","",13-MAY-24 06.37.29.959496000 AM,"PUBLIC","#Puzzle",29,"","GKEEDMMGOUXPSFHFRXP1NX91E",11764796,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",01-MAR-24 07.40.36.135563000 AM,18-APR-18 03.17.46.360278000 AM,"","APPROVED",15-JUN-18 01.34.42.180326000 AM,15-JUN-18 05.11.20.698111000 PM,"sharon.kennedy@oracle.com","","",90,""
148405776030629168359882238551164482016,27-JUN-18 09.07.40.228690000 PM,"",,"NANCY.GREENBERG@ORACLE.COM","HR Objects and Data For Live SQL","HR OBJECTS AND DATA FOR LIVE SQL","This script will create the HR Sample Schema objects and data in your local schema.  If you want just query-only, you can instead use the HR sample schema by referencing hr.regions, etc.  To drop the objects once created, you can run ""Drop HR Sample Schema"" - 
https://livesql.oracle.com/apex/livesql/file/content_GWKN7QJBHHC8F1RJTEB47AFOY.html.  Please note that this schema was initially created in 2000 and last updated March 19, 2015 so the constructs are not necessarily what we would recommend today.","",116829551896855,"","","",22-AUG-24 10.16.22.522910000 PM,"PUBLIC","SQL, HR Schema, Employees Table, Departments Table",181226,"","GWKC9HVSM8QL6U8MPXN9VEVO1",82565441,1,,,"","","","","","","","","","","","","","",,"",22-AUG-24 10.16.22.522814000 PM,16-MAR-21 05.09.30.175731000 PM,"","APPROVED",08-JUL-18 11.54.47.232374000 PM,02-FEB-21 12.00.00.000000000 AM,"sharon.kennedy@oracle.com","","",230693,"N"
148614316276891465762631445066321503328,29-JUN-18 07.45.45.786095000 PM,"",,"NANCY.GREENBERG@ORACLE.COM","Drop HR Objects","DROP HR OBJECTS","Used to drop the HR schema objects, if created in your local schema.","",3094727256953,"","","",22-AUG-24 07.52.32.314749000 AM,"PUBLIC","HR Schema",219,"","GWKN7QJD6UMKPTGOWHSE3NKY6",13976218,1,,,"","","","","","","","","","","","","","",,"",22-AUG-24 07.52.32.314651000 AM,02-JUL-18 03.36.18.622499000 PM,"","APPROVED",08-JUL-18 11.46.16.548735000 PM,,"Auto Approved","","",512,""
148917634461693154276831994228878636631,02-JUL-18 05.44.42.773447000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","DBMS_ASSERT Demonstration","DBMS_ASSERT DEMONSTRATION","Use DBMS_ASSERT to help guard against SQL injection.","",148916067372573531141374986371008829247,"","","",19-APR-24 12.05.12.486629000 PM,"PUBLIC","dynamic sql, injection",1,"","GW16IGQ0NWQ23YUQ340H4BN4P",13978423,4,,,"","","","","","","","","","","","","","",,"",02-OCT-21 08.18.33.215504000 PM,02-JUL-18 05.44.42.777631000 PM,"","APPROVED",02-JUL-18 05.44.42.768918000 PM,,"Auto Approved","","",36,""
148185202109405108458977233998837466059,25-JUN-18 05.12.53.664102000 PM,"",,"ARTHURSENS2005@GMAIL.COM","Slow queries - Top 10","SLOW QUERIES - TOP 10","This script will return you information about the 10 queries with the highest avarage execution time.","",148182520189609126980305748506994030080,"","","",15-AUG-24 12.26.57.096207000 PM,"PUBLIC","slow,query,slow queries,monitoring,performance",97,"","GV0WJ0EUN4NE8QLAXPEM1WBY9",13811452,15,,,"","","","","","","","","","","","","","",,"",07-JUN-24 12.01.29.062524000 AM,25-JUN-18 05.12.53.807380000 PM,"","APPROVED",25-JUN-18 05.12.53.647483000 PM,26-JUN-18 01.06.03.252578000 PM,"sharon.kennedy@oracle.com","","",496,""
148185202112583374438744094099140002763,25-JUN-18 05.55.31.370852000 PM,"",,"ARTHURSENS2005@GMAIL.COM","Most frequent executions - Top 10","MOST FREQUENT EXECUTIONS - TOP 10","This query will return information about the queries that are executed most frequently","",148185202112097386259259013170908120011,"","","",28-JUN-24 04.26.37.763230000 AM,"PUBLIC","monitoring,performance,frequency",22,"","GV0WQUTLXMMUVWKL7IBZHB9K5",13812680,15,,,"","","","","","","","","","","","","","",,"",10-MAY-23 06.42.12.308099000 PM,25-JUN-18 05.55.31.404578000 PM,"","APPROVED",25-JUN-18 05.55.31.257592000 PM,26-JUN-18 01.04.19.621550000 PM,"sharon.kennedy@oracle.com","","",168,""
149415843091046797318037807562694118590,07-JUL-18 12.40.52.866770000 PM,"",,"ROGEL@WEB.DE","identifiers in uppercase ?","IDENTIFIERS IN UPPERCASE ?","see thread on https://mobile.twitter.com/oraculix/status/1015209213654634496
shows an edge-case
I don't know if there are others but there might","",149416297419906747657008350543282442559,"","","",09-DEC-23 02.48.52.902637000 PM,"PUBLIC","",6,"","GXUXSMFDQVL6HK353G0I4XPV0",14090575,1,,,"","","","","","","","","","","","","","",,"",09-DEC-23 02.48.08.653933000 PM,07-JUL-18 12.40.52.925725000 PM,"","APPROVED",07-JUL-18 12.40.52.848390000 PM,,"Auto Approved","","",40,""
148076430041842551151259333394812422418,24-JUN-18 04.37.51.834225000 PM,"",,"BERNHARD.SCHWARZ@VODAFONE.COM","regexp_replace FBI + VC","REGEXP_REPLACE FBI + VC","testing of function based index (FBI) and virtual column using REGEXP_REPLACE","",148076430041666047981595597535305320722,"","","",04-APR-24 11.33.48.379363000 AM,"PUBLIC","REGEXP_REPLACE, virtual column, function based index",39,"","GV0WQUTLYDY59QN0IHGLSRO8P",13836199,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",24-JUL-19 07.53.38.943350000 AM,26-JUN-18 11.04.58.404501000 AM,"","APPROVED",25-JUN-18 12.32.46.199716000 PM,26-JUN-18 01.06.52.280374000 PM,"sharon.kennedy@oracle.com","Can you please run this and re-save.  The results past statement 2 are not displayed.","",61,""
154875581682025763817985115378101841961,28-AUG-18 06.46.20.366040000 PM,"",,"ROGEL@WEB.DE","sqlerrm(-1841) is buggy","SQLERRM(-1841) IS BUGGY","@joelgarry asks
""Isn't between in Oracle supposed to be inclusive?""
https://mobile.twitter.com/joelgarry/status/1034486605195558912","",154875581680923223470496573570769809449,"","","",08-AUG-21 05.38.21.740331000 PM,"PUBLIC","",1,"","G6L26KL2166891HW5PWQC60SB",15355661,1,,,"","","","","","","","","","","","","","",,"",08-AUG-21 05.38.21.740148000 PM,28-AUG-18 06.46.20.379313000 PM,"","APPROVED",28-AUG-18 06.46.20.361527000 PM,,"Auto Approved","","",11,""
157360574771253900133415649327119652661,21-SEP-18 01.43.10.913482000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Verify PL/SQL Compile Time Settings","VERIFY PL/SQL COMPILE TIME SETTINGS","Use this simple script to verify current PL/SQL object settings. Thanks to Bryn Llewellyn for providing it!","",157352355435911127940328318425564450338,"","","",24-APR-24 09.00.48.761006000 AM,"PUBLIC","compile",13,"","HALI0RK4V8EU34PRZQKGX7U7R",16150580,6,,,"","","","","","","","","","","","","","",,"",23-FEB-23 04.07.48.757733000 PM,21-SEP-18 06.41.15.170186000 PM,"","APPROVED",21-SEP-18 01.43.10.912826000 PM,,"Auto Approved","","",39,""
157306513669924312817668084899448110062,21-SEP-18 01.18.52.442114000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Function Result Cache Performance: A Demonstration","FUNCTION RESULT CACHE PERFORMANCE: A DEMONSTRATION","Let's see just how much of a benefit one can get from the function result cache! This script compares the performance of an uncached lookup via a function (select from table each time); a PGA cached lookup (package body persistent data); and the function result cache.","",157306513669183241290244317215353224174,"","","",04-APR-24 06.15.18.769309000 AM,"PUBLIC","result cache,performance,11g_emplu",3,"","HAIEOJMSPUA8GU9IY0JOD8FWG",16127738,4,,,"","","","","","","","","","","","","","",,"",09-MAR-24 08.33.51.711771000 PM,21-SEP-18 01.19.46.858598000 AM,"","APPROVED",21-SEP-18 01.18.52.437565000 AM,,"Auto Approved","","",28,""
157778049035568641917193586215305909271,25-SEP-18 01.39.05.134823000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","MULTISET UNION Examples","MULTISET UNION EXAMPLES","Use MULTISET UNION to perform set-level union operations on nested tables. Remember: with MULTISET, ALL is the default, not DISTINCT (the opposite holds true with SQL UNION).","",1090242936097,"","","",02-JUL-24 02.02.04.989819000 PM,"PUBLIC","collection,nested table,multiset,union",21,"","HA9UREV0OMBIJXL069IJ9LLUL",16287629,4,,,"","","","","","","","","","","","","","",,"",11-JAN-24 02.39.31.511782000 PM,25-SEP-18 02.28.48.996720000 PM,"","APPROVED",25-SEP-18 02.28.48.979436000 PM,,"Auto Approved","","",88,""
159349016057968306400567666385028301783,10-OCT-18 02.36.37.382252000 PM,"",,"ROGEL@WEB.DE","work around ORA-01795: maximum number of expressions in a list is 1000","WORK AROUND ORA-01795: MAXIMUM NUMBER OF EXPRESSIONS IN A LIST IS 1000","https://mobile.twitter.com/lukaseder/status/1050027652772319233","",159349016055247014380615136112764699607,"","","",11-FEB-24 09.08.16.329338000 PM,"PUBLIC","",3,"","HDSA0QVT6UYT6XQ8LPHWB3KVD",16906793,1,,,"","","","","","","","","","","","","","",,"",10-MAY-20 04.04.38.228644000 AM,10-OCT-18 02.36.37.390521000 PM,"","APPROVED",10-OCT-18 02.36.37.374337000 PM,,"Auto Approved","","",26,""
158276928565901597896540025589611640920,30-SEP-18 08.32.33.815595000 AM,"",,"RAMI.KELESLI@GMAIL.COM","Hijri-Gregorian two way conversion","HIJRI-GREGORIAN TWO WAY CONVERSION","Hijri-Gregorian two way conversion","",158276928563654204797876429953832859736,"","","",04-APR-24 06.31.07.885533000 AM,"PUBLIC","hijri,gregorian,to_date",1,"","HB3P1SH0OOZ5FEWO4N5HJNJTD",16464025,4,,,"","","","","","","","","","","","","","",,"",04-FEB-19 12.54.35.349210000 AM,30-SEP-18 08.32.33.822690000 AM,"","APPROVED",30-SEP-18 08.32.33.815285000 AM,30-SEP-18 01.08.19.279375000 PM,"sharon.kennedy@oracle.com","","",24,""
159215504545382618988157130578491906593,09-OCT-18 07.48.57.950883000 AM,"",,"ALEXNUIJTEN@GMAIL.COM","JSON_EQUAL: BLOB and Strings","JSON_EQUAL: BLOB AND STRINGS","Simple script to demonstrate that it is possible to compare JSON data even if they are stored as BLOB","",159215098153166131125617643776883058897,"","","",07-SEP-23 07.25.25.591512000 AM,"PUBLIC","",11,"","HDLXDI0NSKXXPBM07JTL20MT4",16837552,13,,,"","","","","","","","","","","","","","",,"",25-NOV-22 12.42.27.302766000 PM,09-OCT-18 07.48.57.962397000 AM,"","APPROVED",09-OCT-18 07.48.57.950562000 AM,09-OCT-18 12.53.11.915972000 PM,"sharon.kennedy@oracle.com","","",52,""
158836420610806203705987635688747343095,05-OCT-18 04.42.17.730981000 PM,"",,"VICTORHYUUK1@GMAIL.COM","Using a record type constructor to populate a nested table on 11g","USING A RECORD TYPE CONSTRUCTOR TO POPULATE A NESTED TABLE ON 11G","To use a function as record type constructor allows you to insert values on array directly instead of writing array_name(position).RecordColumn ex: array_name(1).id := 1; array_name(1).name := 'John'; array_name(1).lname := 'Clark'; with a constructor you can do it directly: array_name(1) := constructor_function(1, 'John', 'Clark'); Record constructors are available on Oracle 12c, but if you want to do it in 11g, here is an example. :)","",158828863637984620300980908004807066304,"","","",03-JUN-24 02.42.57.899890000 PM,"PUBLIC","record type, record, record constructor, 11g, collections. nested table",3,"","HCY28JFP3BZANJEZO6FEUQSDD",16706416,4,,,"","","","","","","","","","","","","","",,"",05-MAY-20 05.24.44.849184000 AM,05-OCT-18 04.42.17.747375000 PM,"","APPROVED",05-OCT-18 04.42.17.730747000 PM,05-OCT-18 05.58.48.179770000 PM,"sharon.kennedy@oracle.com","","",62,""
159411087587733026385904130794545886805,11-OCT-18 04.34.06.897075000 AM,"",,"RBAUDUNOV@GMAIL.COM","random_example","RANDOM_EXAMPLE","Example of dbms_random using","",159408239137571863118268926324550284576,"","","",15-JUL-24 06.48.49.751584000 PM,"PUBLIC","dbms_random, random, pl/sql, percentage",9,"","HDX059JB5C0OIQA2P904719HL",16937076,337949986681008890389062074985729416032,,,"","","","","","","","","","","","","","",,"",08-DEC-23 07.46.18.294131000 PM,11-OCT-18 04.34.50.821736000 AM,"","APPROVED",11-OCT-18 04.34.06.895015000 AM,11-OCT-18 01.04.27.490727000 PM,"sharon.kennedy@oracle.com","","",101,""
159407017131029902224276646191449114235,11-OCT-18 03.53.15.184237000 AM,"",,"ROGEL@WEB.DE","https://mobile.twitter.com/sdstuber/status/1050219146338811904","HTTPS://MOBILE.TWITTER.COM/SDSTUBER/STATUS/1050219146338811904","member of seems to support only at most 999 elements in a collection","",159407017129278168711655048517299865211,"","","",28-NOV-23 06.16.39.099142000 AM,"PUBLIC","",1,"","HDVNJPKQTN88S14EMLPHIK9T5",16935972,1,,,"","","","","","","","","","","","","","",,"",14-DEC-18 06.50.40.573216000 PM,11-OCT-18 03.53.15.193244000 AM,"","APPROVED",11-OCT-18 03.53.15.181484000 AM,,"Auto Approved","","",6,""
233904602989962609548383734342911399137,23-SEP-20 09.35.59.977378000 AM,"",,"CHRIS.SAXON@ORACLE.COM","How to Make Reusable SQL Pattern Matching Clauses with SQL Macros","HOW TO MAKE REUSABLE SQL PATTERN MATCHING CLAUSES WITH SQL MACROS","An overview of how to combine SQL pattern matching with SQL macros to create reusable code fragments.","",233903581338865166493397691742934455209,"","","",21-AUG-24 03.57.32.550269000 PM,"PUBLIC","sql macro, match_recognize",274,"","KPC8LK2QV8COCH4Z2W7JQI1AZ",60832605,1,,,"","","","","","","","","","","","","","",,"",09-AUG-24 05.05.45.550547000 PM,23-SEP-20 04.22.31.029546000 PM,"","APPROVED",23-SEP-20 04.22.31.028854000 PM,,"Auto Approved","","",1817,"Y"
235336509856815560445310339095013776690,07-OCT-20 02.29.08.010020000 AM,"",,"DHURLEY@IMPLESTRAT.COM","KSCOPE 2019 PTF 10","KSCOPE 2019 PTF 10","Demonstrate FETCH_ROWS 1K (1024) rows at a time.","",235333474226814368796549820466116332432,"","","",04-APR-24 06.08.35.247568000 AM,"PUBLIC","PTF KSCOPE 2019",4,"","KRP0ULECHI38VR8UTKXQPFVR4",62541562,6,,,"","","","","","","","","","","","","","",,"",26-OCT-20 08.07.08.023925000 AM,07-OCT-20 04.22.00.175158000 PM,"","APPROVED",07-OCT-20 04.22.00.174190000 PM,,"Auto Approved","","",14,""
233928338436224632620217833359325967243,23-SEP-20 04.01.07.197022000 PM,"",,"CHRIS.SAXON@ORACLE.COM","How to Find Gaps in Dates with SQL Pattern Matching","HOW TO FIND GAPS IN DATES WITH SQL PATTERN MATCHING","This shows you how to find gaps in rows containing start/end dates using match_recognize. You can make this a reusable SQL fragment by placing this in a SQL macro.","",233932913616285029925706993200704144766,"","","",22-AUG-24 11.07.27.922654000 PM,"PUBLIC","match_recognize, SQL Macro",1235,"","KPDLCQPCCP002RIVAM4HM97J8",60844358,1,,,"","","","","","","","","","","","","","",,"",22-AUG-24 11.07.27.913628000 PM,23-SEP-20 04.25.53.662406000 PM,"","APPROVED",23-SEP-20 04.25.53.661748000 PM,,"Auto Approved","","",6213,"Y"
229553627318132353706516766621925261614,12-AUG-20 05.29.52.237265000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Generate code to move rows into a string-indexed collection","GENERATE CODE TO MOVE ROWS INTO A STRING-INDEXED COLLECTION","We'd all love to be able to do something like ""SELECT * BULK COLLECT INTO x FROM employees INDEX BY last_name"" but that's not a part of Oracle Database. So I thought I'd build a little procedure to generate the code you need to do this. I offer two approaches: first, one that bulk collects into an integer-indexed collection and then move to string-indexed. The second is simpler and uses a cursor FOR loop to populate the string-indexed collection. ","",424610279505,"","","",04-APR-24 05.57.28.823224000 AM,"PUBLIC","",7,"","KICESYMGAAGBV47AQFL55MZ6Z",56409877,4,,,"","","","","","","","","","","","","","",,"",22-FEB-23 07.37.55.472631000 PM,12-AUG-20 06.14.19.512091000 PM,"","APPROVED",12-AUG-20 05.30.45.603279000 PM,,"Auto Approved","","",61,""
229646648377231382668203215011162286387,13-AUG-20 03.06.37.272071000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Demonstration of deterministic function caching in PL/SQL","DEMONSTRATION OF DETERMINISTIC FUNCTION CACHING IN PL/SQL","A deterministic function in PL/SQL is (a) a function whose header includes the keyword DETERMINISTIC and (b) hopefully a function with no side-effects. This script shows the caching effect of deterministic functions within a single server call (PL/SQL block or SQL statement), but also some limitations when you pass expressions.","",229645392347117953314355099712589797790,"","","",04-APR-24 06.21.35.046539000 AM,"PUBLIC","cache,caching,deterministic",2,"","KIH15IVZ555PPMHWIOBWW5RYD",56488247,6,,,"","","","","","","","","","","","","","",,"",02-SEP-20 01.42.42.861709000 PM,13-AUG-20 03.06.37.275072000 PM,"","APPROVED",13-AUG-20 03.06.37.271843000 PM,,"Auto Approved","","",24,""
230046606149433402983082438090073703797,17-AUG-20 10.53.08.627767000 AM,"",,"BEDA.HAMMERSCHMIDT@ORACLE.COM","how to use JSON_TABLE to unnest an array","HOW TO USE JSON_TABLE TO UNNEST AN ARRAY","how to use JSON_TABLE to unnest an array","",5350559767155,"","","",09-JUN-24 04.43.07.690840000 PM,"PUBLIC","",19,"","KI49QGTP0DT9PGKZM6738HKT9",56738859,13,,,"","","","","","","","","","","","","","",,"",11-MAR-24 03.12.16.859981000 AM,17-AUG-20 11.21.20.495512000 AM,"","APPROVED",17-AUG-20 11.21.20.494918000 AM,,"Auto Approved","","",56,""
231018545228789138259535720265877696521,26-AUG-20 06.13.13.826665000 PM,"",,"SMCLOETE@OUTLOOK.COM","Oracle Data Dictionary Search","ORACLE DATA DICTIONARY SEARCH","Search Oracle Data Dictionary for Objects such as TABLES , COLUMNS, VIEWS and PROCEDURE","",21079817598141,"","","",21-MAY-24 04.11.49.163528000 AM,"PUBLIC","Search,Data Dictionary,Table,Package,Column,Oracle Data Dictionary,Search in Package",16,"","KKPG7TXGBC8VQGQ44E23IGMS0",57694734,1,,,"","","","","","","","","","","","","","",,"",28-MAR-23 11.06.10.002162000 AM,26-AUG-20 06.29.27.933450000 PM,"","APPROVED",26-AUG-20 06.29.27.933040000 PM,26-AUG-20 07.03.49.874823000 PM,"sharon.kennedy@oracle.com","","",108,""
231005786745440395936814220176907714463,26-AUG-20 03.23.49.198540000 PM,"",,"SMCLOETE@OUTLOOK.COM","Using ORA_HASH for Large Table Operations","USING ORA_HASH FOR LARGE TABLE OPERATIONS","Using ORA_HASH to assist with Large Table Tasks such as COUNT operation where a table size is over a few million records. This method is primarily used in Oracle Golden Gate Veridata to split up a Table into a few buckets for Data Comparisons.","",582755620088,"","","",23-JUL-24 02.53.04.938027000 PM,"PUBLIC","ORA_HASH, Large Table, Large DataSet, Veridata, Golden Gate",15,"","KKPG7TXGDSQOYQNL3JHVP8FAS",57692241,15,,,"","","","","","","","","","","","","","",,"",23-JUL-24 02.53.04.937895000 PM,26-AUG-20 06.29.43.087435000 PM,"","APPROVED",26-AUG-20 05.54.09.914854000 PM,26-AUG-20 07.04.29.748754000 PM,"sharon.kennedy@oracle.com","","",79,""
255348769329441450971134226802284298964,16-APR-21 04.39.17.698730000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Speeding up scalar subqueries - SQL Ask TOM Office Hours","SPEEDING UP SCALAR SUBQUERIES - SQL ASK TOM OFFICE HOURS","Scripts for the SQL Ask TOM Office Hours session in April 2021:

https://asktom.oracle.com/pls/apex/asktom.search?oh=12683","",255341662989758859576570465715118308088,"","","",10-OCT-23 07.11.21.856620000 AM,"PUBLIC","performance, subqueries",8,"","LN6KHT3EOTEQWTXZVYXJFXUF5",87261843,1,,,"","","","","","","","","","","","","","",,"",10-JUL-21 09.37.40.306200000 AM,19-APR-21 02.46.35.350075000 PM,"","APPROVED",19-APR-21 02.46.35.349276000 PM,,"Auto Approved","","",64,""
279781107770379585020319473634871279113,06-DEC-21 02.51.40.355781000 PM,"",,"WILLIAM.ENDRESS@ORACLE.COM","Create Time Table or View","CREATE TIME TABLE OR VIEW","Creates a time table or view that can be used as a dimension lookup table. The table or view is a good table to use with Oracle analytic views and hierarchies. This script is easily customizable.","",17204413049150,"","","",22-AUG-24 09.16.12.677213000 PM,"PUBLIC","time, time dimension, analytic view, hierarchy",44,"","MQVYN3D6G8Y1WBKC99WLZPW2R",118647063,1,,,"","","","","","","","","","","","","","",,"",22-AUG-24 09.14.42.986458000 PM,06-DEC-21 03.11.36.512902000 PM,"","APPROVED",06-DEC-21 03.11.30.838815000 PM,,"Auto Approved","","",237,""
253564319232744995205512644167719359548,30-MAR-21 03.26.44.458812000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Tuning scalar subqueries","TUNING SCALAR SUBQUERIES","Scalar subqueries are handy but can be a performance killer. This script shows faster alternatives: using cross apply/lateral or joining the tables and grouping","",253567154111327951811024869431374934819,"","","",02-JUL-24 06.23.51.220411000 AM,"PUBLIC","performance, cross apply",7,"","LKUZZNY7TKP52APAZ8JF88ZW4",84443921,1,,,"","","","","","","","","","","","","","",,"",31-MAY-21 09.30.59.982918000 PM,30-MAR-21 03.53.45.604093000 PM,"","APPROVED",30-MAR-21 03.53.45.603285000 PM,,"Auto Approved","","",61,""
252086018700190272564125883202559200019,16-MAR-21 10.44.01.829676000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Generating days, months or years between dates","GENERATING DAYS, MONTHS OR YEARS BETWEEN DATES","Examples of how to generate dates in a time period with different increment units","",252081712058230972831019392584408265229,"","","",14-AUG-24 09.57.19.138581000 AM,"PUBLIC","dates",19,"","LIG9QGPCM7GXRJTOWEGO0OLCZ",82528232,1,,,"","","","","","","","","","","","","","",,"",15-JUL-24 01.20.18.922971000 PM,16-MAR-21 12.41.40.805431000 PM,"","APPROVED",16-MAR-21 12.41.40.804434000 PM,,"Auto Approved","","",141,""
252931022375514239088035060744815555372,24-MAR-21 12.54.53.302074000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Simple String Tracker Package: String Indexed Collection Example","SIMPLE STRING TRACKER PACKAGE: STRING INDEXED COLLECTION EXAMPLE","This script offers first an implementation of a ""Have I used this string?"" API using an integer-indexed, sequentially-filled collection, and then shows how much simpler it can be by using a string-indexed collection.","",15327442584093,"","","",22-APR-24 04.57.10.854478000 AM,"PUBLIC","collection,string,index,array,sparse,string index",3,"","LJT6O6PZ0V8O1N5QWPA60WQ0E",83649380,4,,,"","","","","","","","","","","","","","",,"",31-MAY-21 09.25.35.175403000 PM,24-MAR-21 01.52.50.268663000 PM,"","APPROVED",24-MAR-21 12.59.46.287734000 PM,24-MAR-21 01.37.24.803907000 PM,"sharon.kennedy@oracle.com","","",29,""
251244052367115164288095756351330454892,08-MAR-21 09.33.38.510113000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Case- and accent-insensitive searching and sorting examples","CASE- AND ACCENT-INSENSITIVE SEARCHING AND SORTING EXAMPLES","Examples of case- and accent-insensitive queries in Oracle Database.

For more background, read the blog post https://blogs.oracle.com/sql/how-to-do-case-insensitive-and-accent-insensitive-search-in-oracle-database","",251243024814663870749524315673710954674,"","","",13-JUN-24 06.51.12.380825000 AM,"PUBLIC","collate",31,"","LG5BL6YKCYPZTFZA3F2IH8EU3",83485149,1,,,"","","","","","","","","","","","","","",,"",28-FEB-24 04.00.28.744143000 PM,01-APR-21 10.16.51.980704000 AM,"","APPROVED",01-APR-21 10.16.51.979986000 AM,,"Auto Approved","","",58,""
252722056409226922208530731772393699985,22-MAR-21 01.04.28.845724000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Overhead of dynamic PL/SQL block execution","OVERHEAD OF DYNAMIC PL/SQL BLOCK EXECUTION","You can use execute immediate to run SQL statements constructed at run-time. You can also do the same for PL/SQL blocks. But how expensive is it to do that? 

This script computes elapsed time for executing static PL/SQL 1,000,000 and then doing the same dynamically. 

Without a doubt, you pay a price for dynamic execution, but when I ran this on a Free Tier ATP instance, I found that it took about 7.3 seconds to execute 1,000,000 dynamic PL/SQL blocks.  

So I suggest that unless you are writing code to run under the most demanding circumstances, you should not worry about utilizing dynamic PL/SQL.

Of course, you should only use execute immediate when you *need* to. Mostly this means you cannot for some reason complete the construction of your SQL or PL/SQL before your code runs. But sometimes you might want to switch to dynamic PL/SQL to avoid lots of code repetition and make your program easier to maintain.

In this case, knowing that execute immediate has such a low overhead should encourage you to take that step with confidence.","",12203804275889,"","","",06-JUL-24 06.00.09.724741000 AM,"PUBLIC","",5,"","LJNUQM1TNGOEIKANHFVUIORZN",83339494,4,,,"","","","","","","","","","","","","","",,"",28-FEB-22 06.56.25.859294000 PM,22-MAR-21 01.23.48.904957000 PM,"","APPROVED",22-MAR-21 01.23.48.904339000 PM,23-MAR-21 12.36.53.093779000 PM,"sharon.kennedy@oracle.com","","",52,""
247111548987069007614802534904369965381,27-JAN-21 07.57.46.699639000 PM,"",,"JKSTILL@GMAIL.COM","HexDump for PL SQL - Dump LOBs, LONGs and VARCHAR2 in a format like hexdump -C","HEXDUMP FOR PL SQL - DUMP LOBS, LONGS AND VARCHAR2 IN A FORMAT LIKE HEXDUMP -C","Dump LOBs, LONGs and VARCHAR2 in hex, similar to hexdump -C on linux     
SELECT * FROM TABLE(hexdump.hexdump(cursor(select sql_fulltext from v$sql binary_test where rownum < 2 ))) ","",13131938590082,"","","",19-AUG-24 01.37.03.850136000 PM,"PUBLIC","hexdump",18,"","LAMLY5FMYF1X6L1GDXMV74C6C",76617990,6,,,"","","","","","","","","","","","","","",,"",15-MAY-24 02.46.32.142409000 AM,28-JAN-21 11.19.28.360522000 AM,"","APPROVED",27-JAN-21 11.00.32.508726000 PM,28-JAN-21 01.30.08.071264000 PM,"sharon.kennedy@oracle.com","Please execute this and then click Save again - that will update the saved script with the results.  And then please submit again.  (Sharon)","",91,""
247112195651567658961830632874769562389,27-JAN-21 08.11.18.224995000 PM,"",,"JKSTILL@GMAIL.COM","Error Line Finder - show the line from all_source where an error occurred, with context","ERROR LINE FINDER - SHOW THE LINE FROM ALL_SOURCE WHERE AN ERROR OCCURRED, WITH CONTEXT","When developing or debugging a package, there will be errors. 

Rather than constantly referring to the source, I use this little script to show me the line number where the error occurred. 

This script may be made more generic by not hardcoding the owner/object, etc. 
But most of the time this script is more useful that way - just pass in the line# 

Get at ORA-6502 at line 179? call this 

SQL# @errline 179

LINEN TEXT
----- ------------------------------------------------------------------------------------------------------------------------------------------------------
 0174
 0175 end;
 0176
 0177
 0178 function hexdump (hex_cursor t_clob_cursor ) return t_hexdump_tab pipelined is
==>     r_hexdump_row t_hexdump_row := t_hexdump_row(null,null,null);
 0180
 0181   c_working_text clob;
 0182   r_hdr_row t_hdr_row := t_hdr_row(null,null,null,null);
 0183 begin
 0184

11 rows selected.
","",247112254026506917337258564726395933509,"","","",26-JUN-24 04.40.49.706774000 PM,"PUBLIC","source errors",17,"","LAMJLKUNXH8CSX9GQBNBKH0BM",76551441,4,,,"","","","","","","","","","","","","","",,"",04-MAR-24 02.33.16.372458000 PM,27-JAN-21 10.56.51.081696000 PM,"","APPROVED",27-JAN-21 10.56.51.081311000 PM,28-JAN-21 01.29.54.294906000 PM,"sharon.kennedy@oracle.com","The results saved with this are still from having input parameters.  Can you please run and save again - that will save the results with the saved script.","",51,""
245504309767310746613738348286969553621,12-JAN-21 10.32.50.258076000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Get the top-N rows per group","GET THE TOP-N ROWS PER GROUP","Scripts to support the blog post ""How to select the top-N rows per group with SQL in Oracle Database""
https://blogs.oracle.com/sql/how-to-select-the-top-n-rows-per-group-with-sql-in-oracle-database","",245504309767029066897768139689263014613,"","","",21-AUG-24 04.13.38.447805000 PM,"PUBLIC","row_number, top-n, sql macro",53,"","LAA5RLKCS07VHL93KMBXYJJI0",76399526,1,,,"","","","","","","","","","","","","","",,"",18-JUN-24 06.10.28.398118000 AM,27-JAN-21 04.15.10.132811000 PM,"","APPROVED",27-JAN-21 04.15.10.132315000 PM,,"Auto Approved","","",146,""
246256711242481932166067827485742639154,19-JAN-21 03.40.28.837369000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Converting Rows to Columns and Back Again Ask TOM Office Hours Script","CONVERTING ROWS TO COLUMNS AND BACK AGAIN ASK TOM OFFICE HOURS SCRIPT","Scripts from the January 2021 SQL Ask TOM Office Hours session on pivot and unpivot","",246256719724710473045471667250862362637,"","","",13-JUL-24 04.26.10.015254000 AM,"PUBLIC","pivot, unpivot",20,"","K85ABYW52OR63O8D3WHKWXIFN",75701100,1,,,"","","","","","","","","","","","","","",,"",15-MAY-24 08.32.14.983411000 AM,19-JAN-21 05.24.26.723915000 PM,"","APPROVED",19-JAN-21 05.24.26.723237000 PM,,"Auto Approved","","",94,""
242431699666331871511467598688912294890,14-DEC-20 12.48.48.440135000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","John Conway digit puzzle in SQL","JOHN CONWAY DIGIT PUZZLE IN SQL","Solving the John Conway digits puzzle in SQL","",242423221878929495511961139549626365012,"","","",10-AUG-24 05.34.43.275478000 PM,"PUBLIC","recursive, with",1,"","K2Z1LWYBCSFKJIPXVL9UR3JA0",72603130,1,,,"","","","","","","","","","","","","","",,"",10-AUG-24 05.34.29.851703000 PM,14-DEC-20 12.48.48.462151000 AM,"","APPROVED",14-DEC-20 12.48.48.439848000 AM,,"Auto Approved","","",44,""
242068671633196699264050380475772628581,10-DEC-20 01.14.01.442929000 PM,"",,"BEDA.HAMMERSCHMIDT@ORACLE.COM","Generate JSON data from normalized relational schema using triggers","GENERATE JSON DATA FROM NORMALIZED RELATIONAL SCHEMA USING TRIGGERS","Generate JSON data from normalized relational schema using triggers","",6729321868474,"","","",11-JUL-24 11.54.03.129161000 PM,"PUBLIC","",14,"","K2EYD3N509HR3E4Z6DJ6SZ8LP",72154050,13,,,"","","","","","","","","","","","","","",,"",20-SEP-23 11.00.05.357596000 AM,10-DEC-20 01.24.22.711908000 PM,"","APPROVED",10-DEC-20 01.15.34.090989000 PM,,"Auto Approved","","",47,""
278195525087688203401257468898025545969,21-NOV-21 10.33.17.791680000 AM,"",,"PATRICK.BAREL@GMAIL.COM","redaction","REDACTION","Accompanying script for the Redaction part of the presentation. This script should be downloaded and run in your own database.","",13880899388035,"","","",02-AUG-24 08.42.32.787376000 AM,"PUBLIC","Patch72 presentation",14,"","MOCHZWGWOUKBZ8QIF6VS2FKH3",115381745,1,,,"","","","","","","","","","","","","","",,"",02-AUG-24 08.42.32.787243000 AM,21-NOV-21 10.37.20.151866000 AM,"","APPROVED",21-NOV-21 10.37.20.151197000 AM,,"Auto Approved","","",42,""
278196404550538306561617795204239752694,21-NOV-21 10.16.47.210581000 AM,"",,"PATRICK.BAREL@GMAIL.COM","flashback_fb2","FLASHBACK_FB2","Accompanying script for the Flashback part of the presentation. This script should be downloaded and run in your own database along with flashback_fb1.","",13880899388035,"","","",10-OCT-23 03.43.36.030124000 PM,"PUBLIC","Patch72 presentation",,"","MOCF52ZJYXOWFOKO1SCLXI59W",115379067,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",,21-NOV-21 10.18.12.576521000 AM,"","APPROVED",21-NOV-21 10.18.12.575923000 AM,,"Auto Approved","","",18,""
278196005786298647301653204560782194418,21-NOV-21 10.20.00.016556000 AM,"",,"PATRICK.BAREL@GMAIL.COM","flashback_fb3","FLASHBACK_FB3","Accompanying script for the Flashback part of the presentation. This script should be downloaded and run in your own database.","",13880899388035,"","","",23-MAY-23 11.17.58.299956000 AM,"PUBLIC","Patch72 presentation",2,"","MOCE54EXWIHBSMF8FNA1A262B",115379409,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",25-NOV-21 05.11.21.893275000 AM,21-NOV-21 10.20.38.152049000 AM,"","APPROVED",21-NOV-21 10.20.38.151372000 AM,,"Auto Approved","","",16,""
278196885610383039471184738255536535289,21-NOV-21 10.26.20.659419000 AM,"",,"PATRICK.BAREL@GMAIL.COM","temporal_validity","TEMPORAL_VALIDITY","Accompanying script for the Temporal Validity of the presentation. This script should be downloaded and run in your own database. Make sure you have the appropriate privileges.","",13880899388035,"","","",14-MAY-24 01.15.06.973530000 AM,"PUBLIC","Patch72 presentation",2,"","MOCHAFLTBPWV5IMC1VPE7CHUK",115380342,1,,,"","","","","","","","","","","","","","",,"",13-DEC-22 01.31.41.258291000 PM,21-NOV-21 10.28.02.570482000 AM,"","APPROVED",21-NOV-21 10.28.02.569848000 AM,,"Auto Approved","","",16,""
278195795374389353908275765280435252516,21-NOV-21 10.12.04.615315000 AM,"",,"PATRICK.BAREL@GMAIL.COM","flashback_fb1","FLASHBACK_FB1","Accompanying script for the Flashback part of the presentation.
This script should be downloaded and run in your own database along with flashback_fb2.","",13880899388035,"","","",26-APR-24 02.09.03.500327000 PM,"PUBLIC","Patch72 presentation",2,"","MOCFQCBU2BZEU42Q6EY7A9GAE",115378395,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",21-NOV-21 10.14.20.170219000 AM,21-NOV-21 10.15.37.129808000 AM,"","APPROVED",21-NOV-21 10.15.37.129172000 AM,,"Auto Approved","","",14,""
273418122448619055275908553878515881897,06-OCT-21 04.37.05.500766000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Dangers of hidden dependencies for result cache functions: NLS settings","DANGERS OF HIDDEN DEPENDENCIES FOR RESULT CACHE FUNCTIONS: NLS SETTINGS","The function result cache relies on and ONLY on the parameter list to determine if the function body should be executed. If your function relies implicitly on NLS settings in a session, you could run into some serious problems. In other words, whenever you call TO_CHAR, ALWAYS include an explicit mask.","",273414881970502677979529004932221530167,"","","",04-APR-24 06.31.18.919192000 AM,"PUBLIC","",1,"","MGOF36GO331FFPYVE7YPB9MA4",107983137,6,,,"","","","","","","","","","","","","","",,"",06-OCT-21 04.45.11.746965000 PM,06-OCT-21 04.46.29.836433000 PM,"","APPROVED",06-OCT-21 04.44.22.675137000 PM,,"Auto Approved","","",11,""
274139202736677031443542057986409822742,13-OCT-21 02.53.12.297681000 PM,"",,"ORACLE@SISG.DE","DHBW Datenbanken Unit 1 - 06 - Cross Join v2","DHBW DATENBANKEN UNIT 1 - 06 - CROSS JOIN V2","DHBW Datenbanken Unit 1","",274142430053821230969473779565941384224,"","","",04-APR-24 11.31.02.625107000 AM,"PUBLIC","DHBW, Datenbanken, Vorlesung",41,"","MHT93EJ1U3HQ79RWSTF2YIJR8",109029860,1,,,"","","","","","","","","","","","","","",,"",16-DEC-23 06.35.26.029573000 PM,13-OCT-21 02.57.47.039621000 PM,"","APPROVED",13-OCT-21 02.53.12.297217000 PM,,"Auto Approved","","",98,""
273416245694690598372165888006618278606,06-OCT-21 04.24.13.036921000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Dangers of hidden dependencies for result cache functions: package variables","DANGERS OF HIDDEN DEPENDENCIES FOR RESULT CACHE FUNCTIONS: PACKAGE VARIABLES","The function result cache relies on and ONLY on the parameter list to determine if the function body should be executed. If your function references package-level variables, you could run into some serious problems.","",6659116995491,"","","",17-APR-24 12.48.58.677314000 PM,"PUBLIC","",2,"","MGOF36GK1ZEZHOL0RG9TUY5L8",107978924,6,,,"","","","","","","","","","","","","","",,"",06-OCT-21 04.27.37.445848000 PM,06-OCT-21 04.28.21.863490000 PM,"","APPROVED",06-OCT-21 04.24.43.712449000 PM,,"Auto Approved","","",5,""
274762049765741323435830113845232949139,19-OCT-21 02.51.12.082495000 PM,"",,"CHRIS.SAXON@ORACLE.COM","SQL join types examples","SQL JOIN TYPES EXAMPLES","Scripts for the Oct 2021 Ask TOM SQL Office Hours session on joins https://asktom.oracle.com/pls/apex/asktom.search?oh=15143","",274768356932729816558366545321751410776,"","","",10-AUG-24 05.23.58.964443000 PM,"PUBLIC","joins",45,"","MIUXBZBNNG6H4U3L6TG0208VG",109864292,1,,,"","","","","","","","","","","","","","",,"",07-MAY-24 09.06.56.738943000 AM,19-OCT-21 04.25.25.259801000 PM,"","APPROVED",19-OCT-21 04.25.25.259123000 PM,,"Auto Approved","","",328,""
274319541182239596766513356078181931872,15-OCT-21 07.20.28.606887000 AM,"",,"JOHN.THOMAS2@SKY.UK","Large strings","LARGE STRINGS","Verify large string handling in PL/SQL ","",274317380500632620572871000315105291896,"","","",29-JUL-24 07.55.59.707395000 AM,"PUBLIC","",9,"","MH5XUWZJTFT9J7KKY9G5UZ7UW",109274354,11,,,"","","","","","","","","","","","","","",,"",19-DEC-23 06.45.25.044693000 AM,15-OCT-21 07.20.28.611028000 AM,"","APPROVED",15-OCT-21 07.20.28.606677000 AM,15-OCT-21 12.47.53.590579000 PM,"sharon.kennedy@oracle.com","","",56,""
274893162686988551259478857580563583130,20-OCT-21 07.28.34.256494000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Generate regression test template for deterministic functions","GENERATE REGRESSION TEST TEMPLATE FOR DETERMINISTIC FUNCTIONS","They are the easiest to test comprehensively. If you don't have a framework like utPLSQL in place, then you can use this package to generate a great starting point - with no external dependencies. And while this approach works best for deterministic functions, it can help you with building test scripts for any sort of function, really.","",4306651559639,"","","",01-JUN-24 11.13.54.845386000 PM,"PUBLIC","",3,"","MI6C8WW05LRZQCZN78V9YNJQY",110208346,6,,,"","","","","","","","","","","","","","",,"",21-OCT-21 01.17.51.788002000 PM,21-OCT-21 01.19.24.996786000 PM,"","APPROVED",21-OCT-21 01.19.24.946066000 PM,,"Auto Approved","","",36,""
271753334454131424045638448732357454889,20-SEP-21 05.46.53.493222000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Splitting rows into bins - ntile vs width_bucket","SPLITTING ROWS INTO BINS - NTILE VS WIDTH_BUCKET","Scripts for the SQL Ask TOM Office Hours session on NTILE & WIDTH_BUCKET","",271749923597212034666438910055000226243,"","","",28-JUL-24 01.05.05.620322000 PM,"PUBLIC","ntile, width_bucket",15,"","MD4G7Y9EFP9IKNQRE8BPUVHIY",105659183,7,,,"","","","","","","","","","","","","","",,"",03-JAN-24 12.05.46.682226000 PM,21-SEP-21 04.03.44.923343000 PM,"","APPROVED",21-SEP-21 04.03.44.922830000 PM,,"Auto Approved","","",59,""
271085597235473376329063948279045842625,14-SEP-21 10.24.25.806972000 AM,"",,"CHRIS.SAXON@ORACLE.COM","SQL queries to split CSV or other delimited strings into rows","SQL QUERIES TO SPLIT CSV OR OTHER DELIMITED STRINGS INTO ROWS","Examples of how to split delimited strings into rows using SQL

Read the blog post for more details https://blogs.oracle.com/sql/post/split-comma-separated-values-into-rows-in-oracle-database","",271092437829518267931863615194125699489,"","","",06-MAY-24 10.31.54.655358000 AM,"PUBLIC","",33,"","MCZJRKQK4XMKO9925JBD3HSCZ",104781480,1,,,"","","","","","","","","","","","","","",,"",06-MAY-24 10.31.54.655199000 AM,16-SEP-21 12.39.52.310164000 PM,"","APPROVED",16-SEP-21 12.39.52.309625000 PM,,"Auto Approved","","",98,""
267350345690923962095840965239581058938,09-AUG-21 02.00.17.528522000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Curiousities of the returning clause","CURIOUSITIES OF THE RETURNING CLAUSE","The returning clause allows you to retrieve information about the SQL statement just executed, without having to run a second SQL statement. This script explores some of the more interesting and less common ways to use returning.","",267347509213427830924468744488531700874,"","","",04-APR-24 06.05.23.375751000 AM,"PUBLIC","",5,"","L6YESBEXIZ8EF69RI1E0W8XD4",100377264,4,,,"","","","","","","","","","","","","","",,"",11-AUG-21 02.55.37.625652000 PM,09-AUG-21 02.48.55.479156000 PM,"","APPROVED",09-AUG-21 02.48.55.473279000 PM,,"Auto Approved","","",26,""
268188109322488276580746220784379910523,17-AUG-21 02.53.31.074852000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Exploring table functions for Feuertip #22","EXPLORING TABLE FUNCTIONS FOR FEUERTIP #22","In which we use a table about animal species to explore the flexibility of the from clause of a query - not just tables and views, but also collections and functions!","",268188109322287594894690192341378685307,"","","",12-MAY-24 06.07.31.047119000 PM,"PUBLIC","",3,"","L8ARN0OGQ4BI3HHKXMA0O3MKT",101167531,6,,,"","","","","","","","","","","","","","",,"",27-SEP-21 07.59.48.614463000 AM,17-AUG-21 02.59.57.663221000 PM,"","APPROVED",17-AUG-21 02.59.57.662680000 PM,,"Auto Approved","","",38,""
266821541489211584124929771538316195567,04-AUG-21 12.33.10.669545000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","sqlerrm behavior for various possible error code values","SQLERRM BEHAVIOR FOR VARIOUS POSSIBLE ERROR CODE VALUES","sqlerrm not only returns the error message for the current error code (sqlcode). It also returns the generic error message if you pass an error code to it.","",266821500074053301880908387259033192457,"","","",11-JUL-24 03.54.18.998252000 PM,"PUBLIC","sqlcode,error",4,"","L53ZXPGIG3IZJG9HIVHWZ6EGV",99921009,4,,,"","","","","","","","","","","","","","",,"",11-JUL-24 03.54.18.998153000 PM,04-AUG-21 12.33.10.673098000 PM,"","APPROVED",04-AUG-21 12.33.10.669314000 PM,04-AUG-21 01.02.17.783169000 PM,"sharon.kennedy@oracle.com","","",19,""
266110990240210556133980065856607662813,28-JUL-21 05.31.38.431227000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Overloading with numeric types","OVERLOADING WITH NUMERIC TYPES","From the documentation: ""You can overload subprograms if their formal parameters differ only in numeric data type. PL/SQL looks for matching numeric parameters in this order: PLS_INTEGER (or BINARY_INTEGER, an identical data type);  NUMBER (including integer); BINARY_FLOAT; BINARY_DOUBLE. You cannot successfully overload VARCHAR2 and CHAR, but you can overload for different numeric types.","",266107530787385683762930909854955118219,"","","",04-APR-24 06.08.21.764948000 AM,"PUBLIC","overloading,number",4,"","L4Z0ZH3CAPBEX4TRA3XYBH8UI",99283788,4,,,"","","","","","","","","","","","","","",,"",21-FEB-22 06.43.32.859618000 AM,28-JUL-21 06.03.39.495549000 PM,"","APPROVED",28-JUL-21 05.31.38.430898000 PM,28-JUL-21 09.52.42.958524000 PM,"sharon.kennedy@oracle.com","","",23,""
262333769027360375353366181810847486074,22-JUN-21 01.34.05.618767000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Iterating Through Collections","ITERATING THROUGH COLLECTIONS","Collections can be sparse or dense. They can be associative arrays, nested tables, varrays. They can be integer-indexed or string-indexed. You might be on version 11g or 21c. You might want to ""merge"" data from a collection with data in a table. All of that can affect how you iterate through collection contents!","",2347098578203,"","","",25-JUL-24 01.27.10.907740000 AM,"PUBLIC","collection,iterator",21,"","LYWCSQ5LAD4FQ13EA3V25Q908",95802839,4,,,"","","","","","","","","","","","","","",,"",24-JUL-24 11.45.00.278696000 PM,23-JUN-21 12.24.24.507857000 PM,"","APPROVED",22-JUN-21 01.44.30.923834000 PM,22-JUN-21 02.56.56.801345000 PM,"sharon.kennedy@oracle.com","","",105,""
265472918399119370520735481281028720161,22-JUL-21 03.01.13.595208000 PM,"",,"SHARON.KENNEDY@ORACLE.COM","How to get the length of a CLOB","HOW TO GET THE LENGTH OF A CLOB","This script shows the ways you can get the length of a column of type CLOB.  The Oracle 21c documentation about LENGTH is here - https://docs.oracle.com/en/database/oracle/oracle-database/21/sqlrf/LENGTH.html#GUID-8F97F652-5AE8-4457-AFD7-7A6F25551E0C and that for DBMS_LOB.GETLENGTH is here https://docs.oracle.com/en/database/oracle/oracle-database/21/arpls/DBMS_LOB.html#GUID-FCA53D7B-8F81-4D70-A680-E39A75F80BDE","",265453507147738865565073824891471021151,"","","",11-MAY-24 10.54.41.141133000 AM,"PUBLIC","",4,"","L3X5PUIBQNI9BNSRAD5YUL5VN",98751676,1,,,"","","","","","","","","","","","","","",,"",11-JAN-23 08.38.46.544239000 PM,22-JUL-21 03.09.36.116935000 PM,"","APPROVED",22-JUL-21 03.09.36.113229000 PM,,"Auto Approved","","",49,""
203228873938172352602703501454842933692,04-DEC-19 05.10.35.249091000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Simple Demonstration of Dynamic Polymorphism","SIMPLE DEMONSTRATION OF DYNAMIC POLYMORPHISM","This code is explained in detail in my blog post: https://stevenfeuersteinonplsql.blogspot.com/2019/12/dynamic-polymorphism-in-object-types.html","",203228571439799900148606320126173262216,"","","",10-MAY-24 11.00.32.187612000 AM,"PUBLIC","object-oriented, class, object type",12,"","JB45RTM5JKV60G727Z74HB11A",38275469,4,,,"","","","","","","","","","","","","","",,"",07-JUL-23 08.35.18.663059000 PM,04-DEC-19 05.10.35.251437000 PM,"","APPROVED",04-DEC-19 05.10.35.247481000 PM,,"Auto Approved","","",67,""
202575976868366320487819767412270191014,28-NOV-19 10.41.17.120475000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Agile Database Development with JSON","AGILE DATABASE DEVELOPMENT WITH JSON","Scripts to support the presentation Agile DB development with JSON","",202567885414372684028651594682125164052,"","","",09-JUN-24 04.32.02.874519000 PM,"PUBLIC","JSON",54,"","JA93DI4QKKZXS5HQ55CWUNGEO",37872305,13,,,"","","","","","","","","","","","","","",,"",14-DEC-23 12.10.18.872306000 AM,29-NOV-19 12.59.39.477598000 PM,"","APPROVED",29-NOV-19 12.59.39.475777000 PM,,"Auto Approved","","",90,""
210082072047729776317842837560000908038,08-FEB-20 07.21.15.015565000 AM,"",,"ARNAB.PANJA@GMAIL.COM","VALIDATE_CONVERSION and CAST Functions in Oracle 12c","VALIDATE_CONVERSION AND CAST FUNCTIONS IN ORACLE 12C","This scripts shows how to use the VALIDATE_CONVERSION and the CAST functions and use them to show a sample data transformation from a source table to a target table.","",210081311404482690880044210650914368266,"","","",03-APR-24 06.13.33.785886000 PM,"PUBLIC","SQL, VALIDATE_CONVERSION, CAST, ORACLE 12c",4,"","KFNO0S3HYX1YAN5OARCSHU4LM",41641740,1,,,"","","","","","","","","","","","","","",,"",25-APR-22 02.21.22.606746000 AM,27-JUL-20 03.07.36.456539000 PM,"","APPROVED",27-JUL-20 03.07.36.456110000 PM,27-JUL-20 04.17.34.114750000 PM,"sharon.kennedy@oracle.com","","",23,""
208225786039151490374278756959450230952,21-JAN-20 01.43.24.072348000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","PL/SQL Puzzle: Get ORA-00001 to show up in output","PL/SQL PUZZLE: GET ORA-00001 TO SHOW UP IN OUTPUT","The code to accompany my Twitter puzzle and blog post: https://stevenfeuersteinonplsql.blogspot.com/2020/01/plsql-puzzle-getting-right-error.html","",208224930555121048532745536050901429514,"","","",20-JUL-24 06.40.01.374671000 PM,"PUBLIC","exception",15,"","JJ5LEHSKRKYB569G38K0TVNEI",40642718,4,,,"","","","","","","","","","","","","","",,"",20-JUL-24 06.40.01.374586000 PM,21-JAN-20 01.56.51.985684000 PM,"","APPROVED",21-JAN-20 01.48.18.322462000 PM,,"Auto Approved","","",53,""
206936158614760731740712142412593110900,09-JAN-20 04.42.39.130177000 AM,"",,"GUESTART@163.COM","Sparse Index, Function-Based Index and Virtual Column","SPARSE INDEX, FUNCTION-BASED INDEX AND VIRTUAL COLUMN","This Demo usually uses to learn and comprehend 'Sparse Index', 'Function-Based Index' and 'Virtual Column', which is coming from the newest blog note (https://blog.go-faster.co.uk/2020/01/sparse-indexing.html) of David Kurtz. Perhaps that SQL code is running on his TEST environment, but I slightly adjust and make them be able to perfectly run on Live SQL.","",206933841113621199746746592699259468476,"","","",17-APR-24 11.24.28.480549000 PM,"PUBLIC","Performance and Tuning, Execution Plan",22,"","JH5NWURN7W1LJAHK6UCCADRY6",40095905,3,,,"","","","","","","","","","","","","","",,"",01-MAY-23 08.12.45.169467000 PM,10-JAN-20 09.27.45.147003000 AM,"","APPROVED",09-JAN-20 04.42.39.129964000 AM,09-JAN-20 02.35.40.711879000 PM,"sharon.kennedy@oracle.com","","",68,""
210251261635870483625676742037588343984,09-FEB-20 11.08.40.732728000 PM,"",,"JGEBAL@GMAIL.COM","INSERT with LOG ERRORS and ERROR ROWCOUNT","INSERT WITH LOG ERRORS AND ERROR ROWCOUNT","The script provides a solution for counting number of ERROR records when performing INSERT ... SELECT ... LOG ERRORS ... statements.

It also shows how to count errors when using multi table insert with error logging.

PLEASE NOTE that the rollbacks performed in this script were executed along with the insert for the rollback to take effect.  Each statement in a script, and each 'Run' from within the SQL Worksheet, will have an implicit commit at the end due to the stateless nature of Live SQL.  If this script is executed as-is within Live SQL, your results will differ because the rollback is a separate statement.","",210252335195141100141480905059169093541,"","","",13-AUG-24 05.40.30.585469000 AM,"PUBLIC","LOG ERRORS, INSERT, SQL, DML ",76,"","JNIGFIIR668KL5OUMFB65M91Q",41799634,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",12-AUG-24 04.25.27.843317000 AM,11-FEB-20 12.35.58.463183000 AM,"","APPROVED",11-FEB-20 12.35.58.462791000 AM,11-FEB-20 01.43.21.160721000 PM,"sharon.kennedy@oracle.com","This script illustrate some interesting concepts but to be published on Live SQL, you would need to add heading an annotations explaining each step and especially explaining that the rollback needs to be executed at the same time as the insert to work on Live SQL - as autocommit after every run (which is different than most platforms given our disconnected nature).","",371,"N"
210307412443953228338811965236616762541,10-FEB-20 11.18.35.790586000 AM,"",,"CHRIS.SAXON@ORACLE.COM","DDL Methods to Delete Rows","DDL METHODS TO DELETE ROWS","Fast methods for deleting data using DDL.

Scripts to support blog post https://blogs.oracle.com/sql/how-to-delete-millions-of-rows-fast-with-sql","",210300430907121799603293664682661553016,"","","",06-JUN-24 05.46.07.131000000 AM,"PUBLIC","delete, alter table, truncate",38,"","JNHWAN5WMPSN3D3R7UXJHPP6D",41762230,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",06-JUN-24 05.46.07.130895000 AM,10-FEB-20 12.02.44.709210000 PM,"","APPROVED",10-FEB-20 12.02.44.708643000 PM,,"Auto Approved","","",207,""
210127530743398698886362228703938371836,08-FEB-20 07.20.36.004459000 PM,"",,"AJEETAM13.AK@GMAIL.COM","Finding Oracle Version","FINDING ORACLE VERSION","By running this command, we can find the current running version of Oracle. ","",210077307025908509277642116966235426682,"","","",21-JUL-22 06.33.10.990093000 AM,"PUBLIC","",5,"","JMIBIJ1HCAA0Z2N0CZ97XAFG0",41662419,3,,,"","","","","","","","","","","","","","",,"",13-MAR-22 11.03.14.562289000 PM,08-FEB-20 07.20.36.009151000 PM,"","APPROVED",08-FEB-20 07.20.36.004316000 PM,08-FEB-20 10.10.38.701088000 PM,"sharon.kennedy@oracle.com","","",37,"N"
204772100302818524827201757841923425713,19-DEC-19 11.17.25.948246000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Merry SQL Christmas!","MERRY SQL CHRISTMAS!","Just a bit of fun: 

Merry Xmas in SQL form :)","",204766938740346407607966579423007351039,"","","",04-APR-24 11.45.18.890425000 AM,"PUBLIC","",28,"","JEL8L0L9PMOH319SE4EYAK0ZN",39339255,1,,,"","","","","","","","","","","","","","",,"",28-DEC-21 03.17.35.788062000 AM,19-DEC-19 11.17.25.955691000 AM,"","APPROVED",19-DEC-19 11.17.25.948077000 AM,,"Auto Approved","","",77,""
208885062349404300758923685933301264139,27-JAN-20 10.54.09.097246000 PM,"",,"DIRK_VANHAUTE@AXI.BE","Demonstrating the power of join views","DEMONSTRATING THE POWER OF JOIN VIEWS","Views with joined data are very flexible.  The parent data is not needed, the parent table is not joined. This makes views, in which al parent tables are joined, flexible and fast.","",208881211783363484458923001961356360715,"","","",25-JUL-24 03.46.14.534896000 AM,"PUBLIC","view jon performance",16,"","JK8B0JQDXXD19YN0QS5MY8LSI",40962193,337949986681008890389062074985729416032,,,"","","","","","","","","","","","","","",,"",24-JUL-24 05.37.11.210573000 PM,27-JAN-20 11.12.19.870577000 PM,"","APPROVED",27-JAN-20 10.54.09.097053000 PM,27-JAN-20 11.01.38.089164000 PM,"sharon.kennedy@oracle.com","","",91,""
203831816708897907496131628704272661096,10-DEC-19 11.27.14.319326000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","PL/SQL Puzzle: string-indexed collection","PL/SQL PUZZLE: STRING-INDEXED COLLECTION","When you are using a string-indexed collection and relying on implicit conversions, you might be surprised at the results. This puzzle is explained fully on my blog post https://stevenfeuersteinonplsql.blogspot.com/2019/12/plsql-puzzle-when-implicit-conversions.html","",203831010092373129786960357333880408902,"","","",04-APR-24 06.01.05.988416000 AM,"PUBLIC","",5,"","JC3YOYT759KSEORPENOA0F892",38808397,4,,,"","","","","","","","","","","","","","",,"",23-AUG-20 05.53.16.747761000 AM,11-DEC-19 12.20.43.351462000 PM,"","APPROVED",11-DEC-19 12.17.28.242051000 PM,,"Auto Approved","","",29,""
205877475145527786557609324963483502501,30-DEC-19 02.26.04.798290000 AM,"",,"GUESTART@163.COM","Observing Spending Time of Separately Querying COUNT(*|1|id|flag) on some Test Tables","OBSERVING SPENDING TIME OF SEPARATELY QUERYING COUNT(*|1|ID|FLAG) ON SOME TEST TABLES","This demo usually uses to observe the spending time of separately querying COUNT(*), COUNT(1), COUNT(id) and COUNT(flag) on some 'Test' tables. Using 3 tables saving the spending time querying COUNT test table, some procedures dynamically creating test table, a special function and another procedure to build this pretty interesting demo.
Exactly speaking, this demo should have been splitted into 4 sections (in other words, 4 small pieces of demo):
(1) Demo1 used to build test tables (using a very simple approach CTAS) with 'NO PARALLEL';
(2) Demo2 is basically similar to 'Demo1' and its only difference is at a table property 'PARALLEL 10' when building a mode of test tables;
(3) Demo3 usually builds test tables (creating some table structures firstly with 'NO PARALLEL' and then adding the appropriate check or index to those tables, at last inserting several test data using hint 'APPEND');
(4) Demo4 is also basically similar to 'Demo3' and its only difference is also at a table property 'PARALLEL 10';
Of course, all Demos previously mentioned use the similar (3 tables) ER Diagram.
(1) The ER Diagram of 'Demo1' consists of three tables: 'cnt_method', 'tab_stru' and 'cnt_spd_time';
(2) The ER Diagram of 'Demo2' includes this three tables: 'cnt_method_2', 'tab_stru_2' and 'cnt_spd_time_2';
(3) The ER Diagram of 'Demo3' contains 3 tables: 'cnt_method_3', 'tab_stru_3' and 'cnt_spd_time_3';
(4) The ER Diagram of 'Demo4' has these 3 tables: 'cnt_method_4', 'tab_stru_4' and 'cnt_spd_time_4';
By the way all these test tables are dynamically generated by some Oracle PL/SQL procedures.
Each table all has the same two columnns both 'id' and 'flag', column 'id' is continuously increasing from 1 to '1e4' and column 'flag' has 4 types of duplicate values 'low', 'mid', 'high' and 'unknown'; 
The test tables in 'Demo1' have 'TEST', 'TEST_PK', 'TEST_BI' and 'TEST_PK_BI', table 'TEST' has neither PRIMARY KEY nor BITMAP INDEX, table 'TEST_PK' has only PRIMARY KEY, table 'TEST_BI' has only BITMAP INDEX, and table 'TEST_PK_BI' has both PRIMARY KEY and BITMAP INDEX.
The test tables in 'Demo2' have 'TEST2', 'TEST2_PK', 'TEST2_BI' and 'TEST2_PK_BI', table 'TEST2' has neither PRIMARY KEY nor BITMAP INDEX, table 'TEST2_PK' has only PRIMARY KEY, table 'TEST2_BI' has only BITMAP INDEX, and table 'TEST2_PK_BI' has both PRIMARY KEY and BITMAP INDEX.
The test tables in 'Demo3' have 'TEST3', 'TEST3_PK', 'TEST3_BI' and 'TEST3_PK_BI', table 'TEST3' has neither PRIMARY KEY nor BITMAP INDEX, table 'TEST3_PK' has only PRIMARY KEY, table 'TEST3_BI' has only BITMAP INDEX, and table 'TEST3_PK_BI' has both PRIMARY KEY and BITMAP INDEX.
The test tables in 'Demo4' have 'TEST4', 'TEST4_PK', 'TEST4_BI' and 'TEST4_PK_BI', table 'TEST4' has neither PRIMARY KEY nor BITMAP INDEX, table 'TEST4_PK' has only PRIMARY KEY, table 'TEST4_BI' has only BITMAP INDEX, and table 'TEST4_PK_BI' has both PRIMARY KEY and BITMAP INDEX.
There has another one more important point being emphasized here, my Demo(s) has all tested on Oracle 18.3 and 11.2 (https://github.com/guestart/A-Demo-Spending-Time-of-Querying-COUNT-table). So I am coming here to do some test.","",205873234931370074321237518901031124256,"","","",02-AUG-24 09.37.17.728204000 PM,"PUBLIC","Spending Time Querying COUNT table",24,"","JGO4MJ5NG3NDW0F2J39OWRKXP",39811974,3,,,"","","","","","","","","","","","","","",,"",05-APR-24 01.28.32.316840000 AM,04-JAN-20 12.29.04.382090000 AM,"","APPROVED",31-DEC-19 08.54.05.273617000 AM,31-DEC-19 09.21.26.395014000 PM,"sharon.kennedy@oracle.com","","",121,""
199783745491611490037424031310589603132,01-NOV-19 05.31.19.246047000 PM,"",,"CHRIS.SAXON@ORACLE.COM","How to Find the Two Days with the Most Orders with SQL","HOW TO FIND THE TWO DAYS WITH THE MOST ORDERS WITH SQL","An breakdown of how the database processes a top-N-by-group query to find the two groups with the most rows.","",199780163287334345143510347385882168424,"","","",01-AUG-24 06.24.15.751415000 AM,"PUBLIC","group by, order by",9,"","I6MCJDEAMTS7A6MZ25GYR1A13",35778641,1,,,"","","","","","","","","","","","","","",,"",10-DEC-20 02.24.27.161230000 PM,01-NOV-19 05.40.31.077549000 PM,"","APPROVED",01-NOV-19 05.40.31.076897000 PM,,"Auto Approved","","",45,""
196993573621056024755435596991794183325,06-OCT-19 12.28.33.726562000 AM,"",,"JEFFREY.KEMP@JK64.COM","Calculating Anniversary Dates","CALCULATING ANNIVERSARY DATES","Determining what day of the year a person's birthday will fall on is not exactly trivial, even with Oracle's builtin ADD_MONTHS function. This code sample gives a simple function that can be used to determine the anniversary given any birth date and a year.","",196994769635117622586167445950311349964,"","","",16-AUG-24 08.02.11.056117000 PM,"PUBLIC","anniversary birthday add_months",8,"","I148RD48WVY0PBCXJGG3JPJ4V",33951543,1,,,"","","","","","","","","","","","","","",,"",06-FEB-24 03.37.40.360607000 AM,06-OCT-19 12.28.33.732611000 AM,"","APPROVED",06-OCT-19 12.28.33.726335000 AM,,"Auto Approved","","",83,""
199376967213900482165994134682131375420,28-OCT-19 08.08.01.950119000 PM,"",,"BEDA.HAMMERSCHMIDT@ORACLE.COM","JSON Path expressions and simplified syntax","JSON PATH EXPRESSIONS AND SIMPLIFIED SYNTAX","Trailing functions, syntax simplification, etc","",2864984185464,"","","",30-JUL-24 06.28.51.391155000 AM,"PUBLIC","Json path language ",71,"","I8F9Y27GU5Q5Y3XEAQJLFNFJ0",36570402,13,,,"","","","","","","","","","","","","","",,"",30-JUL-24 06.28.51.391042000 AM,12-NOV-19 04.54.52.480757000 PM,"","APPROVED",12-NOV-19 04.54.52.477312000 PM,,"Auto Approved","","",128,""
199754807981180202845373955662494219597,01-NOV-19 10.44.47.380277000 AM,"",,"CHRIS.SAXON@ORACLE.COM","How to Count the Number of Orders Each Day with SQL","HOW TO COUNT THE NUMBER OF ORDERS EACH DAY WITH SQL","An example of using group by to get daily order totals.","",199755556159572767471294093835266299826,"","","",08-AUG-24 04.07.19.589953000 PM,"PUBLIC","group by",5,"","I6L2XINXEHQCML8O93N33DMOX",35774392,1,,,"","","","","","","","","","","","","","",,"",20-SEP-23 11.53.30.797863000 AM,01-NOV-19 04.18.14.983421000 PM,"","APPROVED",01-NOV-19 04.18.14.982777000 PM,,"Auto Approved","","",75,""
200412422660653532619562333269463316566,07-NOV-19 06.16.12.842287000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","PL/SQL Puzzle 1: What can be removed?","PL/SQL PUZZLE 1: WHAT CAN BE REMOVED?","Published as a Twitter quiz on Nov 6, 2019: https://twitter.com/sfonplsql/status/1192164495654825984. Explored in my blog post: https://stevenfeuersteinonplsql.blogspot.com/2019/11/plsql-puzzle-what-code-can-be-removed.html","",12384496196470,"","","",03-APR-24 02.44.04.674886000 PM,"PUBLIC","quiz,puzzle",10,"","I7MGHP3WCNHDJC2ZESYSIREG9",36211771,4,,,"","","","","","","","","","","","","","",,"",11-MAY-20 06.56.21.084387000 AM,07-NOV-19 09.44.42.359080000 PM,"","APPROVED",07-NOV-19 06.16.43.738638000 PM,,"Auto Approved","","",44,""
196525056187301501721236781503529795123,01-OCT-19 12.50.12.383383000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Get Count First","GET COUNT FIRST","Different techniques for getting the count of the rows from a query ""up front"". Discussed in the October 2019 PL/SQL Office Hours session. https://asktom.oracle.com/pls/apex/asktom.search?office=401","",5323011433791,"","","",04-APR-24 06.15.12.776375000 AM,"PUBLIC","count",3,"","I1DZ0VXMB8MOTT1WXMDIL26XI",33653736,4,,,"","","","","","","","","","","","","","",,"",07-MAY-22 07.24.18.063828000 PM,01-OCT-19 12.50.27.051278000 PM,"","APPROVED",01-OCT-19 12.50.27.050687000 PM,,"Auto Approved","","",35,""
196001703059702475240040058331266184075,26-SEP-19 12.41.21.815213000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","The my_commit package","THE MY_COMMIT PACKAGE","Use my_commit.perform_commit in place of a direct call to the COMMIT; statement. This will give you more flexibility when testing your code, since you can disable your commit processing with a call to my_commit.turn_off. You can also turn on tracing so that whenever you call perform_commit, a trace of that action will be displayed with DBMS_OUTPUT.PUT_LINE.","",196002664657429754336507017363804823747,"","","",18-MAY-24 10.43.01.295306000 PM,"PUBLIC","commit",,"","I0JZM7H3XZIHAPNKL6F4GPXX5",33360127,4,,,"","","","","","","","","","","","","","",,"",,26-SEP-19 12.41.21.817478000 PM,"","APPROVED",26-SEP-19 12.41.21.815018000 PM,,"Auto Approved","","",40,""
197349244987171494310777394837798390713,09-OCT-19 10.02.17.929595000 AM,"",,"CHRIS.SAXON@ORACLE.COM","How to Find Patterns in Your Data with SQL Using Match_Recognize","HOW TO FIND PATTERNS IN YOUR DATA WITH SQL USING MATCH_RECOGNIZE","Scripts for the presentation ""How to Find Patterns in Your Data with SQL"".

Find the slides at https://www.slideshare.net/ChrisSaxon1/how-to-find-patterns-in-your-data-with-sql","",197349341092895925012475579035812532717,"","","",11-OCT-23 05.55.39.042574000 PM,"PUBLIC","match_recognize",13,"","I2QMPB7NVP3HZV5ICU7YRKWCQ",34171173,7,,,"","","","","","","","","","","","","","",,"",09-SEP-20 08.13.06.809848000 PM,09-OCT-19 02.58.29.490421000 PM,"","APPROVED",09-OCT-19 02.58.29.489867000 PM,,"Auto Approved","","",44,""
197912461512052954094334978791876214173,14-OCT-19 07.29.29.056931000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","MAP and ORDER Methods for Object Type Comparison","MAP AND ORDER METHODS FOR OBJECT TYPE COMPARISON","These are special member methods - map or order methods - that we use to tell Oracle Database how to compare two objects of the same datatype. This capability is critical when we want to perform an equality test in PL/SQL or when sorting objects in SQL. This script accompanies my blog post on the same topic: https://stevenfeuersteinonplsql.blogspot.com/2019/10/comparison-methods-for-object-types.html","",12923900176694,"","","",03-APR-24 02.29.16.571572000 PM,"PUBLIC","object type,map,order,comparison",16,"","I3L97U5TXNCGN0WHDWFQTHMPB",53869719,4,,,"","","","","","","","","","","","","","",,"",04-NOV-22 02.30.19.107537000 PM,07-JUL-20 12.49.26.755907000 PM,"","APPROVED",14-OCT-19 07.30.37.589904000 PM,,"Auto Approved","","",66,""
196543415373492216171954225498089464790,01-OCT-19 04.32.34.365270000 PM,"",,"CHRIS.SAXON@ORACLE.COM","How to Join Inside Inline Views with LATERAL","HOW TO JOIN INSIDE INLINE VIEWS WITH LATERAL","An overview of the LATERAL clause. This allows you to join tables to the left of an inline view inside the subquery.","",196540326720354069327136505770092976834,"","","",22-AUG-24 09.04.27.797072000 AM,"PUBLIC","lateral",23,"","I1E5NATECGS0IXGNFDGENGHCZ",33666755,3,,,"","","","","","","","","","","","","","",,"",22-AUG-24 09.04.27.796906000 AM,01-OCT-19 04.45.24.306863000 PM,"","APPROVED",01-OCT-19 04.45.24.306268000 PM,,"Auto Approved","","",135,""
199789144094280565961823414610580621414,01-NOV-19 06.31.46.684756000 PM,"",,"CHRIS.SAXON@ORACLE.COM","How to Find Orders with a Total Value Greater Than X with SQL","HOW TO FIND ORDERS WITH A TOTAL VALUE GREATER THAN X WITH SQL","A breakdown of how SQL processes aggregate filters with a having clause","",199788712786426369283342341366025469385,"","","",01-AUG-24 06.25.19.581983000 AM,"PUBLIC","group by, having",11,"","I6LRL2QTC5AWXWMUH2SO39RMG",35781105,1,,,"","","","","","","","","","","","","","",,"",21-SEP-22 01.46.02.723052000 PM,01-NOV-19 06.36.51.183387000 PM,"","APPROVED",01-NOV-19 06.35.00.275581000 PM,,"Auto Approved","","",62,""
198942837107432679195780426150206691523,24-OCT-19 03.52.27.455863000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","PLSQL Puzzle","PLSQL PUZZLE","Can you come up with just ONE STATEMENT to add to plsqlpuzzle_proc so that it can execute without terminating with an unhandled exception?","",198938893607145887247603760029856580864,"","","",11-AUG-24 09.51.59.647024000 AM,"PUBLIC","",59,"","I49RCJPG292GYG2FGTLVV0MDX",35247406,4,,,"","","","","","","","","","","","","","",,"",06-NOV-23 01.49.01.742251000 PM,11-DEC-19 12.16.42.973581000 PM,"","APPROVED",11-DEC-19 12.16.42.973072000 PM,,"Auto Approved","","",465,""
199039870915786777582326967598758671106,25-OCT-19 02.36.13.528318000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","PL/SQL Puzzler solutions: add one statement to avoid unhandled exception","PL/SQL PUZZLER SOLUTIONS: ADD ONE STATEMENT TO AVOID UNHANDLED EXCEPTION","This script accompanies my blog post exploring a PL/SQL puzzle I published on Twitter. For all the details and fun:

https://stevenfeuersteinonplsql.blogspot.com/2019/10/plsql-puzzle-add-one-statement-to-stop.html","",2129990269491,"","","",04-APR-24 05.57.50.450626000 AM,"PUBLIC","",6,"","I5FECKEHAA5M7BPGO79CO0J4B",35306467,4,,,"","","","","","","","","","","","","","",,"",28-OCT-19 03.45.15.584638000 AM,25-OCT-19 03.02.09.541434000 PM,"","APPROVED",25-OCT-19 03.02.09.540757000 PM,,"Auto Approved","","",25,""
200397143434768425752164746864068576884,07-NOV-19 02.06.15.269647000 PM,"",,"CHRIS.SAXON@ORACLE.COM","How to Count the Number of Orders EVERY Day for EVERY Customer with SQL","HOW TO COUNT THE NUMBER OF ORDERS EVERY DAY FOR EVERY CUSTOMER WITH SQL","An example of how to answer the question: 

How many orders did each customer place each day? On days where the customer ordered nothing, show a count of zero.

You can do this using a partitioned outer join, as discussed below.","",200392103157359687981282075898796486609,"","","",18-AUG-24 04.26.38.611197000 AM,"PUBLIC","partitioned outer join, group by",27,"","I7LPIJTAUHIDIQMOIL2G6GFN2",36184514,1,,,"","","","","","","","","","","","","","",,"",28-MAY-24 05.34.43.277380000 AM,07-NOV-19 02.20.16.492107000 PM,"","APPROVED",07-NOV-19 02.20.16.491417000 PM,,"Auto Approved","","",153,""
195817329868047359815737684247813204887,24-SEP-19 06.19.29.532765000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Reset Package State - Just One","RESET PACKAGE STATE - JUST ONE","DBMS_SESSION.RESET_PACKAGE resets the state of *all* packages initialized in your session (including, for example, DBMS_OUTPUT). But what if you want to be able to reset the state of just one package? You have to do it yourself. Here's an example.","",12676297108286,"","","",10-JUN-24 11.49.11.973694000 AM,"PUBLIC","reset,pa kage state",11,"","IZ9DGXRO511RNCHDZZRWQR3DU",33219009,6,,,"","","","","","","","","","","","","","",,"",26-JAN-24 08.16.11.210766000 AM,01-OCT-19 12.46.14.737456000 PM,"","APPROVED",24-SEP-19 06.21.00.031827000 PM,,"Auto Approved","","",29,""
196746437767182463462531114540141787773,03-OCT-19 03.24.19.587759000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Using Object Types in Relational Tables","USING OBJECT TYPES IN RELATIONAL TABLES","This script accompanies my blog post of the same title, part of a series on using the object-oriented features of Oracle PL/SQL (object types). The link: https://stevenfeuersteinonplsql.blogspot.com/2019/10/using-object-types-in-relational-tables.html","",16154876226531,"","","",03-APR-24 02.41.08.271359000 PM,"PUBLIC","object type,table",11,"","I1QZG8KKMY9WQRGQIMNGD53NH",33820387,4,,,"","","","","","","","","","","","","","",,"",12-MAR-23 03.51.26.025178000 AM,03-OCT-19 03.25.03.350749000 PM,"","APPROVED",03-OCT-19 03.25.03.338547000 PM,,"Auto Approved","","",56,""
199776608482127459793062973091401626521,01-NOV-19 04.33.16.447157000 PM,"",,"CHRIS.SAXON@ORACLE.COM","How to Count the Number of Orders EVERY Day with SQL","HOW TO COUNT THE NUMBER OF ORDERS EVERY DAY WITH SQL","An overview of how to get the total number of orders placed each day, including days with no orders.","",199780163287334345143510347385882168424,"","","",28-MAY-24 06.14.41.929595000 AM,"PUBLIC","group by, count, outer join",14,"","I6L2TTKJ9KJJVTV3RH1V0YSYW",35775608,1,,,"","","","","","","","","","","","","","",,"",03-MAR-24 07.08.12.513054000 PM,01-NOV-19 04.40.11.570775000 PM,"","APPROVED",01-NOV-19 04.40.11.570092000 PM,,"Auto Approved","","",68,""
165306824923666271132863669620297082814,06-DEC-18 03.18.30.066453000 PM,"",,"KAYAGURALARAVIKUMAR@GMAIL.COM","To run any procedure and get the output values","TO RUN ANY PROCEDURE AND GET THE OUTPUT VALUES","To run any procedure and get the output values dynamically. Normally lot of client  application call the procedures directly at many areas if any changes happens in future they have to change the code in application at all the place.This procedures will help to call any procedure.   ","",165299025579701980878773503306551177869,"","","",04-APR-24 06.00.58.589575000 AM,"PUBLIC","DBMS_SQL,Dynamical Sql",5,"","HNH0UUTYKIHIUZ8YAS845XE0B",20092038,6,,,"","","","","","","","","","","","","","",,"",22-DEC-23 02.49.34.833561000 AM,07-DEC-18 07.04.21.748306000 AM,"","APPROVED",07-DEC-18 07.04.21.742069000 AM,07-DEC-18 02.24.08.595074000 PM,"sharon.kennedy@oracle.com","","",65,""
167577535998181916822764414864062038836,28-DEC-18 08.58.03.124546000 AM,"",,"PATRICK.BAREL@GMAIL.COM","Polymorphic Table Function Split Column Variable Column Name","POLYMORPHIC TABLE FUNCTION SPLIT COLUMN VARIABLE COLUMN NAME","A Polymorphic Table Function to split an arbitrary column of a table using ; as a separator","",1881660798467,"","","",25-MAR-24 10.45.01.293411000 AM,"PUBLIC","Polymorphic Table Function Split Arbitrary Column",3,"","HRI1LOVBO1GL0I41BWUW18D9Y",21134407,1,,,"","","","","","","","","","","","","","",,"",30-DEC-18 07.07.39.936971000 AM,31-DEC-18 03.36.13.579839000 AM,"","APPROVED",31-DEC-18 03.36.13.579266000 AM,31-DEC-18 03.39.16.074583000 PM,"sharon.kennedy@oracle.com","Same as the comments on the first script submission, please remove statements 1 & 2 as they are repetitious of the description and also please run this and then replace the saved script so that the results will display.","",9,""
168823858046323420268697421192266170348,09-JAN-19 07.34.36.006961000 AM,"",,"REACHMERCENOW@GMAIL.COM","Bulk Collect with Plsql Nested Table","BULK COLLECT WITH PLSQL NESTED TABLE","Using Bulk Collect with plsql nested table and %Rowtype attribute","",168821277205976734364282705943280123184,"","","",03-APR-24 02.34.53.825757000 PM,"PUBLIC","BULK COLLECT",14,"","HS0X9101TBPIP98VXQH8HG800",21420592,4,,,"","","","","","","","","","","","","","",,"",11-JAN-23 08.24.48.449242000 AM,09-JAN-19 07.34.36.009658000 AM,"","APPROVED",09-JAN-19 07.34.36.006611000 AM,09-JAN-19 02.14.29.581649000 PM,"sharon.kennedy@oracle.com","","",78,""
167577687573113938624412695492167397011,28-DEC-18 09.00.12.148265000 AM,"",,"PATRICK.BAREL@GMAIL.COM","Polymorphic Table Function Split Column Variable Column Name Variable Separator","POLYMORPHIC TABLE FUNCTION SPLIT COLUMN VARIABLE COLUMN NAME VARIABLE SEPARATOR","A Polymorphic Table Function to split an arbitrary column of a table using an arbitrary separator","",1881660798467,"","","",25-MAR-24 10.43.30.599882000 AM,"PUBLIC","Polymorphic Table Function Split Arbitrary Column Arbitrary Separator",4,"","HRI1LOVBPX9SG4UPO20GM5BGM",21134383,1,,,"","","","","","","","","","","","","","",,"",24-JAN-19 08.08.06.812591000 AM,31-DEC-18 03.35.38.999713000 AM,"","APPROVED",31-DEC-18 03.35.38.992695000 AM,31-DEC-18 03.39.49.386668000 PM,"sharon.kennedy@oracle.com","Same as the comments on the first script submission, please remove statements 1 & 2 as they are repetitious of the description and also please run this and then replace the saved script so that the results will display.","",13,""
167574491571391580456149682961320130715,28-DEC-18 08.15.59.172792000 AM,"",,"PATRICK.BAREL@GMAIL.COM","Polymorphic Table Function Split Column","POLYMORPHIC TABLE FUNCTION SPLIT COLUMN","A Polymorphic Table Function to split the first column of a table using ; as a separator","",105291948962522,"","","",26-MAR-24 03.43.01.041189000 PM,"PUBLIC","Polymorphic Table Function Split Column",12,"","HRI1FTACAXS5P7S4QSSETBV8X",21134396,1,,,"","","","","","","","","","","","","","",,"",30-DEC-18 07.07.04.901126000 AM,31-DEC-18 03.35.56.698898000 AM,"","APPROVED",31-DEC-18 03.35.56.698226000 AM,31-DEC-18 03.39.34.582021000 PM,"sharon.kennedy@oracle.com","Please remove statements 1 & 2 as they are repetitious of the description and also please run this and then replace the saved script so that the results will display.","",22,""
168624254818695794018245131421902088505,07-JAN-19 02.54.15.606654000 PM,"",,"REACHMERCENOW@GMAIL.COM","Schema-level Nested Tables","SCHEMA-LEVEL NESTED TABLES","Creating schema-level nested tables and using table operator to operate with them.","",168624254804010972087386230836746168633,"","","",06-MAY-24 08.26.40.498231000 PM,"PUBLIC","",7,"","HSPDZJAYVZ4NCE5IIA8ELTW2W",21369130,4,,,"","","","","","","","","","","","","","",,"",03-NOV-23 09.50.33.917424000 AM,07-JAN-19 02.54.15.614579000 PM,"","APPROVED",07-JAN-19 02.54.15.606195000 PM,07-JAN-19 04.12.38.648291000 PM,"sharon.kennedy@oracle.com","","",54,""
165823574856153986382067359982979544222,11-DEC-18 01.57.29.177354000 PM,"",,"BEDA.HAMMERSCHMIDT@ORACLE.COM","JSON indexing with functional indexes and JSON search index","JSON INDEXING WITH FUNCTIONAL INDEXES AND JSON SEARCH INDEX","This script describes how you can index JSON documents with functional (B-Tree) indexes","",10085638386282,"","","",09-JUN-24 04.36.53.255647000 PM,"PUBLIC","JSON, index, indexing, JSON Search index, functional index, JSON performance",36,"","HN539208WPWEDGMFJFNBLTR4D",20342908,13,,,"","","","","","","","","","","","","","",,"",04-APR-24 10.11.32.375096000 AM,08-JAN-19 08.57.11.025708000 AM,"","APPROVED",11-DEC-18 02.31.41.166073000 PM,,"Auto Approved","","",118,""
168747188841802404107835844900015498279,08-JAN-19 02.05.08.732766000 PM,"",,"REACHMERCENOW@GMAIL.COM","Working with Varrays","WORKING WITH VARRAYS","Using collection methods such as LIMIT, COUNT, FIRST, EXTEND, TRIM and DELETE for working with Varrays. ","",168746281838069205918240379889055852554,"","","",24-JUL-24 11.05.47.646389000 PM,"PUBLIC","Varray",8,"","HSU3VIOAJ68NGX36N4JKI0HNM",21397278,4,,,"","","","","","","","","","","","","","",,"",07-MAY-23 09.45.36.769083000 PM,08-JAN-19 02.05.08.737491000 PM,"","APPROVED",08-JAN-19 02.05.08.732414000 PM,08-JAN-19 03.00.57.097397000 PM,"sharon.kennedy@oracle.com","","",100,""
165930689250826598001259377962324252826,12-DEC-18 02.47.02.691525000 PM,"",,"BEDA.HAMMERSCHMIDT@ORACLE.COM","Flattening JSON arrays with JSON_TABLE","FLATTENING JSON ARRAYS WITH JSON_TABLE","simple examples how to project out values from a JSON array","",126184311191692,"","","",09-JUN-24 04.36.05.661475000 PM,"PUBLIC","JSON_TABLE",39,"","HOB7SQ6ON1362GJMK4HAY3IUK",20394207,13,,,"","","","","","","","","","","","","","",,"",29-NOV-23 07.13.22.902391000 PM,12-DEC-18 02.47.40.345912000 PM,"","APPROVED",12-DEC-18 02.47.40.345129000 PM,,"Auto Approved","","",99,""
164319064037021079621667705560431749064,27-NOV-18 04.38.03.095336000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","IRR function in PL/SQL","IRR FUNCTION IN PL/SQL","Calculating the IRR, ie, the Internal Rate of Return using the Newton Raphson method (although apparently it is more commonly referred to as Newton’s method).","",164299793119432766430146554355054695964,"","","",04-APR-24 06.21.27.878471000 AM,"PUBLIC","irr, excel",2,"","HLQ6TQ9LU21JK4VKDS51T4SPM",19551987,6,,,"","","","","","","","","","","","","","",,"",22-SEP-20 09.49.07.113293000 AM,27-NOV-18 04.38.03.101493000 AM,"","APPROVED",27-NOV-18 04.38.03.094936000 AM,,"Auto Approved","","",30,""
167497363076747137026772562475102113116,27-DEC-18 03.01.58.040013000 PM,"",,"STEW.ASHTON@GMAIL.COM","Allow references to package variables outside of static SQL","ALLOW REFERENCES TO PACKAGE VARIABLES OUTSIDE OF STATIC SQL","Packaged procedure that finds references to variables defined in package specifications. It generates a function that returns the variable's value, adds that function to a WITH clause and replaces the variable with a call to the function. Compatible with the SQL Translation Framework.
See blog post for details:
https://stewashton.wordpress.com/2018/12/27/make-public-package-variables-available-to-sql/","",167495157623363628159753515675241067176,"","","",10-MAY-24 07.26.54.334774000 AM,"PUBLIC","package variables",1,"","HQURU26PRGCCECH4817W2680A",21076718,3,,,"","","","","","","","","","","","","","",,"",27-DEC-18 03.02.44.129647000 PM,29-DEC-18 07.39.18.918316000 AM,"","APPROVED",27-DEC-18 03.01.58.039767000 PM,27-DEC-18 03.04.00.137351000 PM,"sharon.kennedy@oracle.com","","",28,""
165930020817307832579930928360180024032,12-DEC-18 02.36.40.633663000 PM,"",,"PGALIMUTTI@GMAIL.COM","Excel Pivot like functionality","EXCEL PIVOT LIKE FUNCTIONALITY","These scripts use Sales History (SH) schema to generate tables and views. Based on real world scenario the purpose is to demonstrate excel pivoting like capabilities using sql","",165919649980750075257095713992915738137,"","","",19-JUL-24 12.23.50.758147000 PM,"PUBLIC","pivot",58,"","HOCACD2RIAA922R26UI6WR9HE",20393679,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",21-MAR-24 04.57.43.271324000 PM,12-DEC-18 03.17.28.291640000 PM,"","APPROVED",12-DEC-18 02.36.40.633007000 PM,12-DEC-18 02.51.23.164156000 PM,"sharon.kennedy@oracle.com","","",220,""
168747427285803668213752175602493446769,08-JAN-19 02.09.53.325379000 PM,"",,"REACHMERCENOW@GMAIL.COM","Set operations with PLSQL Nested Tables","SET OPERATIONS WITH PLSQL NESTED TABLES","Set operations with PLSQL Nested Tables using MULTISET","",168714699392206940441707953089634036766,"","","",24-MAY-24 12.00.31.185648000 PM,"PUBLIC","MULTISET",5,"","HSU3VIOAK31TXJTU1AO33XEUA",21397445,4,,,"","","","","","","","","","","","","","",,"",24-MAY-24 12.00.31.185542000 PM,08-JAN-19 02.09.53.328010000 PM,"","APPROVED",08-JAN-19 02.09.53.322249000 PM,08-JAN-19 03.04.32.375873000 PM,"sharon.kennedy@oracle.com","","",39,""
168642867126070627392257601840643493606,07-JAN-19 03.01.34.453311000 PM,"",,"JSILVAJ@GMAIL.COM","Function to return values between xml tags","FUNCTION TO RETURN VALUES BETWEEN XML TAGS","C_lobs columns usually have xml code, this function help us to retrieve data between tags through a simple way and less code.
If you have more than one tag with same name retrieves concatenate values ","",168642867125654756910310169404544569062,"","","",03-APR-24 02.40.56.790703000 PM,"PUBLIC","",12,"","HSPD2UV4B88R49U5YTSZZT3U2",21370030,4,,,"","","","","","","","","","","","","","",,"",27-OCT-23 07.18.26.286347000 PM,07-JAN-19 03.16.02.262835000 PM,"","APPROVED",07-JAN-19 03.01.34.449917000 PM,07-JAN-19 04.13.15.379375000 PM,"sharon.kennedy@oracle.com","","",70,""
168761347539810632161207825038096131203,08-JAN-19 05.19.38.948776000 PM,"",,"JSILVAJ@GMAIL.COM","Pipelined table function split string into number of tokens per row","PIPELINED TABLE FUNCTION SPLIT STRING INTO NUMBER OF TOKENS PER ROW","Pipelined table function with 3 parameters last two are default,
case divisor is not equal to zero leaves last row with the rest of tokens.","",168761347537535433768693092931299107971,"","","",04-APR-24 05.57.48.607968000 AM,"PUBLIC","",6,"","HSV0XZJD0P8MWXLVN77D6TU7N",21404790,4,,,"","","","","","","","","","","","","","",,"",23-JAN-22 04.30.57.083170000 PM,08-JAN-19 05.51.45.624898000 PM,"","APPROVED",08-JAN-19 05.51.45.624019000 PM,08-JAN-19 06.37.58.807133000 PM,"sharon.kennedy@oracle.com","","",70,""
169493464104122152837460862327937720455,15-JAN-19 05.22.28.985508000 PM,"",,"SHARON.KENNEDY@ORACLE.COM","19c JSON_OBJECT","19C JSON_OBJECT","Syntax simplifications are offered for SQL/JSON path expressions, SQL/JSON generation with function json_object, and field projection with SQL/JSON nested clause.

These features make the SQL interface for JSON processing easier to use for certain operations. For example, a query such as “SELECT JSON_OBJECT(*) FROM emp” can be used to construct a JSON representation for a row of table EMP.   The JSON NESTED clause can be used to succinctly map JSON values to table rows: “SELECT * FROM customer NESTED jsonCol COLUMNS(first_name, last_name, address, state, zip)”.","",169490565269574770024272964312474747100,"","","",21-AUG-24 05.17.03.763012000 PM,"PUBLIC","19c JSON",425,"","HT5R206CX91M7L0ZLCWER4JX9",21626045,169493447418960980849622171218277482803,,,"","","","","","","","","","","","","","",,"",29-JUL-24 05.01.34.017485000 PM,16-JAN-19 09.13.34.449263000 AM,"","APPROVED",16-JAN-19 09.04.04.332595000 AM,,"Auto Approved","","",2071,"N"
173168218281755903411492550632954022698,19-FEB-19 09.59.20.326683000 PM,"",,"VIDAR.EIDISSEN@ERITEC.NO","List of Values (LOV) - a one size fits quite a few model","LIST OF VALUES (LOV) - A ONE SIZE FITS QUITE A FEW MODEL","One way of solving the need for many Lists of Values (LOVs), using two tables for lists and values, virtual columns and composite foreign keys.","",173168218279976364605019816487786531626,"","","",15-AUG-24 02.33.13.520753000 PM,"PUBLIC","LOV",13,"","HZYINOGGAX7ESB6PMB36165PH",23180470,337949986681008890389062074985729416032,,,"","","","","","","","","","","","","","",,"",10-APR-23 11.56.40.779520000 AM,19-FEB-19 10.38.55.576734000 PM,"","APPROVED",19-FEB-19 10.38.55.575068000 PM,19-FEB-19 11.40.26.864210000 PM,"sharon.kennedy@oracle.com","","",114,""
172314852883270699938567856226310991470,11-FEB-19 05.36.21.960481000 PM,"",,"JSILVAJ@GMAIL.COM","Get exceptions handling blocks from plsql programs using a table function","GET EXCEPTIONS HANDLING BLOCKS FROM PLSQL PROGRAMS USING A TABLE FUNCTION","In Oracle 11.2 I created a table function that I use to know how the exceptions of a given plsql program are handled, each block appears in a single row with corresponding line of code, it is useful to validate code in a quick way, for example exceptions that return null values or only rollbacks without know the sql error. 
The table function has 2 input parameters, the second is by default the ""Package Body"" program type, the first is the program name. 

","",172311589294961961931902681593229756127,"","","",06-MAY-24 12.39.47.525267000 PM,"PUBLIC","",3,"","HYLRIXUM0CCIK61J9OVIPOSJ7",22753219,4,,,"","","","","","","","","","","","","","",,"",06-MAY-24 12.39.47.525142000 PM,11-FEB-19 05.46.39.577968000 PM,"","APPROVED",11-FEB-19 05.46.39.577136000 PM,11-FEB-19 09.39.09.305584000 PM,"sharon.kennedy@oracle.com","","",72,"N"
171913281707942968429643336086859736000,07-FEB-19 09.40.39.282341000 PM,"",,"THOMAS.TESKE@ORACLE.COM","tree planting CO2 absorption (1)","TREE PLANTING CO2 ABSORPTION (1)","example explaining the lifetime CO2 absorption of trees being planted.
Simple demo of analytic function(s).","",171912955509915338847094204879185027698,"","","",01-MAY-24 02.56.32.720588000 AM,"PUBLIC","tree-planting, co2, analytics",66,"","HX7LIH68LBIESEY8WCIGSO50B",22602250,7,,,"","","","","","","","","","","","","","",,"",04-MAR-21 10.33.57.629049000 PM,20-AUG-19 06.45.13.126045000 AM,"","APPROVED",09-FEB-19 07.12.40.465922000 PM,,"Auto Approved","","",44,""
169644458820131413125002333893803259599,17-JAN-19 03.53.15.949210000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Optimizer Improvements for ANSI fetch first/offset queries","OPTIMIZER IMPROVEMENTS FOR ANSI FETCH FIRST/OFFSET QUERIES","19c contains a keenly awaited fix to the optimizer costing for for ANSI fetch first/offset queries. Now they can take advantage of an index scan + stopkey as per the older style order by/rownum syntax.","",169630801291725384134496594355460683990,"","","",13-JUN-24 06.40.11.992191000 PM,"PUBLIC","optimizer, fetch first, offset, pagination, 19c",15,"","HUAI6S6RG0DCIQR0DE86X2R5F",21667252,15,,,"","","","","","","","","","","","","","",,"",30-MAY-24 10.06.40.220720000 AM,17-JAN-19 03.56.39.992159000 AM,"","APPROVED",17-JAN-19 03.56.39.974869000 AM,,"Auto Approved","","",150,""
168677492344770829297767685820749844647,08-JAN-19 05.01.19.050923000 AM,"",,"REACHMERCENOW@GMAIL.COM","Using Multiset with emp and dept tables","USING MULTISET WITH EMP AND DEPT TABLES","Converting database table to nested table using MULTISET","",168647453040498317192358258576615725169,"","","",04-AUG-24 04.50.15.358757000 PM,"PUBLIC","MULTISET",38,"","HSU3YNYGT0HLWVKDG98K8E2O1",21384527,4,,,"","","","","","","","","","","","","","",,"",04-AUG-24 04.38.58.436029000 PM,08-JAN-19 05.01.19.059166000 AM,"","APPROVED",08-JAN-19 05.01.19.048398000 AM,08-JAN-19 02.59.10.196430000 PM,"sharon.kennedy@oracle.com","","",89,""
167333971405705189437657006170824126596,26-DEC-18 03.15.21.233767000 AM,"",,"DHURLEY@IMPLESTRAT.COM","Polymorphic Table Functions (PTFs) with variables","POLYMORPHIC TABLE FUNCTIONS (PTFS) WITH VARIABLES","PTF's accept variables for use during parse or execution. This included scalar datatypes and PTF specific variables called Pseudo-Operators.","",5853925458550,"","","",17-JUL-24 03.27.17.051717000 AM,"PUBLIC","Polymorphic Table Function PTF Pseudo-Operator",26,"","HQLU35U500FTNBQMFRMN6WX9L",20937687,6,,,"","","","","","","","","","","","","","",,"",09-JUN-24 08.48.19.365090000 PM,26-DEC-18 04.04.19.328468000 AM,"","APPROVED",26-DEC-18 03.36.01.307389000 AM,,"Auto Approved","","",85,""
167333971407024127506856566600428564612,26-DEC-18 03.52.59.157780000 AM,"",,"DHURLEY@IMPLESTRAT.COM","Polymorphic Table Functions (PTFs) Interrogate what they are passed","POLYMORPHIC TABLE FUNCTIONS (PTFS) INTERROGATE WHAT THEY ARE PASSED","Polymorphic Table Functions (PTFs) Interrogate what they are passed","",5853925458550,"","","",03-APR-24 02.44.00.407476000 PM,"PUBLIC","Polymorphic Table Functions PTF",10,"","HQLX8A4BKRAF9CZYIGFYVLP3F",20937602,6,,,"","","","","","","","","","","","","","",,"",25-FEB-22 06.16.16.368157000 PM,26-DEC-18 04.02.56.163600000 AM,"","APPROVED",26-DEC-18 04.02.56.155794000 AM,,"Auto Approved","","",18,""
168875836755580937404700252232051462567,09-JAN-19 07.55.05.015616000 PM,"",,"REACHMERCENOW@GMAIL.COM","Emulate both Primary & Unique keys using multiple Associative Arrays","EMULATE BOTH PRIMARY & UNIQUE KEYS USING MULTIPLE ASSOCIATIVE ARRAYS","Emulate both Primary Key & Unique keys using multiple String Indexed Associative Arrays","",168873786041241045684676011661634239390,"","","",04-APR-24 06.05.19.782338000 AM,"PUBLIC","Associative Array",5,"","HS17UB04DO0J2GOAQ1X1033ZT",21448344,4,,,"","","","","","","","","","","","","","",,"",12-DEC-22 05.28.14.833606000 AM,10-JAN-19 09.04.18.401207000 PM,"","APPROVED",09-JAN-19 07.55.05.012704000 PM,,"Auto Approved","","",77,""
172342718110123407616788949924074636695,12-FEB-19 01.31.09.408443000 AM,"",,"BEDA.HAMMERSCHMIDT@ORACLE.COM","JSON and materialized views (Asktom Office hours, Feb 12th 2019)","JSON AND MATERIALIZED VIEWS (ASKTOM OFFICE HOURS, FEB 12TH 2019)","JSON and materialized views","",116720601814065,"","","",24-AUG-23 06.33.22.753008000 AM,"PUBLIC","",17,"","HYQLELU3XCGGTHPVI0BMSAMHP",22805926,13,,,"","","","","","","","","","","","","","",,"",24-AUG-23 06.33.22.752863000 AM,12-FEB-19 05.57.58.290153000 PM,"","APPROVED",12-FEB-19 05.27.15.859023000 PM,,"Auto Approved","","",63,""
170215639546330339449244031140032606746,22-JAN-19 03.14.54.892888000 PM,"",,"ERIC.BELDEN@ORACLE.COM","Creating an Automatic List-Partitioned Table","CREATING AN AUTOMATIC LIST-PARTITIONED TABLE","Administering automatic list-partitioned tables","",170215639546080091804583802900868428314,"","","",27-JUL-24 11.09.36.962468000 AM,"PUBLIC","",20,"","HU7JYQY0PPSVR87SIUYT5WF4S",21866633,8,,,"","","","","","","","","","","","","","",64303337948810339592179290520196671450,"create-auto-list-partition",27-JUL-24 11.09.36.962363000 AM,22-JAN-19 06.22.01.215500000 PM,"https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-12150FFB-48E4-4169-9EBE-64974C1CEF2A","APPROVED",22-JAN-19 03.25.13.580904000 PM,,"Auto Approved","","",84,""
167613580440850730165874892705976993389,28-DEC-18 05.29.56.344937000 PM,"",,"DHURLEY@IMPLESTRAT.COM","Polymorphic Table Function (PTF) Exception Demo","POLYMORPHIC TABLE FUNCTION (PTF) EXCEPTION DEMO","PTF's can throw exceptions. This script demonstrates when they will (and when they wont) pass to a calling program. An error is raised using this line in each section of the PTF package ""RAISE_APPLICATION_ERROR(-20000,'Badness')"". Then two queries are executed on the PTF - one would return rows and the other would not.","",17318248448211,"","","",03-APR-24 02.50.11.507935000 PM,"PUBLIC","Polymorphic Table Functions PTF",8,"","HQ1CU1IAAY68MG75H5BNSKJ5B",21108340,6,,,"","","","","","","","","","","","","","",,"",18-JAN-22 06.45.04.702083000 AM,28-DEC-18 05.42.30.587524000 PM,"","APPROVED",28-DEC-18 05.42.30.577593000 PM,,"Auto Approved","","",23,""
167610065833583175270598583224153848146,28-DEC-18 05.05.12.967813000 PM,"",,"DHURLEY@IMPLESTRAT.COM","Polymorphic Table Function (PTF) Rick-Roll","POLYMORPHIC TABLE FUNCTION (PTF) RICK-ROLL","PTF's have a row replication feature to add rows to result sets as required.","",17318248448211,"","","",04-APR-24 05.54.20.539833000 AM,"PUBLIC","Polymorphic Table Functions PTF",7,"","HQ05J4BHTHJU93OG2RTPJWR74",21107982,6,,,"","","","","","","","","","","","","","",,"",21-OCT-21 08.18.31.830185000 AM,28-DEC-18 05.14.47.331496000 PM,"","APPROVED",28-DEC-18 05.14.47.321630000 PM,,"Auto Approved","","",31,""
167343870204776660610802241198776519212,26-DEC-18 04.09.22.734166000 AM,"",,"DHURLEY@IMPLESTRAT.COM","Polymorphic Table Functions (PTFs) Can Add Columns","POLYMORPHIC TABLE FUNCTIONS (PTFS) CAN ADD COLUMNS","PTFs can add column to the output.","",5853925458550,"","","",16-AUG-24 03.31.55.090550000 PM,"PUBLIC","Polymrphic Table Functions PTF",4,"","HQK7TYESVSKIX29YYC6FRPF5Y",20938809,6,,,"","","","","","","","","","","","","","",,"",26-DEC-18 04.16.32.866351000 AM,26-DEC-18 04.19.30.637619000 AM,"","APPROVED",26-DEC-18 04.17.37.000509000 AM,,"Auto Approved","","",73,""
169784500732053967058803823175501777513,18-JAN-19 02.00.45.425261000 PM,"",,"CHRIS.SAXON@ORACLE.COM","JSON_serialize","JSON_SERIALIZE","New in Oracle Database 19c, JSON_serialize takes JSON data in any data type. And returns the document as text.

You can also use this to pretty print the document.","",169791676279124510171570085121378378234,"","","",28-JUN-24 10.16.11.414696000 AM,"PUBLIC","19c, JSON",27,"","HUI2YRHMEVKE3D2298QO19A4C",21730554,169493447418960980849622171218277482803,,,"","","","","","","","","","","","","","",,"",03-JUN-24 07.25.46.604733000 AM,18-JAN-19 02.05.11.772415000 PM,"","APPROVED",18-JAN-19 02.05.11.771289000 PM,,"Auto Approved","","",165,""
168223476018409836543327821776827360834,03-JAN-19 01.48.55.283026000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","SODA API for PL/SQL","SODA API FOR PL/SQL","With the release of 18c, Simple Oracle Document Access (SODA) APIs have been extended to PL/SQL. This means that you can now store and manipulate JSON documents (and more) without knowing any SQL! OK, you might be wondering, why would I want to do that? Well, most database developers will NOT. But if you have frontend developers clamoring for permission to install a document database so they can work with JSON and not have to wrap their heads around SQL, you can tell them: ""No need for another database. Oracle can handle this just fine!""

Start here to go exploring: https://docs.oracle.com/en/database/oracle/oracle-database/18/adsdp/using-soda-pl-sql.html","",8193975046198,"","","",17-JUN-24 03.58.21.035484000 PM,"PUBLIC","18c,soda,document",34,"","HR0N72C1951354ZM6YTLPBHSN",21249486,4,,,"","","","","","","","","","","","","","",,"",27-MAR-24 09.35.57.242481000 AM,03-JAN-19 03.11.46.169592000 PM,"","APPROVED",03-JAN-19 01.49.53.632143000 PM,,"Auto Approved","","",112,""
169564938117043455516616908105361056428,16-JAN-19 09.41.14.420103000 AM,"",,"ROGEL@WEB.DE","don't get ORA-25156","DON'T GET ORA-25156","trying to apply https://mobile.twitter.com/connor_mc_d/status/1085467861038952449","",169562606607587098107824509415670308468,"","","",09-AUG-21 11.15.18.092650000 AM,"PUBLIC","",2,"","HT5ZSUXIYFSXVXX1N9YLSEVJY",21627575,1,,,"","","","","","","","","","","","","","",,"",24-JUN-19 06.21.31.188638000 AM,16-JAN-19 09.48.01.267253000 AM,"","APPROVED",16-JAN-19 09.41.14.416667000 AM,,"Auto Approved","","",7,""
169490565272089335729071392995863593180,15-JAN-19 05.10.23.503204000 PM,"",,"SHARON.KENNEDY@ORACLE.COM","19C LISTAGG DISTINCT","19C LISTAGG DISTINCT","The LISTAGG aggregate function now supports duplicate elimination by using the new DISTINCT keyword.

The LISTAGG aggregate function orders the rows for each group in a query according to the ORDER BY expression and then concatenates the values into a single string. With the new DISTINCT keyword, duplicate values can be removed from the specified expression before concatenation into a single string. This removes the need to create complex query processing to find the distinct values prior to using the aggregate LISTAGG function. With the DISTINCT option, the processing to remove duplicate values can be done directly within the LISTAGG function.

The result is simpler, faster, more efficient SQL.","",169490565269574770024272964312474747100,"","","",22-AUG-24 06.26.00.922067000 PM,"PUBLIC","19c LISTAGG",1085,"","HT5OOWLKAWA47UYOPBLI2RQ9W",21626060,169493447418960980849622171218277482803,,,"","","","","","","","","","","","","","",,"",22-AUG-24 06.26.00.921950000 PM,16-JAN-19 09.13.58.634551000 AM,"","APPROVED",16-JAN-19 09.03.39.397887000 AM,,"Auto Approved","","",5796,"Y"
169670914087829210072627216375813435400,17-JAN-19 10.25.09.161227000 AM,"",,"CHRIS.SAXON@ORACLE.COM","How to update part of a JSON document with JSON_mergepatch","HOW TO UPDATE PART OF A JSON DOCUMENT WITH JSON_MERGEPATCH","Examples of how to use JSON_merge patch to change values for a subset of attributes in a JSON document.","",169672063487033735168883672156700551882,"","","",28-JUL-24 04.31.22.109980000 PM,"PUBLIC","19c, JSON",28,"","HUB1GPFA67EEFLP9GYTV6BVF9",21680802,169493447418960980849622171218277482803,,,"","","","","","","","","","","","","","",,"",15-APR-23 07.56.51.007590000 PM,17-JAN-19 10.39.59.186406000 AM,"","APPROVED",17-JAN-19 10.39.59.176683000 AM,,"Auto Approved","","",124,""
170306532723224694997165557539031124849,23-JAN-19 12.10.17.779901000 PM,"",,"ERIC.BELDEN@ORACLE.COM","Creating a Multicolumn List-Partitioned Table","CREATING A MULTICOLUMN LIST-PARTITIONED TABLE","Administering multicolumn list-partitioned tables","",170306532722307120300078053995429137265,"","","",04-APR-24 11.05.33.228766000 AM,"PUBLIC","",4,"","HVCOTEBFXQKQHJJORO63N52OR",22239771,8,,,"","","","","","","","","","","","","","",64303337948810339592179290520196671450,"create-multicolumn-list",19-DEC-21 01.06.03.236317000 PM,30-JAN-19 03.01.48.643559000 PM,"https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-6A4131B1-BBDF-4230-B88C-80BC91A0C861","APPROVED",23-JAN-19 12.13.28.248673000 PM,,"Auto Approved","","",35,""
168850459167500118905415466119345097758,09-JAN-19 02.48.25.982117000 PM,"",,"JSILVAJ@GMAIL.COM","Pipelined Function to return values from xml attributes","PIPELINED FUNCTION TO RETURN VALUES FROM XML ATTRIBUTES","A fast way to get values from xml attributes , input xml(clob) and attribute name ","",168850459166430219555056519299730131998,"","","",18-JUN-24 05.47.12.388959000 AM,"PUBLIC","",7,"","HS1UM2VWVA774G58ENT2YIXAB",21438946,4,,,"","","","","","","","","","","","","","",,"",28-AUG-23 03.10.18.278074000 PM,09-JAN-19 03.26.20.559924000 PM,"","APPROVED",09-JAN-19 03.26.20.559302000 PM,09-JAN-19 05.49.11.637129000 PM,"sharon.kennedy@oracle.com","","",81,""
169581869120689389554330404472733971949,16-JAN-19 01.53.07.542080000 PM,"",,"ERIC.BELDEN@ORACLE.COM","Modifying the Partitioning Strategy of a Table","MODIFYING THE PARTITIONING STRATEGY OF A TABLE","Converting a range partitioned table to a composite range-hash partitioned table online","",169580970861445441783347544668081124573,"","","",04-APR-24 11.02.20.621091000 AM,"PUBLIC","",11,"","HT6YZFTFUWF3WCN4FWXZSZHBZ",21638577,8,,,"","","","","","","","","","","","","","",64303337948810339592179290520196671450,"modify-partitioning-strategy",23-JUN-23 02.30.17.812255000 PM,17-JAN-19 09.25.37.038491000 PM,"https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-763391C6-44E8-401D-8119-DC12926F5877","APPROVED",17-JAN-19 01.53.46.404347000 PM,,"Auto Approved","","",69,""
168857138449297869887112638579723608747,09-JAN-19 03.55.15.157334000 PM,"",,"REACHMERCENOW@GMAIL.COM","Associative Arrays to emulate Primary Key","ASSOCIATIVE ARRAYS TO EMULATE PRIMARY KEY","Associative arrays can be used to emulate primary key and unique indexes as they can be sparse. It has greater performance benefits over traditional retrieval of data.","",168853420236070821554846723441112566362,"","","",04-APR-24 06.25.38.921813000 AM,"PUBLIC","Associative Array",2,"","HS04ZJMD1BFEC2OGX3T9T2T55",21439800,4,,,"","","","","","","","","","","","","","",,"",05-FEB-20 04.06.02.107062000 AM,09-JAN-19 03.55.31.945207000 PM,"","APPROVED",09-JAN-19 03.55.31.944408000 PM,,"Auto Approved","","",38,""
171165385824816659886732341884303892034,31-JAN-19 05.21.23.602089000 PM,"",,"ERIC.BELDEN@ORACLE.COM","Splitting the DEFAULT Partition of a List-Partitioned Table","SPLITTING THE DEFAULT PARTITION OF A LIST-PARTITIONED TABLE","Splitting a list-partitioned table","",171156047760516863512244538183284041188,"","","",04-APR-24 11.05.17.591469000 AM,"PUBLIC","",8,"","HWQDJOPHD6A11AB2ZRA10IN5W",22637913,8,,,"","","","","","","","","","","","","","",64303337948810339592179290520196671450,"split-list-partition",22-JAN-24 08.07.00.018944000 AM,11-FEB-19 03.41.45.968553000 PM,"https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-65E169AC-3224-405E-AD1D-9FBF4D5231BA","APPROVED",31-JAN-19 05.21.23.600934000 PM,,"Auto Approved","","",51,""
172011454138697555969402812337211734879,09-FEB-19 12.44.49.388730000 AM,"",,"BEDA.HAMMERSCHMIDT@ORACLE.COM","JSON Search Index (Asktom Office hours, Jan 8th 2019)","JSON SEARCH INDEX (ASKTOM OFFICE HOURS, JAN 8TH 2019)","sql script used in the Asktom Office hours on the JSON Search index.","",14736803126376,"","","",21-FEB-23 01.42.19.133198000 PM,"PUBLIC","JSON Search Index",12,"","HYLNL0FCHUD38Q7801AXMVYH1",22760794,13,,,"","","","","","","","","","","","","","",,"",08-APR-21 08.04.08.443746000 PM,12-FEB-19 01.31.37.016545000 AM,"","APPROVED",11-FEB-19 09.32.20.691500000 PM,,"Auto Approved","","",13,""
172311678717634867077951223301619236484,11-FEB-19 04.46.29.146697000 PM,"",,"SGREINER@PA.GOV","In-Database Archiving Example","IN-DATABASE ARCHIVING EXAMPLE","An example of In-Database Archiving which allows rows to be hidden but not deleted. User-defined columns have generally done this in the past, but now an Oracle-derived column does the work whenever archival is enabled on a table (from https://oracle-base.com/articles/12c/in-database-archiving-12cr1).","",172310140318973474024932489317046720611,"","","",02-JUL-24 07.51.50.478808000 AM,"PUBLIC","InDatabaseArchiving",5,"","HYVW3ERI5DRAH6MEBJUO60A3M",22751229,14,,,"","","","","","","","","","","","","","",,"",01-DEC-22 01.50.24.602903000 PM,13-FEB-19 01.15.35.597454000 PM,"","APPROVED",13-FEB-19 01.15.35.583292000 PM,13-FEB-19 02.01.31.895211000 PM,"sharon.kennedy@oracle.com","to publish, can you please put in a proper category - this is not new to 19c (12c is likely a better category) - and please also enhance the description so that users do not need to click through to the blog post","",62,""
187300964404121605306516810925649600944,05-JUL-19 06.03.48.738242000 AM,"",,"PALLAVKOHLI@GMAIL.COM","Convert Number into Words","CONVERT NUMBER INTO WORDS","Convert Number into Words","",187302920201534991535818499392061186078,"","","",25-APR-24 03.44.00.302980000 PM,"PUBLIC","",6,"","IMNSD17IR8TM45WR4FI2G2922",29890854,3,,,"","","","","","","","","","","","","","",,"",05-SEP-23 04.44.19.160682000 PM,05-JUL-19 06.03.48.748388000 AM,"","APPROVED",05-JUL-19 06.03.48.728712000 AM,05-JUL-19 12.56.11.103944000 PM,"sharon.kennedy@oracle.com","","",42,""
183684143339281270273496363893890117750,31-MAY-19 01.50.09.744225000 PM,"",,"SHANKAR.SOMAYAJULA@ORACLE.COM","MR use case sql for multi cols matching against multi patterns","MR USE CASE SQL FOR MULTI COLS MATCHING AGAINST MULTI PATTERNS","Match_Recognize SQL use case to match multiple columns against multiple patterns ... Reference: https://www.linkedin.com/pulse/filtering-data-multiple-patterns-across-columns-sql-swanand-marathe/","",183677790327391227108596596495843200657,"","","",04-APR-24 06.35.27.175640000 AM,"PUBLIC","MATCH_RECOGNIZE pattern_matching",20,"","IGSZM2ZX0FLTHPGLQ91QLBGF8",29102210,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",07-JAN-24 03.43.48.263419000 PM,13-JUN-19 01.28.19.500121000 PM,"","APPROVED",11-JUN-19 06.42.53.777192000 PM,,"Auto Approved","","",49,""
194263967371242167564028939814302310503,09-SEP-19 08.46.16.113693000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Introduction to Object Type Methods","INTRODUCTION TO OBJECT TYPE METHODS","This script explores member methods and the SELF value, static methods, non-instantiable methods and how invoke a supertype's method explicitly. This code is fully explained in the accompanying blog post at https://stevenfeuersteinonplsql.blogspot.com/2019/09/plsql-101-static-and-member-methods-of.html ","",2449120050788,"","","",03-APR-24 02.32.30.076143000 PM,"PUBLIC","",14,"","IXRKWLIU8EVO58SIOXTNHMSXY",32367370,4,,,"","","","","","","","","","","","","","",,"",13-FEB-23 08.15.48.138883000 AM,09-SEP-19 08.46.58.255578000 PM,"","APPROVED",09-SEP-19 08.46.58.245590000 PM,,"Auto Approved","","",80,""
187296743106223498641265449601755407483,05-JUL-19 05.05.45.461672000 AM,"",,"PALLAVKOHLI@GMAIL.COM","Display string in vertical form","DISPLAY STRING IN VERTICAL FORM","Display string in vertical form","",187296743104202174670869789621646681211,"","","",09-JUN-23 03.04.41.776748000 PM,"PUBLIC","",1,"","IMNSD17IRB0GOJ63Q9DIV6CWE",29889087,3,,,"","","","","","","","","","","","","","",,"",09-JUN-23 03.04.41.776611000 PM,05-JUL-19 05.05.45.490192000 AM,"","APPROVED",05-JUL-19 05.05.45.460643000 AM,05-JUL-19 12.55.58.450371000 PM,"sharon.kennedy@oracle.com","","",31,""
187761742855937079458277224351072444583,09-JUL-19 03.31.15.966563000 PM,"",,"BEDA.HAMMERSCHMIDT@ORACLE.COM","JSON and plsql","JSON AND PLSQL","How to work with JSON data in the plsql programming language.","",13010645945069,"","","",19-AUG-24 01.11.06.325186000 PM,"PUBLIC","JSON PLSQL",158,"","INBQ7JXWKP9ND84CIN5V6OWST",30045451,13,,,"","","","","","","","","","","","","","",,"",05-APR-24 08.15.41.257066000 AM,09-JUL-19 04.56.53.248982000 PM,"","APPROVED",09-JUL-19 04.56.53.236922000 PM,,"Auto Approved","","",436,""
187306291935527176167041042922745795860,05-JUL-19 06.59.39.994120000 AM,"",,"PALLAVKOHLI@GMAIL.COM","Week day name from date","WEEK DAY NAME FROM DATE","Week day name from date","",187308541253988672632216403818591179791,"","","",06-MAY-24 08.08.02.593742000 AM,"PUBLIC","",5,"","IMNSD17IS5MTLRMGHLOL1Z69Q",29893002,3,,,"","","","","","","","","","","","","","",,"",11-MAR-21 09.40.19.532724000 PM,05-JUL-19 06.59.40.004567000 AM,"","APPROVED",05-JUL-19 06.59.39.993133000 AM,05-JUL-19 12.56.19.105321000 PM,"sharon.kennedy@oracle.com","","",40,""
191397359557978322879441833917468518992,13-AUG-19 10.25.20.547023000 AM,"",,"BEDA.HAMMERSCHMIDT@ORACLE.COM","JSON and Object Type mappers","JSON AND OBJECT TYPE MAPPERS","This script show how object types can be mapped to and from JSON data. This makes it easy to use JSON data with your application using object types.","",9832277116621,"","","",30-JUL-24 06.59.18.542317000 AM,"PUBLIC","JSON_OBJECT, JSON_ARRAY, JSON Generation, Objects, Mapping, PLSQL, JSON",73,"","IS6237EQUYP4AKC2R7XVQV8Z4",31203726,13,,,"","","","","","","","","","","","","","",,"",30-JUL-24 06.59.18.542182000 AM,13-AUG-19 02.00.59.957247000 PM,"","APPROVED",13-AUG-19 02.00.59.956574000 PM,,"Auto Approved","","",147,""
182126214356461410371046143327810027167,16-MAY-19 04.08.47.219808000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Pick Winners Randomly","PICK WINNERS RANDOMLY","Pick Winners Randomly","",101231053557062,"","","",03-JUL-24 08.02.10.005462000 PM,"PUBLIC","",15,"","IEAVLC8VAZP1DZN8M1DYTZJ0E",27907187,4,,,"","","","","","","","","","","","","","",,"",13-APR-21 05.28.14.115062000 PM,16-MAY-19 04.09.09.870910000 PM,"","APPROVED",16-MAY-19 04.09.09.860808000 PM,,"Auto Approved","","",52,""
182113182065151401978272222441716190931,16-MAY-19 01.19.46.652308000 PM,"",,"ROGER.FORD@ORACLE.COM","LOCAL json search index on LIST partitioned JSON table","LOCAL JSON SEARCH INDEX ON LIST PARTITIONED JSON TABLE","Shows creation of a LOCAL json search index on a LIST partitioned table","",182115015568179999347794785880708388742,"","","",21-FEB-23 01.55.33.518190000 PM,"PUBLIC","",3,"","IEAA524XZ34J2I1MM7QJ948BP",27899124,13,,,"","","","","","","","","","","","","","",,"",29-MAY-19 08.54.22.342585000 AM,16-MAY-19 01.19.46.662926000 PM,"","APPROVED",16-MAY-19 01.19.46.651439000 PM,,"Auto Approved","","",15,""
186871850706214297704321129359189099062,01-JUL-19 02.19.46.733135000 AM,"",,"DHURLEY@IMPLESTRAT.COM","KSCOPE 2019 PTF 1","KSCOPE 2019 PTF 1","Setup of data and demo packages and PTF simple function code.","",15058736278899,"","","",17-DEC-23 06.03.46.938303000 AM,"PUBLIC","KSCOPE Polymorphic PTF",17,"","ILWZP5TIJ5FGWQXJ4C6TQH1MW",29729113,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",21-NOV-22 03.33.47.351699000 PM,11-OCT-20 04.38.31.581143000 PM,"","APPROVED",11-OCT-20 04.38.31.580345000 PM,,"Auto Approved","","",174,""
186871850706240894072352651201032634934,01-JUL-19 02.20.33.841450000 AM,"",,"DHURLEY@IMPLESTRAT.COM","KSCOPE 2019 PTF 2","KSCOPE 2019 PTF 2","Row replication","",15058736278899,"","","",14-JAN-23 11.35.18.506585000 AM,"PUBLIC","KSCOPE Polymorphic PTF",3,"","ILWZP5TIV5FNZCTMXR7TJVIKO",29729129,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",08-SEP-20 04.08.12.759695000 PM,11-OCT-20 04.36.56.440200000 PM,"","APPROVED",11-OCT-20 04.36.56.439636000 PM,,"Auto Approved","","",170,""
186871850706809089207571526913144537654,01-JUL-19 02.25.53.180900000 AM,"",,"DHURLEY@IMPLESTRAT.COM","KSCOPE 2019 PTF 6.5","KSCOPE 2019 PTF 6.5","Variadic Psuedo-Operator aka COLUMNS parameter","",15058736278899,"","","",27-SEP-22 05.48.52.874899000 AM,"PUBLIC","KSCOPE Polymrphic PTF",1,"","ILUV2Q5E8TYN3GUUJD6VUGC4W",29729379,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",01-JUL-19 02.52.16.871971000 AM,11-OCT-20 04.38.09.449457000 PM,"","APPROVED",11-OCT-20 04.38.09.448898000 PM,,"Auto Approved","","",141,""
186871850706892505089124936326199263798,01-JUL-19 02.26.43.509148000 AM,"",,"DHURLEY@IMPLESTRAT.COM","KSCOPE 2019 PTF 7","KSCOPE 2019 PTF 7","CSTORE for Compile State (DESCRIBE) and XSTORE for Execution State (OPEN,FETCH_ROWS and CLOSE.","",15058736278899,"","","",02-FEB-24 04.52.45.781393000 PM,"PUBLIC","KSCOPE Polymorphic PTF",16,"","ILWZP5TJQI4BCSLI4TCL80WQW",29729273,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",20-APR-23 09.35.40.244414000 AM,11-OCT-20 04.42.18.790892000 PM,"","APPROVED",11-OCT-20 04.42.18.790405000 PM,,"Auto Approved","","",166,""
186871850706942071047729136122362217014,01-JUL-19 02.27.21.259462000 AM,"",,"DHURLEY@IMPLESTRAT.COM","KSCOPE 2019 PTF 8","KSCOPE 2019 PTF 8","Introduce table polymorphism","",15058736278899,"","","",10-JUN-24 06.57.21.578948000 AM,"PUBLIC","KSCOPE Polymorphic PTF",4,"","ILWZP5TJT6C067F8LHYSKOLHK",29729313,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",10-JUN-24 06.57.21.578838000 AM,11-OCT-20 04.41.45.740478000 PM,"","APPROVED",11-OCT-20 04.41.45.740036000 PM,,"Auto Approved","","",130,""
186871850706954160305925282414109278774,01-JUL-19 02.28.06.557745000 AM,"",,"DHURLEY@IMPLESTRAT.COM","KSCOPE 2019 PTF 9","KSCOPE 2019 PTF 9","Tracing table polymorphic","",15058736278899,"","","",09-DEC-23 11.24.57.556980000 PM,"PUBLIC","KSCOPE Polymorphic PTF",4,"","ILWZP5TJYFG7COR2AYONX98CO",29729336,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",07-FEB-22 12.59.48.257785000 PM,11-OCT-20 04.41.29.597516000 PM,"","APPROVED",11-OCT-20 04.41.29.596996000 PM,,"Auto Approved","","",148,""
182649782770289565064671106428226433884,21-MAY-19 04.47.06.587255000 PM,"",,"JONATHAN@JLCOMP.DEMON.CO.UK","Re-partition test","RE-PARTITION TEST","Script to change a partitioned table to a composite partitioned table.

This fails on 18.3 because the code to create the ""rowid mapping table"" specifies the SYSTEM tablespace - which users (and DBAs) shouldn't have a quota on.

Workaround in 18.3 - grant quota unlimited on system to the user.
","",182649782768670813392207117963294864220,"","","",14-JUL-24 02.56.47.220815000 PM,"PUBLIC","""alter table"" partition modify",35,"","IE6AW4WEPQMQRH2HT7BE3FZJY",28150532,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",16-MAY-24 02.17.25.080242000 AM,21-MAY-19 08.06.29.324878000 PM,"","APPROVED",21-MAY-19 08.06.29.315558000 PM,21-MAY-19 08.12.32.791942000 PM,"steven.feuerstein@oracle.com","","",247,""
187862619703140095819135649987382931720,10-JUL-19 01.58.20.327502000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Best Collection Type for FORALL?","BEST COLLECTION TYPE FOR FORALL?","What is the best type of collection to use with FORALL? Is it an associative array? Nested table? Varray? Does it matter at all? This script gets to the heart of the matter with the answer: Doesn't matter. Use whichever type best fits your requirements for populating and manipulating the collection BEFORE it is used in FORALL. This script accompanies my blog post: ","",12811668898684,"","","",31-JUL-24 12.34.39.301149000 PM,"PUBLIC","performance,forall,collection",26,"","INH6JXT7ARNYG8PE7WESHB1WA",30084734,4,,,"","","","","","","","","","","","","","",,"",17-DEC-21 11.31.37.048146000 AM,10-JUL-19 03.27.17.398482000 PM,"","APPROVED",10-JUL-19 02.00.54.686045000 PM,,"Auto Approved","","",131,""
188480988396665802016892532888435320036,16-JUL-19 12.00.35.119929000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Ask TOM Office Hours: Find all the Fully Connected Subgraphs Solutions","ASK TOM OFFICE HOURS: FIND ALL THE FULLY CONNECTED SUBGRAPHS SOLUTIONS","The challenge:

Given a graph stored as a series of bidirectional edges between vertices, find all the fully connected subgraphs with three or more vertices.

This script shows various solutions to the problem.","",188459634752017915062796639995689586429,"","","",26-JUN-24 09.39.17.308396000 PM,"PUBLIC","",8,"","IOHVI2K8QWT6EJAYIDH8KF3F6",30331178,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",01-JUN-22 02.39.07.829921000 PM,17-JUL-19 12.22.44.841165000 PM,"","APPROVED",16-JUL-19 12.20.42.874894000 PM,,"Auto Approved","","",54,""
188480988397099806386134184762154837220,16-JUL-19 12.10.32.427217000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Ask TOM Office Hours: Find the Hierarchical Mean Solutions","ASK TOM OFFICE HOURS: FIND THE HIERARCHICAL MEAN SOLUTIONS","SQL solutions to the problem of calculating the average of all the direct children of a node in a tree.","",188459634752017915062796639995689586429,"","","",04-APR-24 06.38.18.805369000 AM,"PUBLIC","",11,"","IOHVI2K8K41DHDSB6YI4JZK9Y",30289603,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",27-JUN-23 01.19.43.139268000 PM,16-JUL-19 12.19.58.057809000 PM,"","APPROVED",16-JUL-19 12.19.58.056434000 PM,,"Auto Approved","","",56,""
189584168659995210188050505676792407809,27-JUL-19 03.37.24.408759000 AM,"",,"RODRIGOEDSON@GMAIL.COM","Cópia de dados com transformação","CÓPIA DE DADOS COM TRANSFORMAÇÃO","Exemplo de manipulação de dados com Bulk, Forall e Pipelined Function.
Simula uma cópia entre tabelas aplicando uma transformação nos dados","",189584441576540417531360631271505712324,"","","",26-JUL-24 09.38.34.071650000 PM,"PUBLIC","ETL, BULK, FORALL, PIPELINED",8,"","IR0UNB4A36RGOV68OP0GYA532",30677697,6,,,"","","","","","","","","","","","","","",,"",26-JUL-22 01.34.59.992151000 AM,15-AUG-19 11.39.42.764604000 AM,"","APPROVED",05-AUG-19 10.58.02.917634000 PM,06-AUG-19 01.28.12.178451000 PM,"sharon.kennedy@oracle.com","","",30,""
186871913549372458421756093084795017124,01-JUL-19 02.21.32.835426000 AM,"",,"DHURLEY@IMPLESTRAT.COM","KSCOPE 2019 PTF 3","KSCOPE 2019 PTF 3","Add and populate columns","",15058736278899,"","","",14-JAN-23 11.34.38.372359000 AM,"PUBLIC","KSCOPE Polymorphic PTF",10,"","ILWZP5TI1BC0LFU40E28ID2MG",29729149,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",25-FEB-22 06.14.52.778645000 PM,11-OCT-20 04.42.49.767975000 PM,"","APPROVED",11-OCT-20 04.42.49.767429000 PM,,"Auto Approved","","",146,""
186871913549389383383230697893240903588,01-JUL-19 02.22.45.621123000 AM,"",,"DHURLEY@IMPLESTRAT.COM","KSCOPE 2019 PTF 4","KSCOPE 2019 PTF 4","Add columns and replicate rows","",15058736278899,"","","",15-MAY-24 08.30.12.974027000 PM,"PUBLIC","KSCOPE Polymorphic PTF",3,"","ILWZUU16WPQDTLS7GFJ9R9MWM",29729194,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",08-SEP-20 04.16.33.108625000 PM,11-OCT-20 04.37.32.479369000 PM,"","APPROVED",11-OCT-20 04.37.32.478875000 PM,,"Auto Approved","","",152,""
186871913549412352973803375847560320932,01-JUL-19 02.23.51.343455000 AM,"",,"DHURLEY@IMPLESTRAT.COM","KSCOPE 2019 PTF 5","KSCOPE 2019 PTF 5","Introduce GET_ROW_SET","",15058736278899,"","","",14-JAN-23 11.34.54.934186000 AM,"PUBLIC","KSCOPE Polymorphic PTF",7,"","ILWZP5TJB8254OE9EGXRHC4UG",29729204,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",25-FEB-22 06.31.27.887155000 PM,11-OCT-20 04.46.05.681356000 PM,"","APPROVED",11-OCT-20 04.46.05.680752000 PM,,"Auto Approved","","",145,""
186871913549417188677081834364259145636,01-JUL-19 02.24.30.384279000 AM,"",,"DHURLEY@IMPLESTRAT.COM","KSCOPE 2019 PTF 5.5","KSCOPE 2019 PTF 5.5","Details of ROW_SET_T","",15058736278899,"","","",10-SEP-23 04.02.18.359887000 PM,"PUBLIC","KSCOPE Polymorphic PTF",2,"","ILWZP5TJNM7WV7T7Y3U18SNNS",29729224,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",08-SEP-20 04.26.06.625282000 PM,11-OCT-20 04.49.52.971183000 PM,"","APPROVED",11-OCT-20 04.49.52.970647000 PM,,"Auto Approved","","",141,""
186871913549446202896752585464452093860,01-JUL-19 02.25.07.451314000 AM,"",,"DHURLEY@IMPLESTRAT.COM","KSCOPE 2019 PTF 6","KSCOPE 2019 PTF 6","Interrogate fetched row set to populate added column","",15058736278899,"","","",20-JUL-22 01.22.00.699817000 AM,"PUBLIC","SCOPE Polymorphic PTF",6,"","ILWZP5TJOPHYFK56EG1I262DK",29729262,45094643699732520487257538121880468026,,,"","","","","","","","","","","","","","",,"",14-JAN-21 01.06.59.390467000 PM,11-OCT-20 04.45.25.989211000 PM,"","APPROVED",11-OCT-20 04.45.25.988607000 PM,,"Auto Approved","","",144,""
187779484412008907486178401864576027375,09-JUL-19 07.05.00.100747000 PM,"",,"RAGHAVENDRA.BORALLI@GMAIL.COM","Check Digits","CHECK DIGITS","Script for identifying if all the digits in a column are same","",187779484411860209610365802476087167727,"","","",04-JUN-23 08.03.29.024903000 AM,"PUBLIC","",7,"","INJ6U558DIO69MEQMVT070SUD",30050100,3,,,"","","","","","","","","","","","","","",,"",30-NOV-22 07.59.15.801363000 PM,09-JUL-19 07.05.00.120146000 PM,"","APPROVED",09-JUL-19 07.05.00.091830000 PM,10-JUL-19 09.55.23.203166000 PM,"sharon.kennedy@oracle.com","","",36,""
192777673483553120481683865360875056838,26-AUG-19 08.30.24.474822000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Inheritance of Object Type Attributes","INHERITANCE OF OBJECT TYPE ATTRIBUTES","When you build hierarchies of object types, remember that attributes of parents are passed down to the subtypes. So when you call a constructor function for a subtype, you must include a value for all the attributes in the parent(s) as well.","",192796648793653556401867183307788797673,"","","",21-MAY-24 10.52.47.097103000 PM,"PUBLIC","object type,inheritance,subtype",2,"","IVDV2XB96G0FWZHB5TA4RI3G4",31728339,4,,,"","","","","","","","","","","","","","",,"",11-JAN-22 08.18.46.623861000 PM,26-AUG-19 08.30.24.478460000 PM,"","APPROVED",26-AUG-19 08.30.24.474515000 PM,,"Auto Approved","","",46,""
186301341292962641121010643154296823676,25-JUN-19 03.19.03.438866000 PM,"",,"WILLIAMR13@AIM.COM","Join cardinality with NVL vs COALESCE","JOIN CARDINALITY WITH NVL VS COALESCE","When using an NVL() expression as a join key, join selectivity appears to be computed as 1 (0), leading to performance issues for large data sets. Changing NVL to COALESCE etc gives a realistic estimate. Perhaps NVL enables some internal rewrite that is not possible with COALESCE (or CASE or DECODE or an outer join with an equivalent condition etc), however I could not see any details in a 10053 trace, where ""sel (0.000000)"" appears without further details. (For COALESCE a non-zero selectivity appears also without details, so perhaps I am missing a tracing step.)

By testing with different values of optimizer_features_enable, I found that this behaviour first appears in 8.1.7. In 8.1.6 and earlier the cardinality is correct.","",186299220858264208216974837949267585986,"","","",08-JUN-24 04.09.28.968378000 AM,"PUBLIC","Performance",21,"","IPH9MMT968UDDFGYPG8XRS90G",30457668,3,,,"","","","","","","","","","","","","","",,"",21-FEB-24 06.57.04.910896000 AM,21-JUL-19 10.47.24.841132000 AM,"","APPROVED",20-JUL-19 10.07.06.697828000 AM,22-JUL-19 12.51.51.207799000 PM,"sharon.kennedy@oracle.com","","",156,""
192767884026931274113160292648511777011,26-AUG-19 01.47.48.378846000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","SQL Guard install data","SQL GUARD INSTALL DATA","Populates SQL Guard tables with initial set of data. See https://stevenfeuersteinonplsql.blogspot.com/2019/08/stevens-sql-guard-utility-to-help-with.html for more information.","",192766228631700042591263652965790698407,"","","",04-APR-24 06.21.09.385989000 AM,"PUBLIC","injection",2,"","IVDBQLCSDDAF7YAYVLMVLPFUT",31710696,4,,,"","","","","","","","","","","","","","",,"",12-DEC-21 11.17.05.212267000 AM,26-AUG-19 02.03.57.088464000 PM,"","APPROVED",26-AUG-19 02.03.57.086764000 PM,,"Auto Approved","","",22,""
192269963379183789433029313191284987824,21-AUG-19 07.27.14.649624000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Introduction to Object Types, Part 1","INTRODUCTION TO OBJECT TYPES, PART 1","The code that accompanies my blog post, ""PL/SQL 101: Introduction to Object Types, a.k.a, Classes"". Which you can read at: https://stevenfeuersteinonplsql.blogspot.com/2019/08/plsql-101-introduction-to-object-types.html","",907208001758,"","","",19-AUG-24 09.25.36.834002000 AM,"PUBLIC","object type,class",38,"","IUKOHBLN87JAL54THBS6NL318",31562272,11,,,"","","","","","","","","","","","","","",,"",12-AUG-23 01.26.25.619632000 PM,22-AUG-19 06.57.04.381428000 PM,"","APPROVED",21-AUG-19 07.28.04.396233000 PM,,"Auto Approved","","",245,""
192769151913545379047297090668345310918,26-AUG-19 01.43.59.089124000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","SQL Guard create tables","SQL GUARD CREATE TABLES","Creates tables used by the SQL Guard utility. See https://stevenfeuersteinonplsql.blogspot.com/2019/08/stevens-sql-guard-utility-to-help-with.html for more information.","",21967469983566,"","","",09-AUG-24 08.28.13.465571000 AM,"PUBLIC","injection",15,"","IVDH9J6TD0SO2UKCVQRHJ77ZM",31710552,4,,,"","","","","","","","","","","","","","",,"",05-JAN-23 06.14.07.765794000 AM,26-AUG-19 02.05.50.258233000 PM,"","APPROVED",26-AUG-19 02.05.50.257718000 PM,,"Auto Approved","","",88,""
192767996216528807783709836512879877789,26-AUG-19 01.37.39.257263000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","SQL Guard package specification","SQL GUARD PACKAGE SPECIFICATION","A utility package to help stop SQL injection in your applications. See https://stevenfeuersteinonplsql.blogspot.com/2019/08/stevens-sql-guard-utility-to-help-with.html for more information.","",21967469983566,"","","",03-APR-24 02.46.51.691136000 PM,"PUBLIC","injection",9,"","IVC1MYUCWQJN8C2D98R9LMP06",31710265,4,,,"","","","","","","","","","","","","","",,"",26-OCT-20 09.54.40.319822000 AM,26-AUG-19 02.05.08.119967000 PM,"","APPROVED",26-AUG-19 01.38.15.273735000 PM,,"Auto Approved","","",27,""
192958123103614634017689929523632150397,28-AUG-19 10.56.25.194673000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Inheritance and Object Type Hierarchies","INHERITANCE AND OBJECT TYPE HIERARCHIES","An exploration into how in object type hiearchies, subtypes inherit both attribtues and methods from parents. See my blog post for more information: https://stevenfeuersteinonplsql.blogspot.com/2019/08/plsql-101-inheritance-and-object-types.html","",12202944474755,"","","",01-MAY-24 09.19.05.833799000 PM,"PUBLIC","object type,hierarchy,subtype,inheritance",13,"","IVOZJL7WNM1CAD6278LZLP5QX",53862438,4,,,"","","","","","","","","","","","","","",,"",01-MAY-24 09.19.05.833694000 PM,07-JUL-20 10.33.13.009380000 AM,"","APPROVED",28-AUG-19 11.29.55.118158000 AM,,"Auto Approved","","",69,""
192769745729926695870109989831371797752,26-AUG-19 01.38.35.547927000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","SQL Guard package body","SQL GUARD PACKAGE BODY","A utility package to help stop SQL injection in your applications. See https://stevenfeuersteinonplsql.blogspot.com/2019/08/stevens-sql-guard-utility-to-help-with.html for more information. You must run the SQL Guard install script before this package body will compile.","",21967469983566,"","","",04-APR-24 05.57.44.601685000 AM,"PUBLIC","injection",6,"","IVDGTBJNP6K56DWFNVJM1EOZM",31710495,4,,,"","","","","","","","","","","","","","",,"",25-SEP-20 09.57.33.755890000 AM,26-AUG-19 02.04.35.245916000 PM,"","APPROVED",26-AUG-19 02.04.35.245070000 PM,,"Auto Approved","","",14,""
192769745730812838495887513016431424760,26-AUG-19 01.48.37.651443000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","SQL Guard demonstration script","SQL GUARD DEMONSTRATION SCRIPT","Demonstrates usage of SQL Guard, a utility to help developers guard against SQL injection. See https://stevenfeuersteinonplsql.blogspot.com/2019/08/stevens-sql-guard-utility-to-help-with.html for more information.","",21967469983566,"","","",19-APR-24 12.12.16.074273000 PM,"PUBLIC","sql injection",3,"","IVDJ6169L1N0VGQNJI0LEMK3Q",31711450,4,,,"","","","","","","","","","","","","","",,"",05-APR-24 11.51.11.611859000 AM,26-AUG-19 02.03.01.798386000 PM,"","APPROVED",26-AUG-19 02.03.01.797221000 PM,,"Auto Approved","","",23,""
193103167320632490175896087030158490432,29-AUG-19 06.44.24.447371000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","When Your Function Returns Boolean - in SQL?","WHEN YOUR FUNCTION RETURNS BOOLEAN - IN SQL?","I wrote this code to answer a question in Quora: https://www.quora.com/How-do-I-call-an-Oracle-function-with-a-PL-SQL-Boolean-type-from-SQL","",193103839980013778374318740503534393613,"","","",04-APR-24 06.14.52.710800000 AM,"PUBLIC","boolean,sql",3,"","IVWOGKSY8F7CPNO2QST8PYY72",31885399,6,,,"","","","","","","","","","","","","","",,"",25-NOV-21 08.42.15.547919000 PM,29-AUG-19 06.44.24.449873000 PM,"","APPROVED",29-AUG-19 06.44.24.447124000 PM,,"Auto Approved","","",57,""
181461729833713823274461060734028260209,10-MAY-19 07.57.31.649200000 AM,"",,"JOSEVTEG@GMAIL.COM","Monty Hall problem","MONTY HALL PROBLEM","Monty Hall problem
https://en.wikipedia.org/wiki/Monty_Hall_problem","",181461894857141768409027730042994178248,"","","",04-APR-24 06.05.12.920471000 AM,"PUBLIC","",5,"","IC9YQQDSWDS2X0T70O2G8LPDN",27593829,4,,,"","","","","","","","","","","","","","",,"",06-SEP-22 12.17.04.158522000 AM,10-MAY-19 08.24.13.678652000 AM,"","APPROVED",10-MAY-19 08.24.13.639984000 AM,10-MAY-19 12.10.44.638565000 PM,"sharon.kennedy@oracle.com","","",22,""
180664962110113179355701356588182423371,02-MAY-19 04.38.20.848834000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Ask TOM Answer: Pipelined-table functions with cursor return type","ASK TOM ANSWER: PIPELINED-TABLE FUNCTIONS WITH CURSOR RETURN TYPE","Example script for https://asktom.oracle.com/pls/apex/asktom.search?tag=ways-to-name-the-output-columns-of-a-pipelined-table-function","",180665966592977138919061891090949517829,"","","",03-APR-24 02.32.22.962622000 PM,"PUBLIC","",15,"","IBYPQ5XC8B0BDPA9VO7HUH755",27230704,6,,,"","","","","","","","","","","","","","",,"",13-AUG-22 10.59.10.004455000 AM,02-MAY-19 04.38.20.869986000 PM,"","APPROVED",02-MAY-19 04.38.20.843959000 PM,,"Auto Approved","","",102,""
181842973451407739380333390182755233915,13-MAY-19 11.12.55.277397000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Exception Propagation: Innermost, Outermost, In Between?","EXCEPTION PROPAGATION: INNERMOST, OUTERMOST, IN BETWEEN?","This script is used in the May 2019 PL/SQL Office Hours session to explore the different approaches recommended by Tom Kyte and Steven Feuerstein","",181842973451097045444692430484855746683,"","","",03-APR-24 02.46.39.310871000 PM,"PUBLIC","exception,propagation,error",10,"","IDUPN8A6BCLGXEWZOGJGUPN89",27793041,4,,,"","","","","","","","","","","","","","",,"",14-JUN-21 01.56.04.152947000 PM,14-MAY-19 03.48.32.836280000 PM,"","APPROVED",13-MAY-19 11.12.55.274490000 PM,,"Auto Approved","","",46,""
176164561839117061895771528307627708211,20-MAR-19 02.25.58.993637000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Replacement package for DBMS_OUTPUT","REPLACEMENT PACKAGE FOR DBMS_OUTPUT","It's the p package! Steven Feuerstein wrote this ages ago so that (a) you'd have lots more overloadings of ""print this"" and (b) you'd only have to type ""p.l"". You still need to have output enabled and be able to see the output in your IDE of choice. ","",113291823865265,"","","",02-MAY-24 01.01.09.478535000 PM,"PUBLIC","",26,"","H4QXVPS0WXSG3A9N0LSNZ40V5",24847482,4,,,"","","","","","","","","","","","","","",,"",10-SEP-23 08.16.48.476361000 PM,20-MAR-19 02.33.31.874334000 PM,"","APPROVED",20-MAR-19 02.33.31.843244000 PM,,"Auto Approved","","",100,""
173224373859411455791306432317875688393,20-FEB-19 11.02.21.262954000 AM,"",,"CHRIS.SAXON@ORACLE.COM","JSON in Oracle Database","JSON IN ORACLE DATABASE","Examples of how to use SQL to store, query, and create JSON documents in Oracle Database.

For full details on these statements, the associated blog post How to Store, Query, and Create JSON Documents in Oracle Database (https://blogs.oracle.com/sql/how-to-store-query-and-create-json-documents-in-oracle-database)","",173221441401286558363432785595513579048,"","","",14-AUG-24 08.56.53.447963000 AM,"PUBLIC","json, JSON_value, JSON_query, JSON_table, JSON_object, JSON_array, JSON_exists, JSON_mergepatch, JSON_equal, JSON_textcontains, JSON_serialize",181,"","HZ1W6TJWA0G46TEXTFNW0QIIG",23237707,13,,,"","","","","","","","","","","","","","",,"",14-AUG-24 08.56.53.447781000 AM,22-FEB-19 10.15.15.560158000 AM,"","APPROVED",21-FEB-19 11.26.24.277993000 AM,,"Auto Approved","","",348,""
174609139715824263804616201240893364408,05-MAR-19 04.43.08.080900000 PM,"",,"ERIC.BELDEN@ORACLE.COM","Truncating a Range Partitioned Table","TRUNCATING A RANGE PARTITIONED TABLE","Truncating a range-partitioned table","",174603804333413382664837047378957233400,"","","",18-JUL-24 01.34.09.948433000 AM,"PUBLIC","",9,"","H18185QQRV6ARR5BT0QKDMHCA",23973158,8,,,"","","","","","","","","","","","","","",64303337948810339592179290520196671450,"truncate-partitions",18-JUL-24 01.34.09.948238000 AM,06-MAR-19 03.11.07.004556000 PM,"https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=VLDBG-GUID-2A1C159C-347E-457E-854F-4D67F89B83DB","APPROVED",05-MAR-19 04.55.43.682603000 PM,,"Auto Approved","","",50,""
173958409916595207236065521843510635949,27-FEB-19 11.39.06.336956000 AM,"",,"DIRK_VANHAUTE@AXI.BE","Strange replace functionality","STRANGE REPLACE FUNCTIONALITY","Replace function throws away the text to replace if the result would exceed the varchar2 limit","",173953428958303719878056542775406108590,"","","",04-APR-24 05.54.16.966158000 AM,"PUBLIC","replace truncate MAX_STRING_SIZE",7,"","H1EF2VP1HRFSF8IOS94F1BGIZ",23739157,4,,,"","","","","","","","","","","","","","",,"",06-AUG-19 03.41.43.436931000 PM,28-FEB-19 08.07.45.197147000 AM,"","APPROVED",28-FEB-19 08.07.45.195229000 AM,28-FEB-19 02.22.56.503924000 PM,"sharon.kennedy@oracle.com","","",23,""
178270525855740464815932061654759114990,09-APR-19 06.07.35.144986000 PM,"",,"MICHAEL.HICHWA@ORACLE.COM","Measuring Elapsed Time to Run a SQL Query in PL/SQL","MEASURING ELAPSED TIME TO RUN A SQL QUERY IN PL/SQL","How long does it take to run a SQL Query in PL/SQL?  This autonomous block gets a start time and end time and subtracts the two.  The answer is in about 1/10000 a second.","",178270525854966752291378698982947162350,"","","",04-AUG-24 05.04.17.545948000 PM,"PUBLIC","",37,"","H74H3DKGHZAJSZFK92PQKE970",26058119,4,,,"","","","","","","","","","","","","","",,"",04-AUG-24 05.04.17.545826000 PM,09-APR-19 06.11.34.006869000 PM,"","APPROVED",09-APR-19 06.07.35.140113000 PM,,"Auto Approved","","",101,""
175233610078687595709031173553943930330,11-MAR-19 04.13.46.307642000 PM,"",,"JOSH.SPIEGEL@ORACLE.COM","JSON_MERGEPATCH Examples (AskTom Office hours, March 12th, 2019)","JSON_MERGEPATCH EXAMPLES (ASKTOM OFFICE HOURS, MARCH 12TH, 2019)","Examples showing how JSON_MERGEPATCH can be used to modify JSON values.  From AskTom Office hours March 12th 2019: Updates with PLSQL.","",111776357908121,"","","",25-APR-24 11.57.51.774555000 PM,"PUBLIC","JSON updates mergepatch",30,"","H287CRK9NM1E2ABAQT96TYVSC",24285982,13,,,"","","","","","","","","","","","","","",,"",25-APR-24 11.57.51.774456000 PM,12-MAR-19 06.46.35.028838000 PM,"","APPROVED",,11-MAR-19 12.00.00.000000000 AM,"sharon.kennedy@oracle.com","","",87,"N"
175509818578805447537575780903924927396,14-MAR-19 07.44.07.843361000 AM,"",,"DEBPATRO@GMAIL.COM","WITH Clause Function","WITH CLAUSE FUNCTION","Basic example to test the working of function in with clause.","",175509818578708733472006610569948433316,"","","",14-JUL-24 02.36.06.651648000 PM,"PUBLIC","",6,"","H3QAMSZW7GZVV043FZ8N74HZW",24466257,3,,,"","","","","","","","","","","","","","",,"",02-NOV-22 05.40.50.293287000 PM,14-MAR-19 07.44.07.861034000 AM,"","APPROVED",14-MAR-19 07.44.07.831848000 AM,14-MAR-19 12.17.14.110910000 PM,"sharon.kennedy@oracle.com","","",88,"N"
178961385137148492889501720368219054661,16-APR-19 09.23.29.524211000 AM,"",,"CHRIS.SAXON@ORACLE.COM","How to Reclaim Space in Indexes","HOW TO RECLAIM SPACE IN INDEXES","Indexes in Oracle Database are self-managing. So most of the time you don't need to do anything to reclaim space in them. If a leaf block is empty, it'll become empty.

But there some cases where you may want to manually recover space after a delete with coalesce or shrink. View this script to find out more.","",178961385135962536660459769147832296005,"","","",04-NOV-23 02.43.29.846750000 PM,"PUBLIC","index",6,"","H89BK1Y40OLYPDB6GINIHINBB",26454246,1,,,"","","","","","","","","","","","","","",,"",11-FEB-22 11.38.44.615170000 AM,16-APR-19 12.47.50.849565000 PM,"","APPROVED",16-APR-19 12.47.50.839895000 PM,,"Auto Approved","","",46,""
179118556402051059118626784463406408405,17-APR-19 08.56.40.651614000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Show Compilation Parameters","SHOW COMPILATION PARAMETERS","Demonstration of (and resusable procedure) compilation parameters that can be referenced as conditional compilation flags ($$).","",179118556401913241575190716737489904341,"","","",28-JUL-24 06.21.31.055067000 AM,"PUBLIC","compile,parameters,conditional",3,"","H9HGA4NTEGVWGARTFWJJH4CPZ",26722263,4,,,"","","","","","","","","","","","","","",,"",22-APR-19 02.35.25.062443000 PM,22-APR-19 02.35.57.941507000 PM,"","APPROVED",17-APR-19 08.56.40.643126000 PM,,"Auto Approved","","",22,""
175334067874844826128723643768003807143,12-MAR-19 03.29.19.772516000 PM,"",,"BEDA.HAMMERSCHMIDT@ORACLE.COM","AskTom Office hours March 12th 2019: Updates with PLSQL","ASKTOM OFFICE HOURS MARCH 12TH 2019: UPDATES WITH PLSQL","AskTom Office hours March 12th 2019: Updates with PLSQL","",104086826594844,"","","",22-JUN-24 12.32.37.050812000 PM,"PUBLIC","JSON update  plsql",11,"","H3E2DIXCXZGJ70MCN6DYQ55V6",24351984,13,,,"","","","","","","","","","","","","","",,"",18-AUG-21 12.09.34.722698000 PM,12-MAR-19 06.45.21.699330000 PM,"","APPROVED",12-MAR-19 06.45.21.698041000 PM,,"Auto Approved","","",51,""
181078901660471451625321939059486631733,06-MAY-19 03.38.29.968046000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","SODA for PL/SQL: Read and Write Operations","SODA FOR PL/SQL: READ AND WRITE OPERATIONS","This script accompanies an Oracle Magazine article be published in mid-2019. In the meantime, enjoy learning how you can use the SODA for PL/SQL API to perform both read and write operations on documents in collections.","",17311327554654,"","","",09-JUN-24 04.41.31.551125000 PM,"PUBLIC","soda,json,collection,document",25,"","ICMPNJZTWGVV2C38RDRM45BSQ",27804940,4,,,"","","","","","","","","","","","","","",,"",10-JAN-24 07.35.57.307234000 AM,14-MAY-19 08.12.45.847459000 PM,"","APPROVED",06-MAY-19 05.26.31.451245000 PM,,"Auto Approved","","",81,""
177223799510425068769891894311919424213,30-MAR-19 06.00.02.361021000 PM,"",,"PCHEN0821@GMAIL.COM","Copy all tables from other owner","COPY ALL TABLES FROM OTHER OWNER","Create a stored procedure in order to copy all tables from other owner
The stored procedure will take a string as input for the schema name

","",177222528181239043560524298915649600416,"","","",16-AUG-24 06.24.02.928893000 AM,"PUBLIC","",50,"","H6KX20Z83B3KVZEJOUQRVQGXR",25490636,6,,,"","","","","","","","","","","","","","",,"",28-JUL-24 11.43.24.911477000 AM,30-MAR-19 06.24.49.638889000 PM,"","APPROVED",30-MAR-19 06.24.49.638308000 PM,31-MAR-19 12.46.58.768508000 PM,"sharon.kennedy@oracle.com","","",360,""
177136353774518584303374558220014715137,29-MAR-19 09.57.49.192337000 PM,"",,"DUKE.GANOTE@GMAIL.COM","LISTAGG on overflow truncate with count","LISTAGG ON OVERFLOW TRUNCATE WITH COUNT","Quick demonstration of the results of ON OVERFLOW WITH COUNT. The HR schema is used, but a CROSS JOIN used for JOBS in order to exceed the 32,767 EXTENDED character limitation.","",177121363549020834554304630217104881511,"","","",09-JUN-24 05.44.27.411713000 PM,"PUBLIC","on overflow truncate with count, LISTAGG",26,"","H6FFZRZY128TSPQPQJSA2YKG3",25449641,169493447418960980849622171218277482803,,,"","","","","","","","","","","","","","",,"",29-MAY-24 02.23.47.680353000 AM,29-MAR-19 09.57.49.198238000 PM,"","APPROVED",29-MAR-19 09.57.49.185374000 PM,30-MAR-19 02.52.28.980029000 PM,"sharon.kennedy@oracle.com","","",172,""
178404118973426505652428878160755046917,11-APR-19 12.45.15.265935000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Display columns as rows for any SQL query","DISPLAY COLUMNS AS ROWS FOR ANY SQL QUERY","If you have a SQL query that produces output that might wrap on a terminal, then this script will let you run it and print columns as rows rather than columns. 

The 'p_query' parameter contains the query to be run. If you want to run this from SQL*Plus or SQLcl, simply change the contents to ""&1"" to pass the SQL query as a parameter to this script","",178404118973269345295878976368043244037,"","","",15-AUG-24 05.14.22.050893000 AM,"PUBLIC","sql, pivot, dbms_sql, utilities",15,"","H8B7O864QHD914RNH7MOSCZ9J",26153061,1,,,"","","","","","","","","","","","","","",,"",05-AUG-24 12.59.00.136517000 PM,11-APR-19 12.45.15.291189000 AM,"","APPROVED",11-APR-19 12.45.15.261511000 AM,,"Auto Approved","","",188,""
173995569459189668352220432052829988151,27-FEB-19 08.12.00.665577000 PM,"",,"SDSTUBER@AEP.COM","COLLECT WITH DISTINCT AND ORDER BY negates the DISTINCT","COLLECT WITH DISTINCT AND ORDER BY NEGATES THE DISTINCT","Example showing the use of an ORDER BY clause inside the COLLECT function will negate the DISTINCT clause","",173995569458122186853500714491564434743,"","","",06-AUG-24 10.53.31.730541000 AM,"PUBLIC","",6,"","H1AAH319A2OK3SKN6B9EFTY3E",23715145,3,,,"","","","","","","","","","","","","","",,"",07-NOV-22 12.17.55.457917000 AM,27-FEB-19 08.12.00.691474000 PM,"","APPROVED",27-FEB-19 08.12.00.662986000 PM,27-FEB-19 09.50.35.330775000 PM,"sharon.kennedy@oracle.com","","",67,""
174177702803867415422421234134175888212,01-MAR-19 01.55.36.671504000 PM,"",,"MCECCI","DATAPROT","DATAPROT","How to use dbms_crypto to encrypt data. I use a view to drive CRUD operations transparently through ""instead of"" trigger. The encryption key is not stored in the database but passed from the client application at the beginning of the session","",6744711233149,"","","",12-AUG-24 05.56.06.175926000 PM,"PUBLIC","dbms_crypto encrypt decrypt instead of trigger",33,"","H1KSH3WQB9824WPC9Y4THLGR1",23808327,6,,,"","","","","","","","","","","","","","",,"",06-JUN-24 12.57.34.183257000 PM,01-MAR-19 03.22.12.248659000 PM,"","APPROVED",01-MAR-19 03.22.12.220025000 PM,01-MAR-19 03.38.23.461845000 PM,"sharon.kennedy@oracle.com","","",134,""
177838954615127567437331031315953912859,05-APR-19 03.41.05.084078000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","One Program Unit for Multiple Versions of Oracle","ONE PROGRAM UNIT FOR MULTIPLE VERSIONS OF ORACLE","This script demonstrates how to use conditional compilation and DBMS_DB_VERSION to take full advantage of the latest and greatest features of the database, even while you support older releases.","",177842509842318433719265514066113352991,"","","",04-APR-24 06.08.23.754157000 AM,"PUBLIC","conditional compliation,ifdef,dbms_db_version",4,"","H7FK981MU92BV2LYVYTAGKXWT",25825763,4,,,"","","","","","","","","","","","","","",,"",17-DEC-21 01.35.56.661390000 PM,05-APR-19 03.41.30.059011000 PM,"","APPROVED",05-APR-19 03.41.05.081027000 PM,,"Auto Approved","","",20,""
178950202193414466140815335577642251840,16-APR-19 06.34.31.697615000 AM,"",,"CONNOR.S.MCDONALD@ORACLE.COM","Quick and easy Data masking without additional license options","QUICK AND EASY DATA MASKING WITHOUT ADDITIONAL LICENSE OPTIONS","A simple routine obfuscate data to satisfy a requirement of not viewing meaningful data in (say) non-Production environments. Full blog post on this script at https://connor-mcdonald.com/2019/04/15/quick-and-easy-masking/","",178950202193322587778524623760364582464,"","","",05-AUG-24 07.13.36.426157000 AM,"PUBLIC","sql, translate, data masking, redaction, dbms_random",10,"","H87QGTXPQZIVZJ2WME4DCJMXE",26447794,6,,,"","","","","","","","","","","","","","",,"",02-SEP-22 07.39.50.593557000 AM,16-APR-19 06.34.31.706584000 AM,"","APPROVED",16-APR-19 06.34.31.694383000 AM,,"Auto Approved","","",68,""
179686407310916283939344787025387193437,23-APR-19 12.51.41.782680000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Inlining Optimization and PL/SQL Warnings","INLINING OPTIMIZATION AND PL/SQL WARNINGS","This script turns on inlining (optimization level 3) and also compile-time warnings. The warning messages make clear that nhested subprograms are inlined - and then REMOVED from the compiled code, precisely because they have been inlined. The code is then, clearly, executed!","",179702763593004898674680422255016153551,"","","",04-APR-24 06.08.39.273779000 AM,"PUBLIC","inlining,warnings,subprograms",4,"","IAD8A3YOW3SU6CILEORZ9KPU3",26771646,4,,,"","","","","","","","","","","","","","",,"",14-JUN-19 08.49.46.094746000 AM,23-APR-19 12.55.25.440160000 PM,"","APPROVED",23-APR-19 12.51.41.778843000 PM,,"Auto Approved","","",23,""
296592855080861470899946889769376172346,16-MAY-22 01.43.56.732472000 PM,"",,"CHRIS.SAXON@ORACLE.COM","How to archive data with Oracle Partitioning","HOW TO ARCHIVE DATA WITH ORACLE PARTITIONING","Scripts for SQL Ask TOM Office Hours session ""How to archive old data"" on 17th May 2022

https://asktom.oracle.com/pls/apex/asktom.search?oh=17423","",296594225803823921954623373282011404988,"","","",15-JUL-24 06.41.42.700253000 AM,"PUBLIC","",8,"","NHY80R2GUPLGNH8WE7PVFKDIC",144805898,8,,,"","","","","","","","","","","","","","",,"",11-MAY-24 04.07.03.932921000 AM,17-MAY-22 08.54.25.268944000 AM,"","APPROVED",17-MAY-22 08.54.25.268283000 AM,,"Auto Approved","","",63,""
296803439027683473558771233150380696556,18-MAY-22 01.53.31.211460000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Impact on forall performance when table has trigger","IMPACT ON FORALL PERFORMANCE WHEN TABLE HAS TRIGGER","The whole point of forall is to avoid context switches. That's a lot harder to do when you have a row level trigger defined on the table.","",3028666218807,"","","",24-JUL-24 05.13.30.594746000 PM,"PUBLIC","performance,bulk",3,"","NH5XDU0P2MM5BB11C6HZG6B7F",145068175,5,,,"","","","","","","","","","","","","","",,"",30-MAY-22 11.53.23.994946000 AM,18-MAY-22 01.56.22.577705000 PM,"","APPROVED",18-MAY-22 01.56.22.570162000 PM,,"Auto Approved","","",44,""
298741191069410939487269963912956263996,06-JUN-22 03.15.25.181973000 AM,"",,"ULYSSESMARION.PALOAY@DEPED.GOV.PH","The ALTER TABLE Statement","THE ALTER TABLE STATEMENT","Example on using the ALTER TABLE statement to add, modify, delete, and rename a column","",298737195755420075191766428090154785459,"","","",18-AUG-24 02.16.30.898214000 PM,"PUBLIC","DDL; ALTER TABLE, COLUMN",10,"","NLCQL8XTR3QI4N9UN9I4AEVW5",147961130,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",03-MAR-24 05.32.29.014697000 AM,06-JUN-22 01.53.08.119035000 PM,"","APPROVED",06-JUN-22 03.15.25.181768000 AM,06-JUN-22 12.30.39.694713000 PM,"sharon.kennedy@oracle.com","","",213,""
284151482332242695300034059123481544261,17-JAN-22 10.54.38.617319000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Remove columns from query output","REMOVE COLUMNS FROM QUERY OUTPUT","Examples of how to omit columns from queries using polymorphic table functions and SQL macros.

See the blog post ""How to write SELECT * EXCEPT queries in Oracle Database"" for more details.

https://blogs.oracle.com/sql/post/select-star-except-queries-in-oracle-database","",284149051420794003439533911904510184983,"","","",27-JUN-24 10.05.58.606342000 AM,"PUBLIC","SQL macros, polymorphic table functions, select except",11,"","MXWB3TM5QT994MF3OI6YRYS5X",124229470,1,,,"","","","","","","","","","","","","","",,"",20-MAR-24 01.26.21.186354000 PM,17-JAN-22 11.32.52.356460000 AM,"","APPROVED",17-JAN-22 11.32.52.355567000 AM,,"Auto Approved","","",71,""
284576587760772260051291777492142695157,21-JAN-22 12.57.43.104272000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Generate conditional compilation version package for your or any product","GENERATE CONDITIONAL COMPILATION VERSION PACKAGE FOR YOUR OR ANY PRODUCT","Oracle Database has DBMS_DB_VERSION, which can be used with $IF to conditionally include or exclude code for specific versions of the database. Wouldn't it be nice if you could do the same thing for APEX or for your very own product? This script generates and compiles such a package for you!

When you generate the package, you need to provide the name of the function that is called to get the current version of your product. In this script, we are generating a version package for use with APEX.","",7037071854502,"","","",19-JUL-24 10.22.40.274438000 PM,"PUBLIC","",21,"","MZFFF36TSZ9243UQ45NH2JSBZ",125449559,4,,,"","","","","","","","","","","","","","",,"",08-NOV-22 08.27.29.779880000 PM,09-NOV-22 01.18.31.016190000 AM,"","APPROVED",26-JAN-22 02.18.05.239343000 PM,,"Auto Approved","","",54,""
294925844041016932690871892521091992637,30-APR-22 02.10.50.257809000 PM,"",,"V.V.KRASNOZHON@GMAIL.COM","Correlated subquery for data analysis","CORRELATED SUBQUERY FOR DATA ANALYSIS","Find max cost value in channel for all promo and history","",294919653668114874764992833044678899131,"","","",19-AUG-24 10.02.23.534361000 AM,"PUBLIC","Correlated subquery",26,"","NGCA2KZ7TX7FHUKRPXH8E5EH2",143113280,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",20-FEB-24 12.54.51.089661000 AM,07-MAY-22 10.13.45.359035000 AM,"","APPROVED",07-MAY-22 10.12.12.169396000 AM,07-MAY-22 02.11.28.026321000 PM,"sharon.kennedy@oracle.com","","",89,""
293144593579128767314022350116354683914,13-APR-22 02.19.11.504699000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Cursor for loop that gets just one row? NO!","CURSOR FOR LOOP THAT GETS JUST ONE ROW? NO!","Some people like to use a cursor for loop to select a single row, because, well, they are lazy? Unfortunately, not in a good way. This script explores why.","",2718355637282,"","","",17-MAY-24 04.23.16.623084000 AM,"PUBLIC","select,explicit,implicit",6,"","NCBOGYR7G5LO6OBEGRTRB4NOL",139068549,4,,,"","","","","","","","","","","","","","",,"",17-MAY-24 04.23.16.622975000 AM,13-APR-22 02.34.12.653031000 PM,"","APPROVED",13-APR-22 02.34.12.652317000 PM,,"Auto Approved","","",46,""
290838352731266179041626225441151526382,22-MAR-22 10.54.33.239438000 AM,"",,"CHRIS.SAXON@ORACLE.COM","How to Write Powerful SQL That’s Easy to Maintain","HOW TO WRITE POWERFUL SQL THAT’S EASY TO MAINTAIN","Scripts for Database World presentation How to Write Powerful SQL That’s Easy to Maintain ","",290837283307437009245433357423906279727,"","","",15-JUL-24 06.40.31.011894000 AM,"PUBLIC","",10,"","M8MU1WQLCAWE1X7ARHPEWH08R",134525346,1,,,"","","","","","","","","","","","","","",,"",21-AUG-23 06.10.34.769425000 AM,28-APR-22 12.31.58.326867000 PM,"","APPROVED",28-APR-22 12.31.58.326370000 PM,,"Auto Approved","","",148,""
291774424271479167156428128467670408237,31-MAR-22 12.58.27.636903000 PM,"",,"JULFCAR@GMAIL.COM","Reseat Sequence Start Position","RESEAT SEQUENCE START POSITION","The script could be used to reseat the sequence start number to 1 or to required number.","",13103038709781,"","","",29-MAY-24 01.00.23.520798000 PM,"PUBLIC","",6,"","M96PECFF0VRP7HUHZYA23TV1J",136406181,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",03-APR-22 12.36.12.010092000 AM,31-MAR-22 01.33.18.673803000 PM,"","APPROVED",31-MAR-22 01.05.47.613679000 PM,31-MAR-22 07.54.12.360731000 PM,"sharon.kennedy@oracle.com","","",26,""
311437570748125652918172302687041395528,05-OCT-22 04.11.07.356527000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","The Interesting Intricacies of Insert","THE INTERESTING INTRICACIES OF INSERT","There are so many ways to insert one or more rows, and there are a number of gotchas you should be aware of.","",15242264840275,"","","",22-JUL-24 06.25.49.704079000 PM,"PUBLIC","sql,insert",9,"","N5M9M0EJHYIIQTUKBI07U8ACJ",167078794,4,,,"","","","","","","","","","","","","","",,"",23-OCT-23 08.56.45.814826000 AM,05-OCT-22 04.12.09.030702000 PM,"","APPROVED",05-OCT-22 04.12.09.022537000 PM,,"Auto Approved","","",71,""
311216516642309519309217759408480213313,03-OCT-22 01.17.01.115994000 PM,"",,"CHRIS.SAXON@ORACLE.COM","How to combine rows into CSV strings using LISTAGG","HOW TO COMBINE ROWS INTO CSV STRINGS USING LISTAGG","Examples of how to concatenate rows into a list of values using LISTAGG.","",311214933112912227002874516410487945454,"","","",11-JUL-24 10.44.01.210621000 AM,"PUBLIC","listagg",16,"","N5FBVFER8IEHGYEJCYUJ2GCW0",166791227,1,,,"","","","","","","","","","","","","","",,"",11-JUL-24 10.43.00.576839000 AM,04-OCT-22 08.53.34.455241000 AM,"","APPROVED",04-OCT-22 08.53.34.454509000 AM,,"Auto Approved","","",63,""
307700720255396034796214845811498586565,30-AUG-22 09.38.45.495013000 PM,"",,"DANILOPIAZZA@GMAIL.COM","ORA-08177 from a single session with serializable transactions","ORA-08177 FROM A SINGLE SESSION WITH SERIALIZABLE TRANSACTIONS","Inserting into a table from a single session with serializable transaction isolation level triggers an ""ORA-08177: can't serialize access for this transactions"" error after a number of rows have been inserted.","",307698471905841049883011908471012069812,"","","",21-AUG-24 08.46.34.641149000 AM,"PUBLIC","ora-08177 serializable transaction insert index-split",14,"","NZNWZCP58NTADBFT2Y8R6EG3L",160058421,169493447418960980849622171218277482803,,,"","","","","","","","","","","","","","",,"",30-AUG-22 10.05.14.173717000 PM,30-AUG-22 09.38.45.522779000 PM,"","APPROVED",30-AUG-22 09.38.45.493104000 PM,30-AUG-22 11.10.33.854062000 PM,"sharon.kennedy@oracle.com","","",70,""
303185203288649160532612550850773695674,18-JUL-22 04.13.10.206919000 PM,"",,"CHRIS.SAXON@ORACLE.COM","UPDATE-if-exists, INSERT-if-not-exists (aka UPSERT) data with MERGE","UPDATE-IF-EXISTS, INSERT-IF-NOT-EXISTS (AKA UPSERT) DATA WITH MERGE","Scripts for the SQL Office Hours session How to UPSERT (INSERT or UPDATE) rows with MERGE in Oracle Database https://asktom.oracle.com/pls/apex/asktom.search?oh=17904","",303183901104077368175405855719446725596,"","","",17-JUL-24 07.10.15.981787000 PM,"PUBLIC","merge",25,"","NSJLUH9648X31HKHXK8ONJT6T",154240731,45094612808877964163464134194291729594,,,"","","","","","","","","","","","","","",,"",17-JUL-24 07.10.15.981693000 PM,19-JUL-22 10.47.30.124872000 AM,"","APPROVED",19-JUL-22 10.47.30.124192000 AM,,"Auto Approved","","",95,""
305563165268532856813259112933407488779,10-AUG-22 10.17.03.235000000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Count rows in N-minute intervals","COUNT ROWS IN N-MINUTE INTERVALS","Learn different ways to group rows into N-minute buckets. For more details read the associated blog post https://blogs.oracle.com/sql/post/group-rows-into-n-minute-intervals-with-sql","",305561634191866565007038944266439785157,"","","",28-MAY-24 07.00.55.612309000 PM,"PUBLIC","",12,"","NWDTEI8CZQH9ERM92SRTCGS52",157254196,1,,,"","","","","","","","","","","","","","",,"",25-JAN-24 11.21.25.766543000 PM,11-AUG-22 08.50.07.988023000 AM,"","APPROVED",11-AUG-22 08.50.07.987040000 AM,,"Auto Approved","","",58,""
300336668686601125601833954329976518207,21-JUN-22 09.47.07.432798000 AM,"",,"CHRIS.SAXON@ORACLE.COM","How to work with NULL","HOW TO WORK WITH NULL","Scripts for the Ask TOM Office Hours session How to handle NULL in SQL

https://asktom.oracle.com/pls/apex/asktom.search?oh=17644","",300337588071737213130756437395525749573,"","","",20-AUG-24 01.17.43.933498000 AM,"PUBLIC","null",20,"","NNU4E5RE8EYHO2USI8GZLKL7O",150386559,1,,,"","","","","","","","","","","","","","",,"",15-MAY-24 09.47.46.041729000 AM,21-JUN-22 12.34.15.763585000 PM,"","APPROVED",21-JUN-22 12.34.15.762723000 PM,,"Auto Approved","","",60,""
322275097758942218062051295167747470259,17-JAN-23 10.29.39.674086000 AM,"",,"CHRIS.SAXON@ORACLE.COM","How to use DATEs, TIMESTAMPs, and INTERVALs in Oracle Database - SQL Office Hours script","HOW TO USE DATES, TIMESTAMPS, AND INTERVALS IN ORACLE DATABASE - SQL OFFICE HOURS SCRIPT","Scripts for the SQL Office Hours session https://asktom.oracle.com/pls/apex/asktom.search?oh=19484","",322275795129298133032123922846029193711,"","","",13-JUL-24 04.17.55.572743000 PM,"PUBLIC","date, timestamp, interval",12,"","OM1N8V1E14UJJEF65U1PO66KP",189352643,1,,,"","","","","","","","","","","","","","",,"",04-APR-24 02.05.28.699968000 AM,17-JAN-23 01.41.57.547153000 PM,"","APPROVED",17-JAN-23 01.41.57.545452000 PM,,"Auto Approved","","",113,""
317185918019880853249340986223963586349,29-NOV-22 04.55.50.701646000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Futuristic SQL Making the impossible possible","FUTURISTIC SQL MAKING THE IMPOSSIBLE POSSIBLE","Scripts for ""Futuristic SQL Making the impossible possible"" presentation","",317185845307036195733204309935521436680,"","","",28-MAY-24 06.51.57.488737000 PM,"PUBLIC","",8,"","OEU1LYKR715YY12N8IY8G4FOD",181191466,1,,,"","","","","","","","","","","","","","",,"",28-MAY-24 06.50.46.280496000 PM,29-NOV-22 04.59.44.531363000 PM,"","APPROVED",29-NOV-22 04.59.44.527996000 PM,,"Auto Approved","","",78,""
315719438407971908423839678611354986647,15-NOV-22 04.29.42.211907000 PM,"",,"CHRIS.SAXON@ORACLE.COM","SQL Office Hours Nov 2022 - How should we design a database? You decide! Final scripts","SQL OFFICE HOURS NOV 2022 - HOW SHOULD WE DESIGN A DATABASE? YOU DECIDE! FINAL SCRIPTS","Final script for the choices made in the SQL Office Hours session on 15 Nov 2022

https://asktom.oracle.com/pls/apex/asktom.search?oh=19064","",315715336219306557097450861142655765829,"","","",09-MAY-24 06.23.46.404194000 AM,"PUBLIC","",5,"","OCIOM0BJ2DY2EFVRYPAVW39O7",177359132,1,,,"","","","","","","","","","","","","","",,"",19-DEC-22 08.52.10.018766000 PM,15-NOV-22 05.02.39.733663000 PM,"","APPROVED",15-NOV-22 05.02.39.732795000 PM,,"Auto Approved","","",36,""
315721510757782755754422243718865798329,15-NOV-22 04.24.38.347623000 PM,"",,"CHRIS.SAXON@ORACLE.COM","SQL Office Hours Nov 2022 - How should we design a database? You decide! Opposite script","SQL OFFICE HOURS NOV 2022 - HOW SHOULD WE DESIGN A DATABASE? YOU DECIDE! OPPOSITE SCRIPT","Script for the opposite choices made in the SQL Office Hours session 15 Nov 2022 https://asktom.oracle.com/pls/apex/asktom.search?oh=19064","",315715336219306557097450861142655765829,"","","",19-JUL-24 03.15.46.825967000 AM,"PUBLIC","",,"","OCIM69OPZSAY79JMAASLTWF7H",177357430,1,,,"","","","","","","","","","","","","","",,"",,15-NOV-22 05.01.46.303509000 PM,"","APPROVED",15-NOV-22 05.01.46.302866000 PM,,"Auto Approved","","",26,""
315105739288490358264811554252213858159,09-NOV-22 07.25.19.216949000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Insert Select vs Forall","INSERT SELECT VS FORALL","This script explores one key difference between insert-select and forall: insert-select, as a SQL statement, is atomic. Either all rows are inserted or none. Forall allows you to insert rows even if one or more attempted inserts fail.","",315105739288178455403350979925139664751,"","","",28-MAY-24 06.46.22.239919000 PM,"PUBLIC","bulk,rowcount",2,"","OBIYXRJOCRX0F7XO6C0Q8RQPT",175731433,4,,,"","","","","","","","","","","","","","",,"",07-MAY-24 11.05.20.330866000 PM,09-NOV-22 07.27.57.358542000 PM,"","APPROVED",09-NOV-22 07.25.19.216700000 PM,,"Auto Approved","","",52,""
10003887692026477056106449128061426592,12-OCT-23 02.29.36.490236000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Table comparison scripts","TABLE COMPARISON SCRIPTS","Examples of how to compare two tables to find the different rows. For more details read the blog post https://blogs.oracle.com/sql/post/how-to-compare-two-tables-to-get-the-different-rows-with-sql or watch the Office Hours session https://asktom.oracle.com/pls/apex/asktom.search?oh=21908","",10003821515055771161977975543812882495,"","","",22-AUG-24 10.53.20.834941000 PM,"PUBLIC","full outer join, compare, group by, set operations",23,"","Q4O88NTFMZTJC33LE3RB3K9R",231274299,1,,,"","","","","","","","","","","","","","",,"",10-JUL-24 06.08.12.035947000 AM,17-OCT-23 09.43.02.871148000 AM,"","APPROVED",17-OCT-23 09.43.02.868623000 AM,,"Auto Approved","","",145,""
9177967971461154619608563607104654718,04-OCT-23 04.37.48.488454000 PM,"",,"CHRIS.SAXON@ORACLE.COM","Finding streaks with SQL","FINDING STREAKS WITH SQL","Scripts for the blog post https://blogs.oracle.com/sql/post/how-to-calculate-the-longest-and-current-consecutive-streaks-with-oracle-sql","",9177967971416424364282822327640526206,"","","",23-JUL-24 05.39.59.408916000 AM,"PUBLIC","match_recognize",5,"","P356FS31VC6QU6KX2WCPYNN4",228854020,7,,,"","","","","","","","","","","","","","",,"",31-MAR-24 05.59.30.066650000 PM,11-OCT-23 08.17.16.998570000 AM,"","APPROVED",11-OCT-23 08.17.16.996843000 AM,,"Auto Approved","","",36,""
4550388211852064509810624358437101474,21-AUG-23 09.19.42.303056000 AM,"",,"CHRIS.SAXON@ORACLE.COM","IF/THEN logic with CASE expressions in SQL - SQL Office Hours August 2023 Scripts","IF/THEN LOGIC WITH CASE EXPRESSIONS IN SQL - SQL OFFICE HOURS AUGUST 2023 SCRIPTS","Examples of IF-THEN logic in SQL using CASE expressions. For full session details head to https://asktom.oracle.com/pls/apex/asktom.search?oh=21448","",4549750475132759693665158975916637241,"","","",13-AUG-24 06.34.33.697071000 AM,"PUBLIC","case",8,"","HQLFB5P8V9EIP97NX6R1SJX2",222024895,1,,,"","","","","","","","","","","","","","",,"",19-MAY-24 12.30.24.599834000 PM,22-AUG-23 08.24.56.242097000 AM,"","APPROVED",22-AUG-23 07.49.15.053320000 AM,,"Auto Approved","","",71,""
479071676207793055891446504913674211,13-JUL-23 09.52.19.838978000 AM,"",,"CHRIS.SAXON@ORACLE.COM","How to change constraints - SQL Ask TOM Office Hours July 2023","HOW TO CHANGE CONSTRAINTS - SQL ASK TOM OFFICE HOURS JULY 2023","Scripts for the SQL Office Hours session on ""How to modify constraints in Oracle Database"" https://asktom.oracle.com/pls/apex/asktom.search?oh=21184.

For more details read the blog post https://blogs.oracle.com/sql/post/split-comma-separated-values-into-rows-in-oracle-database","",477042978321757942708636531361331783,"","","",22-JUL-24 05.46.22.599871000 PM,"PUBLIC","constraints, alter table",13,"","BQ5L1XKHZ7QGIEOP4P0R2LB5",217505752,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",20-DEC-23 01.07.19.769765000 PM,17-JUL-23 02.31.34.184696000 PM,"","APPROVED",17-JUL-23 02.31.34.183386000 PM,,"Auto Approved","","",43,""
338502570121338661808820562537572467551,21-JUN-23 06.49.39.614168000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Convert string to date using list of possible mask variations","CONVERT STRING TO DATE USING LIST OF POSSIBLE MASK VARIATIONS","What if you have a string but don't know the format? This package includes a list of masks (which you can modify) and tries to convert string to date in a loop, running through the masks.","",108350554046911,"","","",22-AUG-24 10.57.29.963533000 PM,"PUBLIC","conversion",8,"","PC1FYMPA2X4KJQHTJ32SEDS8J",215255136,4,,,"","","","","","","","","","","","","","",,"",22-AUG-24 10.57.29.963431000 PM,21-JUN-23 06.50.04.916507000 PM,"","APPROVED",21-JUN-23 06.49.58.718646000 PM,,"Auto Approved","","",53,""
334181987239449182091613461290663546322,11-MAY-23 10.05.52.419172000 AM,"",,"CHRIS.SAXON@ORACLE.COM","How to avoid gaps and overlaps in consecutive start-end dates - SQL Ask TOM Office Hours 2023 May script","HOW TO AVOID GAPS AND OVERLAPS IN CONSECUTIVE START-END DATES - SQL ASK TOM OFFICE HOURS 2023 MAY SCRIPT","Scripts for the SQL Ask TOM Office Hours 2023 May session. Discusses the pros & cons of storing consecutive periods as start-end date columns or one column and generating the periods.

https://asktom.oracle.com/pls/apex/asktom.search?oh=20624","",334180968096647108161023045237859159396,"","","",25-JUL-24 02.36.18.258049000 PM,"PUBLIC","",2,"","O6BJF2T1RFLP2DV4F1UMP383Z",209324468,1,,,"","","","","","","","","","","","","","",,"",16-MAY-23 11.48.08.239945000 AM,12-MAY-23 03.45.23.199775000 PM,"","APPROVED",12-MAY-23 03.45.23.198712000 PM,,"Auto Approved","","",21,""
336172349103532606017560074001986938065,30-MAY-23 11.41.15.697201000 AM,"",,"WILLIAM.ENDRESS@ORACLE.COM","Live SQL AV Schema DBMS_CLOUD.COPY_DATA","LIVE SQL AV SCHEMA DBMS_CLOUD.COPY_DATA","The AV schema is the schema used by many Live SQL analytic view tutorials.  THIS SCRIPT WILL NOT RUN ON LIVE SQL. Use this script to run tutorials on your local Autonomous Database Instance using DBMS_CLOUD.COPY_DATA.","",102778153013888,"","","",20-JUL-24 12.04.49.975454000 AM,"PUBLIC","anaytic view",8,"","O9A17HTJRTR20CHLWQ2ZR606K",212093634,92046253613466239499853282050038200150,,,"","","","","","","","","","","","","","",,"",20-MAY-24 06.41.18.266096000 PM,30-MAY-23 12.19.14.069507000 PM,"","APPROVED",30-MAY-23 11.42.24.317959000 AM,,"Auto Approved","","",57,""
337239654369822305666655451093907046043,09-JUN-23 04.43.14.292747000 PM,"",,"SISTEMAS.ORACLE@GMAIL.COM","View to Return Last User SQL PLAN STATISTICS","VIEW TO RETURN LAST USER SQL PLAN STATISTICS","Script to create a view that helps validate the last access plan used by the user followed by an example of use.

2023/Jun: Brazil gcdanilo 
","",337231100891637864482548328794050045273,"","","",09-AUG-24 09.30.53.333707000 AM,"PUBLIC","performance, tuning, sql, plan, statistics",40,"","PBHH8PB7221T4FMIMP68LNEST",213687414,15,,,"","","","","","","","","","","","","","",,"",07-MAY-24 11.01.41.580960000 PM,11-JUN-23 02.10.00.596374000 PM,"","APPROVED",11-JUN-23 02.10.00.594738000 PM,12-JUN-23 12.29.15.531762000 PM,"sharon.kennedy@oracle.com","","",33,""
325511441531200056656933154005683559292,17-FEB-23 10.00.59.863193000 AM,"",,"CHRIS.SAXON@ORACLE.COM","A beginner's guide to database constraints - SQL Office Hours Feb 2023 script","A BEGINNER'S GUIDE TO DATABASE CONSTRAINTS - SQL OFFICE HOURS FEB 2023 SCRIPT","Scripts for 21st Feb 2023 Ask TOM Office Hours session on database constraints https://asktom.oracle.com/pls/apex/asktom.search?oh=19784

Demonstrates primary keys (PK), unique constraints (UC), foreign keys (FK), not null (NN), and check constraints","",325511736654090086245001820539501677489,"","","",12-AUG-24 06.42.14.565272000 AM,"PUBLIC","create table, alter table, constraints",14,"","OSVQEISBSDNJUM9US1TZYUVVU",195031950,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",16-MAR-24 03.26.04.903685000 AM,21-FEB-23 09.51.37.898621000 AM,"","APPROVED",21-FEB-23 09.51.37.897351000 AM,,"Auto Approved","","",126,""
324100528256180370430942116566303554509,03-FEB-23 09.39.20.053419000 PM,"",,"SHARON.KENNEDY@ORACLE.COM","Checking the contents of ref cursors","CHECKING THE CONTENTS OF REF CURSORS","Live SQL cannot display the content of an object of type sys_refcursor with just a select. The example below illustrates how you can display the content using PL/SQL.","",324097695690419681255009006821859926069,"","","",09-JUL-24 04.48.42.255253000 PM,"PUBLIC","sys_refcursor",6,"","OPX47LSYGLX4EVYF95E6L3U2U",191991260,4,,,"","","","","","","","","","","","","","",,"",22-SEP-23 02.29.43.300198000 PM,03-FEB-23 09.46.19.334372000 PM,"","APPROVED",03-FEB-23 09.40.28.361900000 PM,,"Auto Approved","","",67,""
328230556033177003971807468059057204277,15-MAR-23 10.35.42.904168000 AM,"",,"CHRIS.SAXON@ORACLE.COM","Advanced Guide to Database Constraints - SQL Office Hours March 2023 scripts","ADVANCED GUIDE TO DATABASE CONSTRAINTS - SQL OFFICE HOURS MARCH 2023 SCRIPTS","Scripts for the SQL Ask TOM Office Hours March 2023 session. This discussed advanced uses for foreign keys (FKs) and materialized views (MVs) to apply business rules on your data, including how to

Ensure there's always a child row in parent-child relationships
Use foreign keys to ensure there's no gaps or overlaps in start/end dates
Check the total across child rows equals the value stored on the parent row

https://asktom.oracle.com/pls/apex/asktom.search?oh=19984","",328228990930763634525210718971931678588,"","","",30-JUL-24 04.12.38.856329000 AM,"PUBLIC","constraints, alter table, materialized views",7,"","OXEOZ8F13OTDLIC0IY51QURBM",198721877,45094643699731311561437923492705761850,,,"","","","","","","","","","","","","","",,"",30-JUL-24 04.12.38.856201000 AM,20-MAR-23 10.37.44.204163000 AM,"","APPROVED",20-MAR-23 10.37.44.202506000 AM,,"Auto Approved","","",44,""
225763448868444935780003642797063825500,07-JUL-20 10.50.31.392350000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","User-Defined Constructors for Object Types","USER-DEFINED CONSTRUCTORS FOR OBJECT TYPES","Every object type you'll ever meet comes with its own constructor - a function that instantiates and returns an instance of that type. But with that default, you have to provide a value for every attribute. Which can be very annoying (NULL, NULL, NULL). So PL/SQL let's you define your own constructors to give you more flexibility.","",11561263106884,"","","",30-APR-24 07.50.39.405522000 PM,"PUBLIC","object-oriented",7,"","KB9V3J5V27BBR1MSDDOW3BFAD",53864201,4,,,"","","","","","","","","","","","","","",,"",26-AUG-22 03.28.22.438017000 PM,07-JUL-20 11.07.13.179360000 AM,"","APPROVED",07-JUL-20 11.07.13.178535000 AM,,"Auto Approved","","",55,""
222337540620108776244132422636079301276,04-JUN-20 04.38.52.857743000 PM,"",,"BEDA.HAMMERSCHMIDT@ORACLE.COM","Automatic view creation over JSON data with JSON_Dataguide","AUTOMATIC VIEW CREATION OVER JSON DATA WITH JSON_DATAGUIDE","This scripts shows how a relational view over JSON data can be automatically generated.
When running JSON_Dataguide the entire JSON data gets sampled and all key names and the value types are being identified. This information is then being used to automatically create a JSON_TABLE view. ","",2840947743285,"","","",12-JUL-24 12.25.57.657064000 AM,"PUBLIC","JSON Dataguide JSON_TABLE view",34,"","J6SCZWHKMCRK2B7GGQ88FUQGN",51647177,13,,,"","","","","","","","","","","","","","",,"",21-JAN-24 01.24.28.734371000 PM,04-JUN-20 04.47.25.636741000 PM,"","APPROVED",04-JUN-20 04.47.25.636106000 PM,,"Auto Approved","","",84,""
228385121910786433776398907511048654276,01-AUG-20 02.03.48.569015000 PM,"",,"ARNAB.PANJA@GMAIL.COM","An Introduction - Collections and Ref Cursors","AN INTRODUCTION - COLLECTIONS AND REF CURSORS","This script gives an introduction of how to use a nested table collection and store results of a dynamic query into this nested table collection and how to pass this result into another procedure as argument with the help of ref cursors. ","",228379802084649103938230885815696365901,"","","",01-AUG-24 08.09.40.750039000 PM,"PUBLIC","Collections, Ref Cursors",25,"","KGVTI7ODMDRI7WZSKG8RAS8YI",55680716,4,,,"","","","","","","","","","","","","","",,"",24-MAY-24 11.20.07.170228000 AM,03-AUG-20 06.56.28.053142000 PM,"","APPROVED",03-AUG-20 06.52.48.921151000 PM,03-AUG-20 11.06.44.253149000 PM,"sharon.kennedy@oracle.com","","",147,""
220265332253289603048709282327991849786,15-MAY-20 07.51.23.349741000 PM,"",,"SUMATHIAJITHKUMAR@GMAIL.COM","Scope of the variable","SCOPE OF THE VARIABLE","Example of scope of variable in the nested anonymous blocks
","",220265332250837901486530814361687724858,"","","",04-APR-24 06.28.42.065067000 AM,"PUBLIC","",1,"","J3QWN7NQZCF7MSHB9JJU8VVS6",49927561,4,,,"","","","","","","","","","","","","","",,"",18-OCT-23 07.15.25.122808000 AM,16-MAY-20 01.41.07.975008000 PM,"","APPROVED",16-MAY-20 01.41.07.968207000 PM,17-MAY-20 01.30.26.990052000 PM,"sharon.kennedy@oracle.com","Thanks for the lengthy description but you can actually add an annotation to the statement.  Please edit your saved script and click the edit the statement.  The annotation then shows to the right of the statement.","",30,""
220034778604770782721749526958326846833,13-MAY-20 02.49.39.992751000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","For StackOverflow - Unable to pass multiple arguments to PL/SQL Cursor","FOR STACKOVERFLOW - UNABLE TO PASS MULTIPLE ARGUMENTS TO PL/SQL CURSOR","https://stackoverflow.com/questions/61776918/unable-to-pass-multiple-arguments-to-pl-sql-cursor/61777657#61777657","",220028870588547246054708718833362406203,"","","",04-APR-24 06.11.45.906437000 AM,"PUBLIC","",4,"","J228LJ2QCJRPL6NT6G4T7SXY7",49705000,4,,,"","","","","","","","","","","","","","",,"",17-AUG-21 07.01.08.304486000 PM,13-MAY-20 02.49.39.994308000 PM,"","APPROVED",13-MAY-20 02.49.39.992484000 PM,,"Auto Approved","","",32,""
218920086172077241409260133099326054978,02-MAY-20 10.39.59.218138000 PM,"",,"BEDA.HAMMERSCHMIDT@ORACLE.COM","Converged Database: JSON (May 7th 2020, Database at home)","CONVERGED DATABASE: JSON (MAY 7TH 2020, DATABASE AT HOME)","JSON Database At Home May 7th 2020","",7199829425627,"","","",16-JUN-24 12.08.45.820133000 PM,"PUBLIC","Database At Home, JSON",69,"","J1GJVH69FFFLF8WH18N9JWNCT",48669200,13,,,"","","","","","","","","","","","","","",,"",05-OCT-23 09.47.59.699013000 AM,07-MAY-20 07.19.35.796317000 AM,"","APPROVED",04-MAY-20 07.17.02.780469000 AM,,"Auto Approved","","",126,""
221029251813656763617556325308708838085,23-MAY-20 04.13.45.779143000 AM,"",,"EDUARD.TUREA@ICLOUD.COM","Dynamic formula evaluation using Polymorphic Functions","DYNAMIC FORMULA EVALUATION USING POLYMORPHIC FUNCTIONS","An example of how to use polymorphic table functions to dynamically evaluate formulas.
This solution was used to solve the following problem where in the first column there is a mathematical expression, the sub-sequential columns store the values for every variable found in the expression. The last column must show the result. The expression has values like ""COL1+COL2"" or ""COL1+COL2*COL3"". More details here https://eturea.wordpress.com/2020/05/24/dynamic-formula-evaluation-using-polymorphic-table-functions/ .","",221033942080964128460601109554186073346,"","","",05-JUN-24 02.00.26.893300000 PM,"PUBLIC","Polymorphic Functions",33,"","J49A5HBGY9NT0BJTA0346E6P3",50759114,169493447418960980849622171218277482803,,,"","","","","","","","","","","","","","",,"",13-MAY-23 08.57.57.444781000 AM,25-MAY-20 04.54.18.754440000 PM,"","APPROVED",25-MAY-20 04.54.18.753964000 PM,26-MAY-20 01.21.17.474053000 PM,"sharon.kennedy@oracle.com","Can you please run and re-save this so that the results will be included.","",171,""
213336120820980846665366632202890786461,10-MAR-20 11.20.55.537560000 AM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Application Alerts Utility","APPLICATION ALERTS UTILITY","A working prototype for an application alerts utility: specify a triggering event (based on a query or a PL/SQL expression) and then take the specified actions when it is triggered.

Note: DBMS_SCHEDULER and APEX_UTIL are used in this utility and are not available from LiveSQL. so you will want to download this script to install and try it out in your own database.","",213333117986309046311832338034305184034,"","","",03-APR-24 02.37.50.088450000 PM,"PUBLIC","",13,"","JSCH2CBAVOQBG3N58T43P37BF",43779022,4,,,"","","","","","","","","","","","","","",,"",02-NOV-22 03.03.07.048444000 AM,10-MAR-20 11.23.00.199518000 AM,"","APPROVED",10-MAR-20 11.23.00.196511000 AM,,"Auto Approved","","",125,""
215565292756897901866531911061111177519,31-MAR-20 07.49.03.188454000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Super Simple Execution Tracing Package","SUPER SIMPLE EXECUTION TRACING PACKAGE","Does the basics and little more. I created this to demonstrate some of the points in my blog post: https://stevenfeuersteinonplsql.blogspot.com/2020/03/why-dbmsoutputputline-should-not-be-in.html","",11321996325941,"","","",03-MAY-24 12.12.50.218720000 AM,"PUBLIC","",18,"","JVW586T12XO8G1INCSCBHKYXX",45254334,4,,,"","","","","","","","","","","","","","",,"",25-NOV-22 09.43.42.066716000 PM,31-MAR-20 08.05.54.990765000 PM,"","APPROVED",31-MAR-20 07.52.49.402498000 PM,,"Auto Approved","","",66,""
210311653704245519792847451852278204206,10-FEB-20 03.48.09.435772000 PM,"",,"BEDA.HAMMERSCHMIDT@ORACLE.COM","AskTom Office Hours March 2020: JSON data modeling (Moon Landing)","ASKTOM OFFICE HOURS MARCH 2020: JSON DATA MODELING (MOON LANDING)","AskTom Office Hours March 2020: JSON data modeling (Moon Landing)

Understand the benefits, limitations and implications of using a hierarchical data model like JSON.","",3644291473257,"","","",02-JUN-24 04.17.36.208298000 PM,"PUBLIC","JSON SQL/JSON SQL JSON_Table ""Data models"" ""data modelling""",60,"","JR7YWSQ1PFLJG6HG31GTJ9VKN",43435973,13,,,"","","","","","","","","","","","","","",,"",22-FEB-24 07.52.24.306850000 PM,09-MAR-20 06.23.44.777991000 PM,"","APPROVED",09-MAR-20 06.23.44.777271000 PM,,"Auto Approved","","",95,""
216189985018397096277988963481385832199,06-APR-20 07.22.27.852944000 PM,"",,"STEVEN.FEUERSTEIN@GMAIL.COM","Errors with FORALL with Sparse Collections","ERRORS WITH FORALL WITH SPARSE COLLECTIONS","If one or more of your bind collections are sparse (an undefined index value between lowest and highest), then the simple ""IN low .. high"" will not work. But the error you get may be different than you are expecting!","",216191365289637487661555253751182926109,"","","",24-JUL-24 05.13.26.129179000 PM,"PUBLIC","collection,forall,sparse",4,"","JWXA2YB4J71Q1L9EXIPUY09X1",45914839,4,,,"","","","","","","","","","","","","","",,"",31-MAY-21 09.27.26.886898000 PM,06-APR-20 07.22.27.855027000 PM,"","APPROVED",06-APR-20 07.22.27.852604000 PM,,"Auto Approved","","",36,""
214295511773555859620218190407559423095,19-MAR-20 03.38.03.000708000 PM,"",,"DIRK_STRACK@YAHOO.DE","Package Numbers_Utl for simple, flexible and functional number conversions and validation.","PACKAGE NUMBERS_UTL FOR SIMPLE, FLEXIBLE AND FUNCTIONAL NUMBER CONVERSIONS AND VALIDATION.","In an international APEX app, the NLS settings influence the behavior of TO_NUMBER and TO_CHAR calls
and can cause conversion errors.
When the app passes floating-point numbers via (hidden) APEX Items to and from javascript functions
or to web-services, the decimal and grouping characters are constants! 
These constants have to be passed to the function to_char and to_number as the second parameter (nlsparam).
That can be problematic, 
1. because the precision and scale have to be fixed when formats with the grouping characters are needed.
Since there is no combination of the FM9 mask with the G, I had to find a more flexible solution for number conversions.
2. javascript floating-point numbers can be surprisingly long before or after the decimal point.

I found a simple method that forms a fitting format mask on the fly.
The TRANSLATE function call maps the digits and signs to 9 and removes blank and currency characters
The REGEXP_REPLACE function call detects the exponent part and prepares the format string.

I explored and expanded the method into the package numbers_utl
","",214291869809046361616664900217946661215,"","","",04-APR-24 10.48.01.084145000 AM,"PUBLIC","#oraclapex #oraplsql",5,"","JT1FDGOHU1S8C12P8S0PHCCON",44406577,333804701807972275005933417866206051852,,,"","","","","","","","","","","","","","",,"",30-SEP-23 03.48.40.093331000 AM,20-MAR-20 01.15.35.592781000 PM,"","APPROVED",20-MAR-20 04.33.26.840104000 AM,20-MAR-20 01.16.27.096291000 PM,"sharon.kennedy@oracle.com","","",93,""
